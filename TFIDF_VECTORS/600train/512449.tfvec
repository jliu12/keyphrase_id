garbage:0.0333585542749
collector:0.026730653695
hlc:0.0196595948503
heap:0.0195480203938
struct:0.0179081795244
gc:0.0168078388843
stack:0.0164596830181
locals:0.0139907081842
mercury:0.0129913718854
uncooperative:0.0124800035414
arg1:0.00952455355099
compiler:0.0092562084953
pointer:0.00873841526118
structs:0.00844401243754
stackchain:0.00842554065011
local1:0.00842554065011
conservative:0.00824550800001
arg1type:0.00702128387509
boehm:0.00699535409212
collection:0.00678422849969
shadow:0.00671556732163
arg2:0.00634735943183
trace:0.00609628462489
agc:0.00595284596937
gnu:0.00571644442205
stack_chain:0.00561702710007
scopes:0.00552004481165
erent:0.0053439446329
thread:0.00501601667854
gcc:0.00494457584023
void:0.00472412894383
di:0.00470182681937
liveness:0.00454842230561
compiling:0.00439567856297
arg2type:0.00421277032505
fixed_fields:0.00421277032505
foo_frame:0.00421277032505
local1type:0.00421277032505
heap_pointer:0.00421277032505
local2:0.00421277032505
copying:0.00396184175746
chain:0.00383779476861
grade:0.0038228290022
threads:0.00368648470312
sather:0.00357170758162
extern:0.00340363732947
pointers:0.00337731156372
portable:0.00332634861997
benchmarks:0.00331687580848
optimizations:0.00329440925105
safe:0.00316786522438
mutator:0.00316650466408
exhaustion:0.00316650466408
calls:0.00297594335783
reclamation:0.00292894586377
nested:0.00290878349169
prev:0.00281115416812
rotd:0.00280851355004
heap_gc_threshold:0.00280851355004
rettype:0.00280851355004
msil:0.00280851355004
frame:0.00280459714568
byte:0.0027947497352
scope:0.00276848671651
exited:0.00276002240582
volatile:0.00248924010693
registers:0.0024611140096
multithreading:0.00237618732162
benchmark:0.00236636962339
language:0.002357323981
cient:0.00233502987727
faq:0.00226909155298
uninitialized:0.00226909155298
register:0.00221855945949
accurate:0.00221385248441
stacks:0.00217986094911
drawbacks:0.00213595071991
cult:0.00212604590371
fields:0.00211868926308
mailing:0.00211100310938
posix:0.00211100310938
collec:0.00199867259775
zeroing:0.00199867259775
collectors:0.00195263057585
256k:0.00195263057585
cache:0.00195035300073
multithreaded:0.00192416405611
30000:0.0019114145011
safety:0.0019084781577
allocation:0.00188800607494
wisdom:0.00184001493722
implementors:0.00184001493722
64kb:0.00184001493722
code:0.00183271255519
native:0.00183252091858
traverse:0.00181995531348
assembler:0.00180863421883
allocates:0.001801306791
debugger:0.00177955893959
chase:0.00175247067075
ml:0.00172482532886
casts:0.00163928038274
foo:0.00162003961788
interfacing:0.00162003961788
threading:0.00160168059625
goldberg:0.00156730405523
insert:0.0015620776163
discriminant:0.00150626874376
1200:0.0014923482937
live:0.00147943664612
conforming:0.00147888985617
incrementing:0.00147888985617
virtual:0.0014780907595
usenix:0.00146586311256
declared:0.00145497733534
frames:0.00143135861828
unions:0.00142911110551
caller:0.00141756069563
gc_check:0.00140425677502
becket:0.00140425677502
zoltan:0.00140425677502
libc:0.00140425677502
name_frame:0.00140425677502
garbage_collect:0.00140425677502
lord:0.00140425677502
to_heap:0.00140425677502
munging:0.00140425677502
1200mhz:0.00140425677502
from_heap:0.00140425677502
dewar:0.00140425677502
dowd:0.00140425677502
rossberg:0.00140425677502
traverse_stack:0.00140425677502
new_object:0.00140425677502
oro:0.00140425677502
foo_trace:0.00140425677502
woody:0.00140425677502
allocations:0.00139539366118
java:0.00138098392694
tail:0.00137560422078
threshold:0.00132459332272
calling:0.00132394295228
inserting:0.00131897691133
threaded:0.00131702567252
synchronization:0.00127926492287
portability:0.00127463528197
multithread:0.00126947188637
dling:0.00126947188637
jits:0.00126947188637
somogyi:0.00126947188637
cul:0.00126947188637
debian:0.00126947188637
ismm:0.00126947188637
fancy:0.00126947188637
cqueens:0.00126947188637
cdb:0.00126947188637
recursion:0.00126190291121
uniprocessor:0.00124356570481
berkeley:0.00122885044513
collect:0.00122618540459
front:0.00120470338348
amortized:0.00119415512375
deriv:0.00119056919387
excep:0.00119056919387
70000:0.00119056919387
tarditi:0.00119056919387
35000:0.00119056919387
rary:0.00119056919387
retention:0.00119056919387
cooperation:0.00118754325175
assignments:0.00117155821223
tagged:0.00116830018443
assembly:0.00116830018443
don:0.00116349293816
environments:0.00115328264917
os:0.00114391568732
everything:0.00113802920518
allocating:0.00113802920518
andreas:0.00113802920518
mostly:0.00113591311287
jit:0.00113454577649
mmc:0.00113454577649
256mb:0.00113454577649
deforestation:0.00113454577649
tweaking:0.00113454577649
extra:0.00113339765481
l1:0.00113222179055
back:0.00111017281164
inserted:0.00110927972974
athlon:0.00109105887678
dispute:0.00109105887678
mized:0.00109105887678
tracing:0.00107805006294
su:0.00107630879067
link:0.00106315140297
crypt:0.00105550155469
fragile:0.00105550155469
qsort:0.00105550155469
o5:0.00105550155469
sword:0.00105550155469
garbage collection:0.0350767449701
back end:0.0150120777065
accurate garbage:0.0138534315461
heap pointer:0.0123141613743
conservative collection:0.0123141613743
end compiler:0.0114274667649
the stack:0.0104967802406
the collector:0.0102128958454
collection in:0.0101220483646
conservative collector:0.00983170723617
the garbage:0.00950135963318
to trace:0.00928526033245
pointer containing:0.00923562103076
shadow stack:0.00923562103076
stack chain:0.00923562103076
gc check:0.00923562103076
uncooperative environment:0.008427177631
an uncooperative:0.008427177631
the heap:0.00771906904846
heap gc:0.00769635085896
gc threshold:0.00769635085896
hlc agc:0.00769635085896
the hlc:0.00769635085896
containing variables:0.00714480304262
stack frame:0.00714480304262
garbage collector:0.00708498213909
the boehm:0.00702264802583
copying collector:0.00702264802583
c code:0.00698156754925
di erent:0.00659766560433
pointer variables:0.00654762513814
the mercury:0.00634859264719
frame struct:0.00615708068717
compiling to:0.00615708068717
nested scopes:0.00615708068717
uncooperative environments:0.00615708068717
struct stackchain:0.00615708068717
type accurate:0.00615708068717
locals arg1:0.00615708068717
hlc gc:0.00615708068717
nested scope:0.00615708068717
locals local1:0.00615708068717
the back:0.0060262455744
collector is:0.00595400253552
the c:0.00572879884705
global variable:0.00567805603055
struct for:0.00561811842067
compiler back:0.00561811842067
do any:0.00545635428178
contain pointers:0.00530272867484
mercury compiler:0.00530272867484
c stack:0.00530272867484
such variables:0.00527853312955
each nested:0.00507887411775
gnu c:0.00506070152792
virtual machine:0.00504333133337
local variables:0.00483320399503
for garbage:0.00464312131812
any heap:0.00461781051538
arg1type arg1:0.00461781051538
fully type:0.00461781051538
mostly conservative:0.00461781051538
arg1 and:0.00461781051538
in uncooperative:0.00461781051538
machine stack:0.00461781051538
shadow stacks:0.00461781051538
liveness accuracy:0.00461781051538
hlc hlc:0.00461781051538
struct foo_frame:0.00461781051538
accurate collector:0.00461781051538
threshold variables:0.00461781051538
al conservative:0.00461781051538
or mostly:0.00461781051538
liveness accurate:0.00461781051538
collection function:0.00461781051538
their scope:0.00453906482019
might contain:0.00422282650364
thread local:0.0042135888155
proper tail:0.0042135888155
current implementation:0.0042032887128
collection and:0.00417580297263
source language:0.00404856122234
non portable:0.00397704650613
garbage collect:0.00397704650613
for heap:0.00397704650613
our technique:0.00383680289976
in registers:0.00382357173175
our current:0.00381261108343
and locals:0.00380915558831
heap allocation:0.00380915558831
collector to:0.0036788817617
to heap:0.0036788817617
collection techniques:0.0036788817617
code to:0.00366575391057
not yet:0.0035714968941
the accurate:0.00355980937285
tail recursion:0.00348234098859
trace the:0.00340721203625
native code:0.00340429861514
global register:0.00333543531198
this technique:0.00332029146324
to c:0.00330034599687
programming language:0.00327356607691
pointers in:0.0031202537373
interfacing directly:0.00307854034359
hlc grade:0.00307854034359
pointer after:0.00307854034359
arg1 arg2:0.00307854034359
conforming c:0.00307854034359
arg1 arg2type:0.00307854034359
local1 local2:0.00307854034359
collector safety:0.00307854034359
portable techniques:0.00307854034359
as locals:0.00307854034359
berkeley sather:0.00307854034359
strictly conforming:0.00307854034359
world approach:0.00307854034359
heap exhaustion:0.00307854034359
rettype foo:0.00307854034359
boehm collector:0.00307854034359
handle multithreaded:0.00307854034359
extra gc:0.00307854034359
gcc mailing:0.00307854034359
arg1type and:0.00307854034359
trace field:0.00307854034359
scopes would:0.00307854034359
agc hlc:0.00307854034359
heap space:0.00307854034359
foo arg1type:0.00307854034359
follows struct:0.00307854034359
language implementors:0.00307854034359
struct field:0.00307854034359
free heap:0.00307854034359
end framework:0.00307854034359
invoke gc:0.00307854034359
uninitialized fields:0.00307854034359
stackchain struct:0.00307854034359
gc hlc:0.00307854034359
reclamation in:0.00307854034359
boehm et:0.00307854034359
simple garbage:0.00307854034359
accepted wisdom:0.00307854034359
extern byte:0.00307854034359
fixed fields:0.00307854034359
erent hardware:0.00307854034359
arg2type arg2:0.00307854034359
scope has:0.00307854034359
gcc global:0.00307854034359
independent debugger:0.00307854034359
chain list:0.00307854034359
stackchain fixed_fields:0.00307854034359
zeroing out:0.00307854034359
other threads:0.00307684666216
function would:0.00307684666216
the shadow:0.00307684666216
the gcc:0.00307684666216
the code:0.00301585824177
of conservative:0.00299859137358
and liveness:0.00292951492261
fields of:0.00290704595972
the to:0.00283902801527
of pointer:0.00283902801527
this approach:0.0028157518212
extra synchronization:0.00280905921033
mercury to:0.00280905921033
tag free:0.00280905921033
normal c:0.00280905921033
compiling mercury:0.00280905921033
adding code:0.00280905921033
stacks have:0.00280905921033
collector 4:0.00280905921033
scope this:0.00280905921033
synchronization code:0.00280905921033
handle nested:0.00280905921033
own stack:0.00280905921033
of structs:0.00280905921033
collection could:0.00280905921033
64kb l1:0.00280905921033
calling convention:0.00280905921033
os calls:0.00280905921033
mailing list:0.00280905921033
of locals:0.00280905921033
global heap:0.00280905921033
the chain:0.00279132953867
t do:0.00278557809973
of di:0.00278557809973
implemented this:0.00276055864488
di cult:0.00275957678537
a global:0.00269913244386
new object:0.00269126772096
the virtual:0.00265260984665
generate e:0.00265136433742
safe point:0.00265136433742
compiler however:0.00265136433742
collector on:0.00265136433742
has exited:0.00265136433742
in strictly:0.00265136433742
register variables:0.00265136433742
statically known:0.00265136433742
because programmers:0.00265136433742
accurate garbage collection:0.0145654654928
garbage collection in:0.0123996281878
pointer containing variables:0.00971031032851
back end compiler:0.00944196082112
an uncooperative environment:0.00890185077079
the back end:0.00873186334655
heap gc threshold:0.00809192527376
in an uncooperative:0.00741820897566
collection in an:0.00702401270676
each nested scope:0.006473540219
might contain pointers:0.006473540219
a global variable:0.00595515955117
the c stack:0.00593456718053
in the mercury:0.00593456718053
the mercury compiler:0.0056192101654
our current implementation:0.00552219018468
from the back:0.00522176812672
the garbage collection:0.00507986107347
the garbage collector:0.00485586886013
the virtual machine:0.00485586886013
the shadow stack:0.00485515516425
any heap allocation:0.00485515516425
the stack chain:0.00485515516425
gc threshold variables:0.00485515516425
the heap pointer:0.00485515516425
t do any:0.00485515516425
do any heap:0.00485515516425
arg1 and locals:0.00485515516425
in uncooperative environments:0.00485515516425
stack frame struct:0.00485515516425
pointer variables such:0.00485515516425
or mostly conservative:0.00485515516425
the accurate collector:0.00485515516425
virtual machine stack:0.00485515516425
the conservative collector:0.00485515516425
locals arg1 and:0.00485515516425
the to heap:0.00485515516425
contain pointers in:0.00485515516425
al conservative collector:0.00485515516425
compiling to c:0.00485515516425
and locals local1:0.00485515516425
fully type accurate:0.00485515516425
compiler back end:0.00485515516425
garbage collection function:0.00485515516425
the source language:0.00476412764093
proper tail recursion:0.00445092538539
in the garbage:0.00445092538539
variables that might:0.00445092538539
that might contain:0.00445092538539
variety of di:0.00421440762405
the stack frame:0.00421440762405
local variables in:0.00391632609504
garbage collection techniques:0.00391632609504
in our current:0.00377377043781
for garbage collection:0.00371988845635
garbage collection and:0.0035730957307
way to handle:0.00351153182644
to trace the:0.00351153182644
have implemented this:0.00351153182644
points to the:0.00345556790996
on the stack:0.00327444875496
uses the boehm:0.0032367701095
foo arg1type arg1:0.0032367701095
and liveness accuracy:0.0032367701095
the normal c:0.0032367701095
type accurate garbage:0.0032367701095
the from heap:0.0032367701095
arg1type arg1 arg2type:0.0032367701095
our technique section:0.0032367701095
trace the stack:0.0032367701095
handle multithreaded applications:0.0032367701095
handle nested scopes:0.0032367701095
values of pointer:0.0032367701095
garbage collector safety:0.0032367701095
to gc check:0.0032367701095
hlc agc hlc:0.0032367701095
source language compiler:0.0032367701095
strictly conforming c:0.0032367701095
hlc gc hlc:0.0032367701095
erent hardware architectures:0.0032367701095
collector safety a:0.0032367701095
global register variables:0.0032367701095
of conservative collection:0.0032367701095
cache the values:0.0032367701095
global heap pointer:0.0032367701095
in strictly conforming:0.0032367701095
as follows struct:0.0032367701095
struct for each:0.0032367701095
gc hlc agc:0.0032367701095
non portable techniques:0.0032367701095
high level c:0.0032367701095
benchmarks the conservative:0.0032367701095
traverse the chain:0.0032367701095
shadow stacks have:0.0032367701095
allocates memory by:0.0032367701095
invoke gc check:0.0032367701095
any pointer containing:0.0032367701095
don t do:0.0032367701095
out the stack:0.0032367701095
dynamic storage reclamation:0.0032367701095
their scope has:0.0032367701095
collection for strongly:0.0032367701095
the heap gc:0.0032367701095
back end framework:0.0032367701095
the hlc agc:0.0032367701095
frame struct field:0.0032367701095
heap pointer after:0.0032367701095
pointer after each:0.0032367701095
collection could occur:0.0032367701095
c compiler could:0.0032367701095
have any direct:0.0032367701095
conservative or mostly:0.0032367701095
code would need:0.0032367701095
the gcc mailing:0.0032367701095
cooperation from the:0.0032367701095
programming language implementors:0.0032367701095
stack chain list:0.0032367701095
approach the collector:0.0032367701095
the boehm et:0.0032367701095
a copying collector:0.0032367701095
garbage collection could:0.0032367701095
statically known to:0.0032367701095
collection in uncooperative:0.0032367701095
the hlc grade:0.0032367701095
front end compiler:0.0032367701095
nested scopes would:0.0032367701095
since the c:0.0032367701095
the world approach:0.0032367701095
the extra synchronization:0.0032367701095
stack and registers:0.0032367701095
storage reclamation in:0.0032367701095
with conservative collection:0.0032367701095
di erent hardware:0.0032367701095
a struct for:0.0032367701095
code to zero:0.0032367701095
such as locals:0.0032367701095
reclamation in c:0.0032367701095
arg1 arg2type arg2:0.0032367701095
loops that don:0.0032367701095
conservative collector is:0.0032367701095
ml to c:0.0032367701095
tag free garbage:0.0032367701095
the trace field:0.0032367701095
but with our:0.0032367701095
conservative collector 4:0.0032367701095
of compiling to:0.0032367701095
adding code at:0.0032367701095
stacks have been:0.0032367701095
rettype foo arg1type:0.0032367701095
et al conservative:0.0032367701095
scope has exited:0.0032367701095
scopes would be:0.0032367701095
zeroing out the:0.0032367701095
boehm et al:0.0032367701095
to handle multithreaded:0.0032367701095
machine independent debugger:0.0032367701095
when compiling to:0.0032367701095
for heap exhaustion:0.0032367701095
extra synchronization code:0.0032367701095
free heap space:0.0032367701095
current implementation does:0.0032367701095
of free heap:0.0032367701095
simple garbage collector:0.0032367701095
the c standard:0.0032367701095
as locals arg1:0.0032367701095
gcc mailing list:0.0032367701095
the boehm collector:0.0032367701095
hlc hlc gc:0.0032367701095
mercury to high:0.0032367701095
gcc global register:0.0032367701095
variables such as:0.00323668293212
of di erent:0.00320119878856
have not yet:0.00316948110681
rather than using:0.00305018291929
the generated c:0.00296728359026
stop the world:0.00296728359026
recursion and space:0.00296728359026
compiling mercury to:0.00296728359026
local pointer variables:0.00296728359026
to handle nested:0.00296728359026
tail recursion and:0.00296728359026
generate e cient:0.00296728359026
programming language implementations:0.00296728359026
code at the:0.00296728359026
by other threads:0.00296728359026
than a function:0.00296728359026
to zero out:0.00296728359026
a safe point:0.00296728359026
new programming language:0.00296728359026
little additional overhead:0.00296728359026
the stack frames:0.00296728359026
its own stack:0.00296728359026
address the issue:0.00281224672706
generated c code:0.0028096050827
garbage collector to:0.0028096050827
for strongly typed:0.0028096050827
to support multi:0.0028096050827
functions that do:0.0028096050827
that the collector:0.0028096050827
collector is a:0.0028096050827
