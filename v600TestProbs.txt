corpus/krapavin2000-test/1005058.txt
mining
recommendations
customers
products
datasets
ratings
recommendation
items
predictions
filtering
ms
profiles
similarities
rules
clustering
networks
abilities
scoring
users
measures
deploying
learning
ers
recommender systems
dependency networks
association mining
recommender system
based recommender
dependency network
active customer
collaborative filtering
association rules
active user
et al
correlation coe
commerce sites
customer profiles
null predictions
item matrix
similarity measure
predictive abilities
similarity measures
based methods
purchase data
published listing
user ratings
following subsection
confidence levels
commerce server
service order
recommend products
internal verizon
product recommendation
historical purchase
better predictions
mining models
bayesian networks
lower confidence
based algorithms
machine learning
second phase
based recommender systems
breese et al
heckerman et al
sarwar et al
recommender systems based
active customer profile
association mining is
systems based on
ms commerce server
customer profile and
association mining in
support level s
historical purchase data
based on association
equations 1 and
based on the
server 2000 and

corpus/krapavin2000-test/1005395.txt
individuals
events
nouns
histories
propositions
entities
semantics
hayes
expressions
logics
formalisms
relations
representations
reasoning
denoting
unifying
governing
incorporates
strips
relationships
describing
meaning
actions
event types
event type
count nouns
history tree
type e
event calculus
situation calculus
actual history
within vel
time points
frame problem
possible world
time point
aspect operators
logical form
type expressions
end points
punctual event
occurs relation
logical symbol
ai representations
nominal type
actual state
formal semantics
dierent ways
temporal relationships
individual concepts
logical functions
expressive power
dynamic logic
m h
ary relation
relation holds
event token variable
event type expressions
tuple of individuals
subjective event types
mccarthy and hayes
history tree structure
punctual event types
kowalski and sergot
kind of quantier
e g hayes
partial state s
event types and
world identity criteria
temporal ordering relation
fully formal semantics

corpus/krapavin2000-test/1005397.txt
pos
animals
riding
ds
actions
positions
laws
humans
closing
modelling
surrounding
domains
moving
getting
driving
restrictions
c world
large animal
road segment
large animals
speed limit
animal moves
causal calculator
top speed
safety distance
speed limits
modelling workshop
causal laws
action language
logic modelling
occupancy restriction
action domains
continuous motion
road segments
constraint pos
top speeds
input language
language c
surrounding tra
dynamic laws
nonexecutable mount h
logic modelling workshop
zoo world and
action language c
anml p pos

corpus/krapavin2000-test/1005399.txt
brooks
layers
circumscription
provers
theories
agents
reasoning
actions
planning
seconds
formalizing
objects
subsumption architecture
theorem prover
theorem provers
brooks subsumption
higher layers
robot control
logical theory
based subsumption
lower layers
nonmonotonic reasoning
semantic attachments
mobile robot
turn heading
common sense
different layers
lower layer
intelligent agents
logical theories
fwd heading
ai architecture
feelforce module
circumscription formula
separate theorem
higher layer
physical sonars
r module
behavioral decomposition
avoid heading
reactive layers
avoid objects
avoidance capabilities
complex layers
original theory
elaboration tolerance
based subsumption architecture
turn heading angle
high level robot
fwd heading speed
theorem provers can
separate theorem prover
provers can be
theorem prover implementation
give formal semantics
general purpose theorem

corpus/krapavin2000-test/1005453.txt
coloring
colors
vertices
ring
minors
colorings
edges
graphs
surfaces
subgraphs
partitions
rings
excluding
integers
endpoints
parts
every graph
r ring
g h
vertex coloring
graph minors
vertex partition
edge partition
planar graph
j parts
l coloring
edge coloring
g e
graph g
v g
vertex extensions
closed class
edge partitions
edge e
height preserving
low tree
partial k
bag x
r h
e h
width at most
set of surfaces
r ring r
set of colors
j parts form
graphs such that
parts form a
g has a
g is a
vertices and edges
j j parts
partition into i
vertex l coloring
bounded tree width
class of graphs
g such that
j colors form
vertex coloring c
low tree width
partial k tree
j l colors
witnessed by a
k b coloring
closed class of
e with endpoints
w such that

corpus/krapavin2000-test/1005726.txt
routes
routers
routing
signaling
ases
operators
attributes
policies
speaking
predictions
neighboring
paths
predicts
dynamics
simulators
effects
protocols
loading
emulating
tasks
destinations
deploying
announcing
simulating
configurations
modeling
failures
learned routes
decision process
bgp route
igp path
bgp decision
route selection
bgp routing
network engineering
import policy
route prediction
traffic engineering
network operators
ingress router
ebgp speaking
local preference
speaking router
best routes
import policies
modified routes
prediction algorithm
configuration changes
bgp emulator
learned route
engineering tasks
egress point
second phase
ebgp sessions
route reflector
ibgp signaling
network operator
modeling bgp
third phase
destination prefix
configuration data
configuration change
ibgp session
ibgp sessions
bgp path
live network
path selection
selection process
ibgp configuration
message ordering
routing protocol
routing protocols
first phase
link weights
bgp neighbor
route reflectors
path length
network configuration
running time
router configuration
protocol dynamics
routing decisions
bgp session
bgp configuration
rr clients
model bgp
bgp decision process
bgp route selection
best route at
ebgp speaking router
igp path costs
route prediction algorithm
ibgp signaling graph
network engineering tasks
igp path cost
bgp path selection
emulator based on
path cost to
ebgp speaking routers
bgp routing tables
route selection process
network configuration and
bgp routing decisions
configuration changes typically
local preference attribute

corpus/krapavin2000-test/1006322.txt
sites
learning
mining
observations
coupling
networks
monitoring
sampling
discovering
features
databases
central site
bayesian networks
bayesian network
collective bn
conditional probabilities
cross terms
collective mining
web log
asia model
heterogeneous data
collective learning
site b
dierent sites
local sites
data mining
local site
parameter learning
distributed data
bn learning
collective approach
local bn
bn structure
conditional probability
local variables
collective method
collective bayesian
across sites
local model
sample complexity
network structure
data communication
bayesian learning
homogeneous case
conditional distributions
distributed resources
distributed sources
likelihood computation
joint probabilities
heterogenous data
heterogenous case
global site
conditional independence
incomplete data
distributed sites
left depicts
distributed heterogeneous data
networks from distributed
mining of bayesian
chen et al
approach to learning
collective learning method
web log data
distributed data mining
collective bn learning
distributed site has
collective bayesian network
collective approach to
local bayesian network
observations across sites
central site using
collective bayesian learning
bayesian network structure
web log mining
hoc wireless networks
local likelihood values

corpus/krapavin2000-test/1006412.txt
engines
pages
judgments
ranking
evaluations
queries
searchers
measuring
users
enterprises
nes
links
measures
effectiveness
people
search engines
search engine
relevance judgments
average precision
based evaluation
web search
recall values
awseem results
precision values
human relevance
average recall
various dcvs
relevant documents
downloaded pages
information retrieval
worst performing
table tukeys
relevant pages
relevance judgment
engine performance
web pages
user queries
retrieval e
engine evaluation
web searching
awseem using
particular search
evaluations using
automatic method
performing search engines
web search engines
search engines and
human relevance judgments
worst performing search
search engine performance
average precision values
pearson r values
web search engine
modern information retrieval
search engine evaluation
erent search engines
particular search engine
world wide web
sig table tukeys

corpus/krapavin2000-test/1006425.txt
branching
transversals
hypergraphs
hitting
vertices
edges
running
runs
mining
finding
graphs
minimum transversal
hypergraph h
transversal hypergraph
f h
number branching
uniform hypergraph
exponential space
hypergraph problem
uniform hypergraphs
r h
polynomial space
minimal transversals
ordinary graphs
use exponential
case branching
time o
n h
related problems
n time
independent set
hypergraph transversals
niedermeier and rossmanith
number branching number
branching number cases
transversal hypergraph problem
minimum transversal problem
running time of
space and runs
worst case branching
needs polynomial space
use exponential space
running time in
algorithm runs in
two algorithms for
actual branching numbers

corpus/krapavin2000-test/1006427.txt
cells
paging
devices
rounds
nding
users
establishing
signals
searching
looking
calls
conference call
call problem
mobile devices
mobile device
expected number
wireless links
dynamic programming
mobile users
location management
base station
wireless conference
delay constraints
performance ratio
wireless system
multidimensional convex
establishing wireless
approximation solution
mobile telephony
telephony systems
oblivious algorithms
expensive wireless
cellular systems
d c
conference call problem
number of cells
minimizes expected paging
expected number of
strategy that minimizes
last k cells
set of cells
mobile device i
subset of cells
mobile telephony systems
cells are paged
multidimensional convex optimization
expensive wireless links
establishing wireless conference
quadratic assignment problem
personal communication systems
cell where the

corpus/krapavin2000-test/1007454.txt
cycling
iterations
behaviour
cycles
fletcher
scaling
repeats
leaving
introducing
cycle examples
cycle pattern
simplex method
reduced cost
negative reduced
column selection
basic variables
row selection
expand procedure
objective function
using expand
edge column
sufficient conditions
simplex algorithm
prevent cycling
odd iterations
selection rule
cost criterion
characteristic equation
cycling examples
even iteration
variable values
cost column
real eigenvalues
linear programming
nonbasic variables
problem cycles
negative reduced cost
necessary and sufficient
edge column selection
reduced cost criterion
cost column selection
column selection rule
reduced cost column
ratio test returns
simplex method to
cycles when using

corpus/krapavin2000-test/1007523.txt
students
participants
developers
tests
errors
tools
impressions
distracting
effects
failing
factoring
edits
monitoring
editing
users
clicking
tas
regarding
ins
environments
refactoring
running
compiling
continuous testing
continuous compilation
test suites
regression errors
testing tool
development environment
regression testing
regression error
control group
success rate
regression test
course staff
test cases
manual testing
incremental compilation
test factoring
development time
software engineering
development environments
rapid feedback
significant effects
experimental treatments
run tests
failing tests
work habits
modern ide
test frequency
delta debugging
student solutions
student developers
junit test
better code
qualitative feedback
regression tests
test prioritization
qualitative results
several participants
asynchronous notification
test errors
first development
compilation errors
running tests
programming task
continuous testing tool
continuous testing can
run the tests
likely to complete
continuous testing group
regression test suite
tool to others
statistically significant effects
would recommend the
continuous testing were
threats to validity
using continuous testing
continuous testing uses
first problem set
wasted development time
continuous testing to
continuous compilation group
significantly more likely
david saff michael
provided by continuous
modern ide s
treatment predicts correctness
participants did not
multiple choice questions
initial failing tests
effective regression testing
second problem set
run regression tests

corpus/krapavin2000-test/1007526.txt
inputs
trees
preconditions
checking
tests
structures
manipulating
counterexamples
programs
generating
constraints
symbolic execution
input generation
model checking
model checker
lazy initialization
path condition
black trees
test inputs
input structures
box approach
input trees
input structure
box testing
execution tree
uninitialized elds
conservative precondition
box test
complex data
manipulating complex
execution framework
generating tests
concrete precondition
generate test
primitive data
java predicates
code manipulating
unit testing
java programs
structural coverage
data structures
test generation
destructive updates
method preconditions
treemap library
input elds
checker backtracks
conservative preconditions
primitive elds
oriented programs
testing proceedings
space exploration
thread scheduling
test input generation
red black trees
box test input
model checker to
manipulating complex data
symbolic execution tree
generalized symbolic execution
model checking as
jpf model checker
symbolic execution framework
code manipulating complex
model checking and
model checking of
complex data structures
non isomorphic input
generate test inputs
symbolic execution to
java treemap library
model checker backtracks
software engineering notes
automated software engineering
_left_is_initialized cl null
input generation can
static final boolean
current entry worklist

corpus/krapavin2000-test/1007540.txt
steering
modes
executions
programs
behaviors
situations
controllers
chooses
operating
modeling
selecting
failures
optimizations
inputs
augmenting
generalizes
developers
policies
selects
environments
creating
learning
switching
mode selector
program steering
new mode
modeling step
original mode
mode selection
raw materials
original program
control programs
control program
saver mode
mode selectors
standard mode
robot control
program state
droid wars
environmental changes
new environments
environmental change
sleep mode
machine learners
operating conditions
new controller
value profiling
current program
steering technique
original programs
laptop display
radio spoofing
original controller
radio jamming
new environment
operational abstractions
resulting models
operational abstraction
training data
run time
different modes
selector chooses
increased resources
mode transitions
controller augmentation
original environment
mode software
mode system
signal strength
video games
called program
appropriate mode
anomaly detection
program states
machine learning
new mode selector
original mode selector
mode selector that
robot control programs
power saver mode
old mode selector
environmental change simulates
current program state
standard mode power
program steering technique
new mode selectors
dynamic invariant detection
mode selector chooses
applying program steering
software controlled radios
mode based on

corpus/krapavin2000-test/1007547.txt
bpel4ws
services
expressions
standards
specification
semantics
interacting
protocols
flows
manipulating
msl type
location path
web services
xpath expression
xml data
promela code
xpath expressions
location paths
translation algorithm
web service
xml schema
register message
msl types
promela translation
boolean xpath
data manipulation
composite web
xpath location
model checker
variable register
qualified names
software systems
basic type
absolute location
last stockid
analysis service
relative location
model checking
syntax rules
service analysis
boolean expression
ltl properties
xml manipulating
manipulating software
xml data manipulation
boolean xpath expression
composite web services
xpath location paths
web service analysis
service analysis tool
relative location path
message being sent
techniques presented in
presented in this
xml manipulating software
hand side corresponds
translation algorithm which
absolute location path
model checking techniques
corresponds to the
generated promela code

corpus/krapavin2000-test/1007763.txt
sampling
weights
clustering
succeeds
running
learning
viewing
bounds
median algorithm
median problem
uniform weights
successive sampling
configuration x
sampling algorithm
input points
arbitrary weights
high probability
median algorithms
running time
k log
constant factor
interpoint distances
problem instance
facility location
failure probability
point weights
log n
e b
ng time
success probability
approximate clustering
metric space
location problems
et al
first step
distance function
complete sub bins
successive sampling algorithm
set of points
online median algorithm
desired approximation ratio
running time of
standard chernoff bound
incomplete sub bins
algorithm small space
successive sampling technique
factor approximation algorithm
sufficiently large constant
constant factor approximation
particular sub bin

corpus/krapavin2000-test/1007765.txt
agreements
clustering
clusters
disagreements
vertices
edges
learning
maximizing
labels
minimizing
documents
ments
graphs
approximating
positive edges
good wrt
maximizing agreements
optimal clustering
negative edges
singleton clusters
minimizing disagreements
edge labels
agnostic learning
correlation clustering
inside clusters
positive edge
negative mistakes
factor approximation
property tester
erroneous triangles
edge weights
clean cluster
positive mistakes
different clusters
high probability
negative edge
graph partitioning
graph g
o n
number of agreements
edges between clusters
number of disagreements
ptas for maximizing
edges inside clusters
constant factor approximation
algorithm divide choose
number of clusters

corpus/krapavin2000-test/1007767.txt
clustering
clusters
spanning
neighbors
partitions
edges
spaces
ir
fragments
tering
classification
plications
dimen
agglomerative clustering
proximity tables
sparse partitions
mst clustering
sparse partition
log n
closest pair
nearest neighbor
furthest pair
connected components
neighbor search
high probability
clustering algorithm
minimum spanning
n points
dimensional spaces
naive approach
clustering problems
partition clustering
subquadratic time
vista tm
big oh
spanning tree
running time
clustering rules
euclidean space
time complexity
pattern recognition
computational geometry
n ffl
neighbor algorithms
theoretic clustering
quadratic behavior
tm search
agglomerative clustering algorithm
approximate nearest neighbor
gammaffi proximity tables
minimum spanning tree
high dimensional spaces
sparse partition clustering
total running time
dimension reduction techniques
graph theoretic clustering
r proximity tables

corpus/krapavin2000-test/1007852.txt
untangling
meshes
procedures
remapping
los
simulations
tangling
keeping
ments
maximizing
feasible set
optimization procedure
objective function
valid elements
set approach
2d meshes
invalid elements
arbitrary lagrangian
lagrangian eulerian
mesh untangling
untangling procedure
positive volume
invalid element
untangling meshes
original mesh
local function
mesh optimization
area triangles
inverted elements
ale simulations
interior vertices
feasible sets
mesh vertex
connected elements
volume elements
numerical optimization
boundary vertices
optimization method
mesh improvement
lagrangian step
mesh conguration
untangle meshes
connected neighbors
improvement procedures
connected element
node repositioning
feasible region
mesh b
optimization approach
quadrilateral elements
g irving
feasible set method
feasible set approach
arbitrary lagrangian eulerian
elements connected to
feasible set polygon
connected to the
untangling of a
least one invalid
connected to at
global objective function
lagrangian eulerian methods
mesh improvement procedures
untangling by optimization
unstructured 2d meshes
quadratic objective function
set method and
preliminary results are
g irving j
mesh while keeping
accurate solution transfer
positive area triangles
positive volume elements

corpus/krapavin2000-test/1007924.txt
files
caches
paging
cache
caching
metrics
requests
incur
capacity blowup
cooperative caching
request sequence
loop preserves
distributed paging
internal node
competitive ratio
placement p
tree metrics
ine algorithm
lower bound
first inequality
hierarchical cooperative caching
cooperative caching problem
sequence of requests

corpus/krapavin2000-test/1007977.txt
trees
datatypes
labelling
ws
inverses
parsing
inverting
tupling
ins
printing
cons
zipping
catamorphisms
backwards
relations
preorder traversal
function theorem
inorder traversal
program inversion
first labelling
building trees
partial function
e f
base functor
first traversal
fold fusion
empty lists
valued binary
binary tree
relation r
de moor
following datatype
functor f
last x
binary trees
r f
new node
duplicated elements
fusion theorem
generalised theorem
source string
relational fold
inorder traversals
d e
non empty lists
valued binary tree
fold fusion theorem
linear time algorithm
conditions under which
function can be
written as a
concat map cons

corpus/krapavin2000-test/1008135.txt
cgls
lanczos
recurrences
squares
iterates
rounding
errors
regularization
products
computations
families
shifts
proposals
ingredients
iterations
overwhelming
solving
modynamics
multishift cgls
lanczos part
attainable accuracy
least squares
conjugate gradient
standard lanczos
krylov subspace
shifted systems
finite precision
rounding errors
lanczos relation
gradient method
precision computations
tridiagonal matrix
squares problems
shifted system
alternative lanczos
linear systems
starting vector
damped least
perturbed lanczos
inversion part
perturbation term
numerical experiments
relative error
condition number
term recurrence
normal equations
orthogonal basis
term recurrences
error analysis
multishift version
cgls methods
multishift versions
future convenience
exact conjugate
diagonal elements
special structure
direct application
recurrence relations
residual gap
approximate solution
previous proposals
hand side
vector product
inner products
key ingredient
multishift cgls method
standard lanczos method
conjugate gradient method
least squares problems
least squares problem
finite precision computations
rounding errors in
damped least squares
matrix t k
method applied to
errors made in
least squares residual
exact conjugate gradient
multishift cgls methods
rounding errors made
cg type methods
influence of rounding
tridiagonal matrix t
solving linear systems

corpus/krapavin2000-test/1008136.txt
lanczos
bidiagonalization
triplets
eigenvalues
matrices
eigenproblems
restarting
vectors
approximations
clustering
eigenvectors
bidiagonaliza
ritz values
harmonic ritz
singular values
singular triplets
lanczos bidiagonalization
singular value
augmented matrix
starting vector
lanczos factorization
partial reorthogonalization
matrix c
bidiagonal matrix
large sparse
restarted lanczos
singular vector
restarted arnoldi
qr steps
implicit restarting
sparse matrices
lbd algorithm
approximate singular
lbd factorization
symmetric eigenvalue
ritz value
symmetric eigensolvers
implicit qr
singular vectors
tridiagonal matrix
numerical experiments
worth noting
value decomposition
inexact inverse
givens rotation
deflation techniques
implicit shifts
implicit restarts
large matrices
following relations
special structure
bidiagonal form
basis vectors
y r
harmonic ritz values
smallest singular values
smallest singular triplets
augmented matrix c
implicitly restarted lbd
smallest singular value
implicitly restarted lanczos
implicitly restarted arnoldi
large sparse matrices
triplets of large
implicit qr steps
bidiagonal matrix b
applied directly on
relative error ritz
clustering of the
singular value decomposition
harmonic ritz number
symmetric eigenvalue problem
refined singular vectors
approximate singular values
small singular triplets
values of large
orthogonal deflation transformation

corpus/krapavin2000-test/1008286.txt
des
transitions
formulas
trajectories
durations
specification
specifications
modalities
timing
rules
semantics
methodologies
overlapping
meaning
specifying
transition system
timed transition
transition systems
minimal separation
time units
duration calculus
state variables
bounded invariance
temporal logic
r r
temporal formula
state transitions
time point
chop operator
duration formula
induction rules
time domain
time systems
interval logic
critical duration
original dc
structural induction
reactive systems
duration properties
combined logic
dc framework
style specification
primed variables
induction rule
dynamic systems
first order
high level
d time
state transition
d e
timed transition system
timed transition systems
real time systems
linear temporal logic
transition system s
bounded critical duration
specification and verification
d time units
minimal separation property
r true holds
bounded response property
structural induction rules
reasoned about in
abstract liveness and
bounded invariance property
bounded invariance properties
transition system consists
timed linear temporal
critical duration property
c time units
d e holds

corpus/krapavin2000-test/1008415.txt
seats
accommodating
requests
stations
fair
sequences
coloring
quests
scheduling
routing
giving
line algorithm
accommodating sequences
seat reservation
unit price
reservation problem
price problem
competitive ratio
extra intervals
optimal o
request sequence
start station
original interval
e interval
price seat
adversary proceeds
fair deterministic
accommodating ratio
rst interval
rejected intervals
oblivious adversary
whose starting
randomized algorithms
additional requests
original intervals
fair o
asymptotic upper
m seats
deterministic algorithms
call control
interval scheduling
seat reservation problem
unit price problem
optimal o line
even on accommodating
accommodating sequences for
competitive on accommodating
unit price seat
price seat reservation
sequence of requests
optimal fair o
whose starting station
asymptotic upper bound
starting station s
accommodating sequences is

corpus/krapavin2000-test/1008425.txt
jobs
deadlines
scheduling
arrives
completing
running
examining
setting
job j
immediate notification
randomized algorithm
job lengths
job l
competitive randomized
l f
notification model
call control
admission control
greedy twolengths
distinct lengths
accepted jobs
arbitrary job
equal length
algorithm greedy
online algorithm
competitive algorithm
earliest deadline
optimal schedule
job requests
two distinct
arbitrary lengths
feasible schedule
deterministic algorithm
lower bound
notification models
available jobs
competitive randomized algorithm
small job s
provides immediate notification
algorithm which provides
randomized algorithm which
two distinct lengths
arbitrary job lengths
providing immediate notification
provide immediate notification
l f blocks
algorithm greedy twolengths
online interval scheduling

corpus/krapavin2000-test/1008470.txt
hosts
rounds
messages
idmaps
electing
protocols
joining
tatives
rs
leaving
members
n c
expected number
basic algorithm
feedback implosion
active hosts
election process
n n
feedback message
target range
previous round
multiple access
collision resolution
population size
video distribution
n hosts
successful transmissions
c n
n bits
leader election
central entity
avoid feedback
full multiplicity
additional round
small number
number of messages
expected number of
number of rounds
bolot et al
number of hosts
basic algorithm t
feedback implosion problem
multicast video distribution
algorithm that requires
log n bits
messages and rounds
distributed leader election
full multiplicity feedback
access protocols performance
multiple access protocols
avoid feedback implosion

corpus/krapavin2000-test/1008818.txt
attacks
notions
plications
decryption oracle
partial domain
success probability
semantic security
ciphertext attacks
significant bits
random oracles
random oracle
rsa function
key encryption
h queries
ciphertext attack
e th
hash functions
security notions
partial pre
asymmetric encryption
valid ciphertext
split according
victor shoup
encryption schemes
whose running
stronger assumption
security analysis
public data
reaction attacks
within time bound
decryption oracle simulation
public key encryption
q h queries
whose running time
random oracle model
oracle simulation ds
key encryption schemes
chosen plaintext attack
probability succ s
pre image s
partial pre image
time bound t

corpus/krapavin2000-test/1009027.txt
documents
clusters
ranking
smoothing
scoring
clustering
modeling
overlapping
incorporating
utilizing
ir
language models
language modeling
re ranking
interpolation algorithm
language model
information retrieval
average precision
aspect model
lm approach
corpus structure
modeling approach
similarity structure
select algorithm
document information
based language
individual document
cluster information
hoc information
hoc retrieval
document language
standard language
optional re
relevant documents
ad hoc
particular document
specic information
c p
average non
basic lm
document clusters
smoothing method
free parameter
unsupervised learning
language modeling approach
based language models
modeling approach to
approach to information
re ranking step
document specic information
ad hoc information
ad hoc retrieval
standard language modeling
hoc information retrieval
annual international acm
non interpolated precision
document language models
individual document information
induced language models
language models proceedings
interpolation algorithm s
pt precision curves
optional re ranking
information retrieval information
international journal v
knowledge management october
original aspect model
cluster induced language
top ranked documents
lm basis s
retrieval information retrieval
aspect x algorithms
document expansion proceedings
average precision corpus
dirichlet smoothed language

corpus/krapavin2000-test/1009186.txt
nesting
expressions
equations
databases
tuples
asking
occurring
relations
invoking
solutions
accepting
turing
guages
equation algebra
relational algebra
powerset algebra
algebra expression
sparse equations
algebra expressions
finite domain
natural evaluation
database b
expression e
evaluation strategy
relation variables
sparse equation
transitive closure
fixpoint query
parity query
relational databases
order logic
equation e
input database
logic sentence
database schema
intermediate results
query language
model theory
e b
polynomial size
expressible using
equation alge
nested relational algebra
natural evaluation strategy
equation algebra expression
relational algebra expression
finite domain d
nested relational databases
equation algebra expressions
relational algebra equation
suciu and paredaens
given a database
using sparse equations
powerset algebra expressions
relational algebra are
powerset algebra expression
order logic sentence
polynomial space fragment
finite model theory
first order logic
e b equals
polynomial space powerset
many accepting computations
nested relational data
nested relational al
sentence is true
computational complexity theory
nesting is expressible

corpus/krapavin2000-test/1009192.txt
coloring
colors
vertices
graphs
approximating
constructions
edges
pcp theorem
colorable graphs
chromatic number
graph coloring
colorable graph
ground vertices
graph g
r cliques
colored using
inapproximability results
pcp constructions
graph using
hardness results
basic template
legal coloring
g r
constant h
general graphs
assign colors
chromatic numbers
colorable graph using
pcp theorem and
leaf level gadgets
approximate graph coloring
number of vertices
strong hardness results

corpus/krapavin2000-test/1009317.txt
cells
gradients
descendants
mining
pruning
cubes
cubing
sibling
ancestors
siblings
dimensions
items
measures
databases
aggregates
constraints
pairs
sharing
pushing
thresholds
queries
rules
probe cells
c g
c p
gradient cells
constrained gradients
gradient constraint
significant pairs
k average
data cubes
gradient analysis
avg price
significance constraint
interesting gradient
constraint c
h cubing
constrained gradient
base table
transactional databases
g c
probe pairs
measure values
probe constraints
base cells
cube computation
association rules
iceberg cubes
significance constraints
potential gradient
gradient constraints
dimension matching
oriented processing
computing iceberg
average price
aggregated cells
per probe
gradient mining
multidimensional space
m c
search space
aggregated cell
dimensional gradient
measure value
complex measures
sales price
interesting gradients
dimensional cells
constrained gradients in
top k average
mining constrained gradients
gradient cell c
constrained gradient analysis
gradients in data
probe cells and
probe cell c
probe constraint c
constraint c prb
constraint c sig
significance constraint c
gradient cell constraint
iceberg cube computation
gradient constraint c
gradients in transactional
number of cells
interesting gradient cells
gradient constraint is
set oriented processing
per probe cell
sharing of computation
used for pruning
multi dimensional space
potential gradient cells
significant probe cells
cube computation algorithm

corpus/krapavin2000-test/1010995.txt
pending
clients
resources
checking
requesting
programs
crl specication
model checking
access pending
mutual exclusion
generic server
erlang programs
demanded resources
transition system
model checker
critical section
locker algorithm
supervision tree
erlang code
erlang modules
erlang program
get access
starvation problem
erlang processes
case study
specication language
case statements
checking tool
formal verication
design patterns
resource b
classical properties
atm switch
mutual exclusion property
mutual exclusion and
access pending access
loop locker resources
model checking tool
model checking for
deadlock mutual exclusion
generic server design
alternation free calculus
contain side eects

corpus/krapavin2000-test/1011175.txt
assemblies
lattices
spaces
functionals
categories
domains
quotients
relations
constructions
products
completions
objects
embedding
underlying
classes
algebraic lattices
cartesian closed
partial equivalence
equivalence relations
equilogical spaces
equivalence relation
type theory
algebraic lattice
dependent type
regular subobjects
countable functionals
closed category
topological spaces
domain theory
equivalence classes
full subcategory
regular subobject
topological space
quotient types
finite types
continuous mappings
internal category
equivariant mappings
l l
natural numbers
continuous functions
whose underlying
function space
continuous extension
open sets
partial combinatory
partial equivalence relations
dependent type theory
cartesian closed category
partial equivalence relation
natural numbers object
equilogical spaces and
algebraic lattices is
top adding functor
equivalence relations is
whose underlying domain
calculus of constructions

corpus/krapavin2000-test/1011176.txt
semantics
binding
languages
interpreting
categories
tics
dynamic terms
partial evaluation
level pcf
dynamic types
operational semantics
denotational model
adequacy theorem
level languages
static reduction
logical relation
dynamic type
level language
residual program
denotational semantics
dynamic arrow
partial evaluator
dynamic ones
static components
functor categories
static undenedness
dynamic evaluation
immediate otherwise
equational theory
formation rules
execution phases
f b
static types
time analysis
base types
dynamic counterpart
static term
usual interpretation
static and dynamic
operational semantics and
purely dynamic terms
type formation rules
dynamic type d
dened as follows
dynamic adequacy theorem
dynamic sub term
polymorphic binding time
static normal form
dynamic value d

corpus/krapavin2000-test/1011177.txt
hypercoherences
products
morphisms
spaces
coherences
glueing
biproducts
relations
games
underlying
categories
interpretations
hypercoherence
linear logic
coherence spaces
p f
symmetric monoidal
monoidal closed
compact closed
tensor product
powerset functor
f b
p fne
natural transformation
complete lattice
classical linear
intuitionistic linear
exponential comonad
categorical structure
autonomous structure
phase spaces
valued sets
closed structure
forgetful functor
commutative monoid
constructing models
categorical model
symmetric monoidal closed
sets and relations
category of sets
linear function space
products and co
models for linear
classical linear logic
intuitionistic linear logic
models of linear
nite powerset functor
coherence spaces and
products and coproducts
monoidal closed structure
spaces and hypercoherences
symmetric monoidal category
closed structure on
constructing models of
linear logic consists
set rel preserves
spaces as well

corpus/krapavin2000-test/1011479.txt
specifications
specification
semantics
logics
counterexamples
reasoning
languages
modelling
objects
invariants
employing
domains
extensions
object calculus
object specifications
imperative object
object calculi
leino logic
e e
functional object
denotational semantics
transition specifications
flat predomain
recursive object
functional case
recursive type
object logic
existence theorem
basic values
object formation
domain equations
order store
relational properties
method closures
object specification
oriented languages
introduction rule
mild assumptions
object creation
recursive types
domain equation
needs recursion
programming logics
imperative object calculus
functional object calculus
properties of domains
untyped object calculus
also suggests extensions
specifications and their
partial continuous functions
transition specifications that
recursive object types
simple imperative languages
functional object specifications
imperative object specifications

corpus/krapavin2000-test/1011512.txt
coalescing
coloring
splitting
spilling
registers
instructions
lescing
splits
scheduling
nodes
opportunities
allocators
assigning
aggres
alescing
aggressive coalescing
live range
conservative coalescing
coalesced node
range splitting
register allocation
optimistic coalescing
positive impact
iterated coalescing
graph coloring
related nodes
optimistic allocator
actual spill
interference edges
coloring register
interference graph
register allocator
significant degree
potential spill
spill instructions
negative impact
phase ordering
optimistic register
coalescing heuristics
live ranges
software pipelining
global register
coa lescing
register coalescing
spilled nodes
instruction scheduling
simplification phase
build phase
optimistic coloring
machine registers
non interfering
live range splitting
impact of coalescing
graph coloring register
coloring register allocation
significant degree neighbors
nodes being coalesced
coalescing or iterated
conservative coalescing or
global register allocation
low degree node
improving the overall
colored with different
previous coalescing heuristics
effective scheduling technique
fully exploits the

corpus/krapavin2000-test/1011810.txt
agents
interactions
counters
predicates
turing
conjugating
encounters
protocols
populations
sensing
members
sampling
intriguing
interacting
questions
computations
teractions
live bit
population protocol
population protocols
interaction graph
computable predicates
stable computation
counter machine
global start
start signal
conjugating automata
population configurations
transition function
high probability
randomized turing
population configuration
computational power
state agents
expression language
fairness condition
sensor networks
random pairing
assignment x
elevated temperatures
space turing
output assignments
correct answer
output encoding
pairwise interactions
number of interactions
stably computable predicates
global start signal
predicate output convention
computable predicates are
model of conjugating
finite state agents
chemical abstract machine
randomized population protocol
input assignment x
closed under complementation
computed by a
x y holds
set of predicates

corpus/krapavin2000-test/1011820.txt
sys
servers
cons
messages
protocols
rounds
fs
attacks
crashes
tolerates
breaks
mes
computes
sages
tolerating
system sys
gke protocol
ideal system
consensus protocol
key exchange
real system
tc servers
hybrid cons
trusted host
server m
user h
crashed servers
forward secrecy
service f
exchange protocol
ideal service
optimal resilience
internal state
ideal configuration
real configuration
strong corruption
connection cor
bit string
session keys
f n
adversary delivers
weak corruption
pseudorandom function
composition theorem
first stage
group communication
communication rounds
group key exchange
real system sys
ideal system sys
adversary a ideal
hybrid system sys
adversary a real
tc servers crash
key exchange protocol
trusted host th
sub system sys
strong corruption model
weak corruption model
asynchronous reactive systems

corpus/krapavin2000-test/1011932.txt
elds
contour
coecients
williams
orientations
rotations
computations
translations
directions
shapes
joining
grating
contradictions
sampling
transformations
completion elds
fourier basis
stochastic completion
gaussian fourier
twistable basis
planck equation
basis functions
initial conditions
euclidean invariance
euclidean invariant
sink elds
receptive elds
coecient vector
visual cortex
interpolation functions
fourier series
advection transformation
kanizsa triangle
new algorithm
d f
visual eld
twistable functions
contour completion
simple cells
neural network
steerable basis
receptive eld
illusory contour
twistable bases
discrete computation
basis function
periodic function
spatial variables
discrete computations
contour formation
invariant manner
initial sources
invariant computation
initial p
computed using
gaussian fourier basis
shiftable twistable basis
stochastic completion eld
stochastic completion elds
primary visual cortex
williams and jacobs
shiftable twistable functions
fourier series frequencies
shiftable twistable bases
invariance of our
zero fourier series
shiftable steerable basis
illusory contour formation
diusion decay transformation
twist invariant manner

corpus/krapavin2000-test/1012676.txt
metering
clients
realizing
sharing
schemes
servers
visiting
bounds
subsets
relies
secret sharing
access structure
metering schemes
sharing schemes
metering scheme
scheme realizing
sharing scheme
audit agency
information rate
corrupt servers
information distributed
access structures
schemes realizing
corrupt server
client c
corrupt clients
qualified set
optimal information
initialization phase
algebraic approach
communication complexity
linear algebraic
design metering
new bounds
linear mapping
geometric secret
optimal metering
threshold metering
scheme according
general access
vector space
server receives
lower bounds
method relies
secret sharing schemes
secret sharing scheme
linear secret sharing
metering scheme realizing
time frame t
scheme realizing an
metering schemes realizing
information distributed to
scheme realizing any
schemes and secret
optimal information rate
metering schemes and
linear algebraic approach
relationship between metering
complexity of metering
schemes realizing any
algebraic approach to
sharing scheme with
realizing the same
visited by a
design metering schemes
distributed to clients
metering schemes for
m c s
upon the optimality
properties provide some
sharing schemes for
geometric secret sharing
provide some new
general access structures
metering schemes a
threshold metering schemes

corpus/krapavin2000-test/1013562.txt
pebbles
string
strings
alphabets
registers
symbols
alternating
accepting
positions
languages
logics
variants
walking
trees
ers
pebble automata
infinite alphabets
input string
register automata
data values
communication complexity
automata models
decision problems
theoretic assumptions
regular languages
current symbol
head automata
weak pas
finite alphabet
transition relation
initial configuration
pebble assignment
stack discipline
pebble model
consider strings
final configurations
finite alphabets
infinite alphabet
standard decision
communication protocol
initial register
current position
first position
strong 1d pa
pebble is placed
pebble automata and
input string w
set of states
standard decision problems
initial register assignment
based on communication
set of symbols
monadic second order
placed on the
set of transitions
second order logic
weak 1d pa
strong pebble automata
ras and pas
pebble automata are
register and pebble
automata and their
defined in mso

corpus/krapavin2000-test/1013566.txt
rewriting
theories
frameworks
logics
reasoning
metatheorems
principles
rules
metamathematics
theorems
constructions
semantics
rewriting logic
framework logic
metalogical frameworks
logical framework
metalogical framework
universal theory
equational logic
induction principles
initial models
logical frameworks
inductive denitions
metatheoretic reasoning
maude system
inductive theorem
inference rules
object logic
ective logic
object logics
order abstract
representation function
formal systems
entailment relations
formalize theories
framework theory
reasoning principles
equational theory
abstract syntax
order logic
theorem proving
membership equational logic
induction step s
base case s
sentconstant formula subsort
inductive theorem prover
subsort sentconstant formula
order abstract syntax
conditional rewriting logic
calculus of constructions
sound reasoning principles
abstractly and concretely
ective metalogical framework
eective metalogical framework
good logical framework
internal strategy languages
framework rewriting logic
ective logical frameworks

corpus/krapavin2000-test/1013681.txt
jobs
targets
probabilities
scheduling
fractions
candidates
gets
minimizing
schedules
versions
actions
searcher
dures
line player
competitive ratio
decision times
target probabilities
line strategy
player gets
adversarial root
target job
completion time
signal density
candidate genes
o g
signal probabilities
decision time
bayesian model
problem versions
target candidates
adversary assigns
line scheduling
chosen according
competitive analysis
deterministic strategy
optimal solution
er n
harmonic achieves
randomized strategies
target completion
target candidate
nonclairvoyant scheduling
optimal strategy
st c
random signal
deadline scheduling
comparative analysis
non decreasing
preemptive scheduling
scheduling search
randomized adversaries
er measures
multiplicative regret
line players
ordered targets
sided signals
clairvoyant scheduling
robot searching
line player s
optimal competitive ratio
non decreasing c
competitive ratio er
target completion time
online parallel heuristics
unknown decision times
target candidate points

corpus/krapavin2000-test/1013707.txt
channels
traces
communicating
behaviour
processes
specification
relating
actions
interfaces
patterns
diverging
collapses
hiding
refining
mapping
specifications
implementations
verifying
modelling
adhering
implements
semantics
deleting
connecting
notions
implementation relation
extraction patterns
extraction pattern
relating communicating
communicating processes
base process
extraction mapping
vertical implementation
base processes
process p
process q
implementation process
standard horizontal
interface di
csp process
output channels
output channel
input channels
implementation relations
transition systems
input channel
target process
specification component
non diverging
csp processes
behaviour abstraction
deadlock properties
p p
implementation system
sequential processes
uninterpreted channels
implementation processes
network composition
standard csp
relating communicating processes
communicating transition systems
specification and implementation
vertical implementation relation
transition system cts
communicating sequential processes
state explosion problem
connecting their respective
implementation relation which
implementation relation collapses
several connected systems

corpus/krapavin2000-test/1013722.txt
steganography
hiding
prisoners
watermarking
embedding
encoding
distributions
coding
simmons
tampering
observing
decoding
accepting
data compression
relative entropy
information hiding
covertext distribution
hypothesis testing
hidden information
universal data
error probabilities
active adversaries
hidden message
key k
passive adversary
passive adversaries
information theory
theoretic model
probability distributions
authentication theory
secure stegosystems
message c
source coding
secure stegosystem
hiding information
message e
statistical decision
generated according
compression algorithm
decision theory
copyright protection
ziv algorithms
binary partition
steganographic system
covertext statistics
cover message
adversary eve
universal stegosystem
security definition
universal data compression
information theoretic model
pc kp s
containing hidden information
secret key k
relative entropy d
shared by alice
statistical decision theory
private random source
lempel ziv algorithms
unconditionally secure stegosystems
ii error probabilities
cover message c
average repetition times
average error probabilities
steganography can be
information hiding terminology

corpus/krapavin2000-test/1013757.txt
multifunctions
accepting
characterization
executing
schemes
safe recursion
recursive functions
nondeterministic rm
polynomial time
weak minimization
minimization operator
input x
bounded recursion
computation sequence
safe arguments
partial functions
nondeterministic recursion
bounded witnessing
normal arguments
binary successors
register machine
primitive recursion
higher type
reverse direction
partial function
total functions
m accepts
recursive sets
class npmv
polynomial q
e p
partial recursive functions
nondeterministic safe recursion
primitive recursive functions
nondeterministic rm m
npmv is the
implicit computational complexity
nondeterministic polynomial time
low order bits
closed under composition
simultaneous safe recursion

corpus/krapavin2000-test/1013758.txt
characterizations
semantics
capturing
constructions
resource variables
linear logic
dyadic lists
resource polynomials
lambda term
lambda terms
f n
free resource
light linear
polytime algorithms
time computation
polynomial time
lambda calculus
natural numbers
n p
order variables
f e
set theory
indexed products
logic characterizing
size increasing
inductive constructions
realizability model
computational strength
polynomial p
bounded linear logic
second order environment
ne lambda terms
free resource variables
polynomial time computation
light linear logic
tally natural numbers
second order variables
appropriate categorical structure
bll in terms
linear logic characterizing

corpus/krapavin2000-test/1013817.txt
hulls
vertices
nding
sorting
merging
partitioning
comparisons
computes
running
convex hull
convex hulls
n log
hull algorithm
log h
lower hull
planar convex
linear time
log n
clockwise order
linear programming
lower convex
hull algorithms
place sorting
hull vertices
n points
cient algorithms
input points
place implementation
situ algorithms
time algorithm
additional memory
additional storage
time using
stable merging
order beginning
computing convex
original algorithm
four space
place algorithms
place algorithm
leftmost vertex
h vertices
ultimate algorithm
hull of s
n log h
convex hull algorithm
planar convex hull
linear programming problem
n log n
2d linear programming
convex hull algorithms
planar convex hulls
h is the
number of vertices
computing convex hulls
n time using
place sorting algorithm
time using o
algorithms for computing
log n levels

corpus/krapavin2000-test/1013820.txt
mts
voting
voters
votes
parties
elections
proposals
overwhelming
schemes
concerning
hiding
exceeds
protocols
verifying
networks
electronic voting
basic mts
jury voting
voting schemes
elgamal encryption
electronic election
voting scheme
anonymous channel
homomorphic encryption
interactive proof
verifier zero
dishonest authorities
elgamal ciphertexts
2r z
information concerning
security parameter
electronic jury
universal verifiability
elgamal cryptosystem
voting protocol
party computation
elgamal re
mts proposal
testing scheme
network proposals
proposal relies
communicational complexity
civil case
research concerning
negligible probability
membership testing
parallel lines
discrete logarithms
electronic voting schemes
electronic election scheme
tally of the
2r z q
electronic jury voting
secret ballot elections
jury voting protocol
mix network proposals
concerning electronic voting
testing scheme mts
two parallel lines
elgamal re encryption
based on mix
research concerning electronic
membership testing scheme
security parameter k
sequence of integers
fixed sequence of
basic mts proposal
work is proportional
information concerning t

corpus/krapavin2000-test/1013843.txt
sensors
deploying
obstacles
targets
detecting
activities
traversing
sensing
traveling
paths
varying
networks
monitoring
reaching
finding
minimum exposure
least exposed
exposed path
detection probability
false alarm
unauthorized activities
activities using
sensor network
sensor deployment
alarm probability
target detection
sensor networks
value fusion
variable speed
path exposure
n sensors
target activities
probabilistic exposure
speed targets
target travels
deployment strategy
detection algorithms
g p
possible paths
unauthorized traversing
monitored region
exposed paths
target traveling
target activity
signal emitted
false alarms
grid points
distributed detection
fictitious point
least exposed path
number of sensors
detecting unauthorized activities
unauthorized activities using
activities using a
false alarm probability
emitted by the
measured by the
presence of obstacles
false alarm and
cost of deploying
signal emitted by
region monitored deployment
deployment is to
monitored deployment region
sensors can be
collaborative target detection
sensors deployed in
deployed in each
variable speed targets
erent target activities

corpus/krapavin2000-test/1013859.txt
lattices
quasicrystals
tiling
integers
tilings
rotations
crystals
ring
translations
counting
groups
ls
acting
quadratic pv
symmetry group
pv unit
pv units
rotational properties
internal laws
algebraic integer
r q
r n
direct product
mathematical quasicrystals
like lattices
multiplicative properties
quasicrystallographic numbers
adapted rotations
abelian group
real numbers
group structure
ordinary multiplication
counting systems
ordered ring
crystallographic groups
translational properties
group structures
crystallographic group
fold bravais
quasiperiodic point
crystallographic cases
quadratic pv unit
quadratic pv units
additive and multiplicative
counting function s
positive beta integers
recall that from
elementary quadrilateral tile

corpus/krapavin2000-test/1014075.txt
formulas
mining
extents
predicates
itemsets
substructures
queries
objects
pages
hits
relationships
explanations
notions
interrelationships
identifying
cliques
sources
rules
e p
important formulas
property mining
importance scores
head pseudopredicates
data mining
query types
frequent itemsets
building blocks
association rules
frequent substructures
experimental system
graph properties
database group
basic building
query space
web pages
g f
miner system
enormous size
miner experimental
pseu dopredicates
important pseudopredicates
pseudopredi cates
computational resources
traditional data
tree structures
graph data
existing systems
graph structures
important aspects
space of properties
basic building blocks
formulas that can
miner experimental system
personalized web search
discussed in section
first class objects
relational association rules
although they can
notions in data

corpus/krapavin2000-test/1014532.txt
invariants
paxos
cons
executions
lemmas
verifying
proofs
provers
proving
formulating
tools
checking
cutions
ecutions
reporting
attempting
examining
simulation relation
ioa interpreter
forward simulation
level automaton
simulated execution
step correspondence
dynamic invariant
invariant detector
internal chooseval
automaton cons
start state
ioa language
reported properties
internal actions
theorem prover
case study
internal internaldecide
internal assignval
program properties
simulation relations
v representing
o automata
external actions
formal verication
distributed algorithms
theorem provers
state systems
model checking
theorem proving
predicate relating
via simulated
detected invariants
simulates execution
internal makeballot
internal abstain
forward simulation relation
dynamic invariant detection
internal chooseval v
internal assignval b
internal internaldecide b
ioa language and
daikon invariant detector
invariants and simulation
high level automaton
low level automaton
dynamically detected invariants
interpreter simulates execution
internal makeballot b
via simulated execution
simulation relation satises

corpus/krapavin2000-test/1014970.txt
routers
connections
agents
rounds
approximation
makers
papadimitriou
solutions
packing
rates
objectives
running
routing
programs
dividing
obtains
neighboring
positive linear
flow control
approximation ratio
fast approximation
primal variables
positive lps
feasible solution
feasible solutions
dual variables
approximation algorithms
final inequality
linear program
linear programs
linear programming
running time
inequality holds
standard form
r r
distributed algorithm
sequential case
local information
distributed decision
dual feasibility
distributed setting
local communication
global objective
o r
control policies
distributed rounds
distributed model
global objectives
global operations
polylogarithmic number
optimal solution
algorithm produces
sequential implementation
approximation algorithm
logarithmic approximation
fast approximation algorithms
algorithms for positive
byers and d
positive linear programs
connections and routers
primal feasible solution
positive linear programming
final inequality holds
solutions to positive
number of rounds
dual feasible solutions
primal feasible solutions
flow control policies
positive linear program
distributed decision makers
1 approximation ratio
dual feasible solution
papadimitriou and yannakakis
feasible r approximation
number of connections
generate feasible solutions
y j s
feasible solutions to

corpus/krapavin2000-test/1014977.txt
banks
cients
polynomials
filters
splitting
moments
vanishing
frames
wavelets
bases
bs
laurent polynomials
framelet filter
real coe
symmetric laurent
tight wavelet
filter banks
pass filters
wavelet frame
symmetric framelet
refinable function
symmetric tight
polynomial d
matrix splitting
vanishing moments
pass filter
orthonormal wavelet
linear equations
spline function
refinable functions
polynomial p
d h
trivial laurent
filter bank
step algorithm
good vanishing
auxiliary results
real coe cients
framelet filter banks
anti symmetric laurent
high pass filters
tight wavelet frame
symmetric laurent polynomials
symmetric framelet filter
polynomials with real
laurent polynomial d
symmetric tight wavelet
matrix splitting with
symmetry and framelet
splitting with symmetry
han and qun
tight wavelet frames
symmetric laurent polynomial
low pass filter
laurent polynomial p
orthonormal wavelet basis
bin han and
laurent polynomial a
mra tight wavelet
nonzero laurent polynomial
trivial laurent polynomial
framelet filter bank
examples of symmetric
wavelet frames and
symmetric high pass
good vanishing moments
low pass filters

corpus/krapavin2000-test/1014985.txt
queries
inferring
mapping
computations
terminating
programs
appearing
traversing
orderings
floating
extensions
integrating
proving
tations
loops
ditions
level mapping
numerical computations
level mappings
argument positions
let p
termination condition
termination analysis
symbolic conditions
symbolic condition
argument position
integer arguments
logic programs
call p
maximal prefix
c p
atomic queries
automatic termination
termination inference
termination conditions
m p
proving termination
prove termination
ld terminating
inferring termination
known framework
integer computations
interargument relations
practical issues
condition c
implies termination
interargument relation
numerical loops
mapping pairs
thus termination
integer argument positions
integer argument position
argument position denominators
prove termination of
first order built
conditions for numerical
approaches to termination
symbolic condition c
transformation that allows
recursive call p
framework of acceptability
argument positions denominators
termination inference problem
ground unify numbervars

corpus/krapavin2000-test/1014992.txt
mtbdds
bdds
matrices
checking
diagrams
logics
chains
traversing
queueing
model checking
hybrid approach
symbolic model
sparse matrices
david parker
marta kwiatkowska
gethin norman
probabilistic model
probabilistic systems
sparse matrix
numerical computation
time markov
prism web
mtbdd representation
terminal vertex
iterative methods
equation system
mtbdd data
reachable states
case studies
probabilistic models
using mtbdds
decision diagrams
boolean variables
performance problems
using sparse
markov chains
temporal logics
full array
mtbdd representing
matrix entries
decision processes
linear equation
binary decision
web page
checking algorithms
variable ordering
model checker
markov chain
key dierence
reactive modules
iteration vectors
explicit approaches
baier frank
rst constructs
linear optimisation
matrix techniques
symbolic model checking
probabilistic symbolic model
checking with prism
probabilistic model checking
model checking with
time markov chains
mtbdd data structure
using sparse matrices
linear equation system
prism web page
matrix vector multiplication
binary decision diagrams
zero terminal vertex
system description language
model checking algorithms
almost match the
explicit sub matrices
symbolic and explicit
identical sub matrices
markov decision processes
linear optimisation problem
sparse matrix techniques
symbolic probabilistic model
probabilistic temporal logics

corpus/krapavin2000-test/1014994.txt
circuits
predecessors
checking
relations
sequences
gains
creating
quences
orders
designers
transition relations
dynamic transition
transition relation
test sequence
model checking
test sequences
sequence generation
partial assignment
symbolic model
partial transition
test generation
generation algorithm
full design
next state
good coverage
local bus
global transition
initial state
partial assignments
variable v
large circuits
input variables
logic ctl
static algorithm
dynamic validation
critical sub
complete circuit
efficient test
state machine
temporal logic
new method
provide gains
simpler relations
verify circuits
industrial circuits
intel circuits
dynamic transition relations
set of states
test generation algorithm
symbolic model checking
test sequence generation
partial transition relation
partial assignment oe
set of predecessors
pci local bus
global transition relation
number of variables
next state value
initial state s
sequence of inputs
model checking the
inputs to the
method can provide
using dynamic transition
partial transition relations
next state variables
transition relations to
temporal logic ctl
algorithm is the
partitioned transition relations
ffl sub circuits
implemented the new
previously unmanageable due
small critical sub
run it on

corpus/krapavin2000-test/1015045.txt
members
exponentiations
protocols
communication
messages
securering
costs
groups
services
events
securing
ring
bers
key agreement
group communication
group controller
agreement protocols
group membership
key management
key tree
communication system
group member
membership service
reliable group
group members
modular exponentiations
new member
current group
wide area
secure group
key server
virtual synchrony
agreement protocol
membership change
membership changes
computation costs
peer groups
key exchange
group keys
key distribution
modular exponentiation
security services
communication rounds
new members
peer group
gdh protocol
communication systems
dynamic peer
broadcast message
area networks
toolkit supports
secure channels
securing group
membership protocol
underlying group
expensive protocol
lan setting
management protocols
group key agreement
key agreement protocols
group communication system
group key management
reliable group communication
key agreement protocol
join and leave
hellman key exchange
new group controller
group size members
group communication systems
secure group communication
current group controller
contributory key agreement
extended virtual synchrony
group membership changes
dynamic peer groups
wide area networks
securing group communication
short term group
centralized group key
rsa signature verifications
underlying group communication
contributory group key
key distribution scheme
spread group communication
local and wide
key management protocols
wide area network
integrated with a

corpus/krapavin2000-test/1015499.txt
flows
ers
packets
routers
ering
sizing
queueing
simulations
buffers
dynamics
measurements
manufacturers
carrying
networks
oscillating
er size
window size
short flows
bottleneck link
lived flows
queue length
bu ering
tcp flow
access links
congestion control
lived tcp
er requirements
many flows
congestion avoidance
m g
smaller bu
backbone routers
outstanding packets
queueing delay
short flow
internet routers
backbone router
link utilization
packet loss
control algorithm
single flow
single tcp
trip time
large bu
queue occupancy
overbu ering
small bu
avoidance mode
access link
backbone networks
backbone links
number of flows
lived tcp flows
bu er requirements
short lived flows
congestion control algorithm
average queue length
simulations and experiments
large bu ers
single tcp flow
small bu ers
average flow completion
congestion avoidance mode
flow completion times
congestion control algorithms
infinite bu ers
average congestion window

corpus/krapavin2000-test/1015505.txt
middleboxes
dns
names
naming
identifiers
dhts
addresses
services
namespaces
routing
proposals
endpoints
nats
homing
protocols
principles
routers
resolving
addressing
binding
networking
clients
semantics
forwarding
ip addresses
ip address
resolution infrastructure
flat names
flat namespace
level descriptors
network elements
name resolution
naming layers
mail addresses
design principles
naming architecture
transport protocols
service identifiers
level descriptor
multi homing
endpoint identifiers
host software
web server
open network
layered naming
internet architecture
network locations
new naming
global namespaces
internet indirection
distributed hash
urn literature
internet protocol
gain access
host mobility
ip routing
design principle
general principles
services and data
user level descriptors
data and services
e mail addresses
open network handles
internet indirection infrastructure
distributed hash tables
new naming layers
gain access to
layered naming architecture
application level intermediaries
eid level delegation
dynamic network architecture
auxiliary mapping service
name resolution infrastructure
use multiple triples
semantic free referencing
recipient controlled delegation
third party service

corpus/krapavin2000-test/1015755.txt
posing
learning
keyframing
kinematics
motions
missing
optimizing
animations
interpolating
ps
scaling
constraints
active set
motion capture
new poses
latent space
gaussian process
computer animation
training data
inverse kinematics
objective function
model parameters
siggraph eurographics
training poses
original poses
new pose
gaussian processes
numerical optimization
variable model
joint angles
character posing
likely pose
handle constraints
interactive character
missing markers
pose synthesis
2d image
x values
kernel matrix
motion data
set points
likelihood function
conventional pca
capture poses
trajectory keyframing
time motion
kernel function
animation proceedings
learned model
latent variables
small data
optimization algorithm
neural networks
learning algorithm
learning p
process latent variable
gaussian process latent
siggraph eurographics symposium
acm siggraph eurographics
computer animation september
latent variable model
interactive character posing
active set points
scaled gaussian process
real time motion
motion capture poses
variable model sgplvm
capture with missing
applications interactive character
character posing trajectory
knowledge enhanced motion
motion transformation inferring
time motion capture
interpolation parameter s
eugene fiume methods
kinematics system based
williams and rasmussen
negative log posterior
enhanced motion transformation
general purpose probability

corpus/krapavin2000-test/1016052.txt
sorting
comparisons
running
implementing
moving
parametric search
based parametric
generic algorithm
binary search
echet distance
sorting algorithms
running time
polygonal curves
decision problem
search fashion
parallel sorting
parallel steps
two sorting
l l
bitonic sort
search framework
sorting algorithm
f l
running times
implementing algorithms
slope selection
geometric optimization
search approach
concrete version
input size
progressively smaller
moving points
consecutive roots
parallel merge
minimum diameter
batch comparisons
optimization technique
merge sort
based parametric search
binary search fashion
applications of parametric
number of calls
two sorting algorithms
expected running time
parallel sorting algorithms
parametric search framework
resolve the comparisons
based on parametric
binary search approach
roots associated with
parametric search can
sorting algorithms that
o n processors
seem reasonable in
parallel merge sort
reasonable in practice
used as the
running time is

corpus/krapavin2000-test/1016179.txt
sessions
hops
queueing
delays
servers
scheduling
disciplines
fair
conserving
sharing
qos
networks
ring
shaping
bounds
ther
end delay
session length
hop sessions
delay bounds
processor sharing
fair queueing
98th percentile
weighted fair
session rate
first server
burst size
r m
analytical bound
multiplicative bound
subsequent servers
delay guarantees
packet switching
scheduling discipline
analytical bounds
delay guarantee
packet passes
simple coordination
gives priority
additive delay
session processing
work conserving
packet size
speed networks
actual delays
packet p
simulation results
weighted fair queueing
98th percentile session
end delay bound
mean delay session
subsequent servers quickly
double link network
processor sharing approach
end delay bounds
additive delay bound
single hop delay
coordinated earliest deadline
high speed networks
wfq scheduling discipline
delay bound is
processor sharing rpps
server utilization factor
packet delay guarantees

corpus/krapavin2000-test/1016210.txt
juntas
coordinates
queries
rejects
accepts
learning
regards
distributions
tests
permutations
proofs
vr f
independence test
adaptive test
size test
z q
least 2
test rejects
junta test
negligible variation
testing algorithm
boolean function
whose variation
property testing
detectable subsets
high probability
distribution p
function h
h iterations
fourier coe
function f
query complexity
lower bound
testing algorithms
boolean functions
d p
test accepts
sided non
compact analysis
adaptive testing
approximation parameter
probability at least
number of queries
non negligible variation
independence test to
property of being
size test rejects

corpus/krapavin2000-test/1016490.txt
triangles
surfaces
splitting
intersecting
tracing
modelling
n steps
shrinkwrap algorithm
function v
short edges
unacceptable edges
local curvature
normal vectors
topological changes
acceptable edge
color plate
adaptive triangulation
splitting edges
skeletal elements
convex polygons
r v
ray tracing
line segments
triangular mesh
taylor expansion
adaptive algorithm
value v
appendix b
quantitative statements
voxel boundaries
skeleton elements
great train
equilateral triangles
triangulation ok shrinkwrap
number of triangles
large scale structure
perpendicular to the
final iso surface
segments and convex
make this paper
give a coarse
great train rubbery
comparison with earlier
incomplete triangulation shrinkwrap
initially unacceptable edges

corpus/krapavin2000-test/1016857.txt
macros
formatting
string
interpreters
languages
invariants
arguments
expressions
strings
cons
programmers
programs
analyzing
laying
matching
embedded languages
partial evaluation
regular expression
host language
macro expansion
embedded interpreters
embedded programs
abstract value
scheme macros
static analysis
embedded language
compiler macros
false positives
macro system
value flow
embedded program
precise analysis
regular expressions
additional arguments
based analysis
first argument
flow analysis
program analysis
schemeql query
runtime errors
formatting language
third r
second r
hoc manner
abstract values
number of arguments
value flow analysis
regular expression language
using partial evaluation
flow of values
list of three
invariants that are
format substring s
derived expression forms
macros to partially
embedded languages contain
flow sensitive analysis
regexp match returns
abstract values that
enforced by their
embedded in scheme
object datum s

corpus/krapavin2000-test/1016897.txt
routing
arcs
weights
capacities
hashing
paths
loads
splitting
going
links
internetworks
outgoing
heuristics
leading
optimizing
setting
leaving
balancing
nodes
networks
arriving
weight setting
ospf routing
local search
general routing
worldnet backbone
p c
tabu search
shortest paths
cost function
demand matrix
weight settings
shortest path
optimal ospf
traffic flow
ospf weights
splitting flow
flow corresponding
neighborhood structure
optimizing ospf
flow going
satisfiable assignment
hashing tables
cost functions
oblivious heuristics
improving moves
non improving
neighborhood exploration
optimal cost
current solution
traffic engineering
ospf weight setting
local search heuristic
invcapospf unitospf heurospf
general routing problem
weight setting problem
optimal general routing
utilization demand invcapospf
optimal ospf routing
optimizing ospf weights
weight setting with
non improving moves
recommended by cisco
hard to find
canonical flow corresponding
commodity flow routing
concrete objective function
demand matrix d

corpus/krapavin2000-test/1017155.txt
extensions
observations
rules
obs
theories
refining
reasoning
interpretation
priorities
semantics
underlying
conclusions
consisting
servations
default rules
observation models
observation theory
default theory
observation model
default rule
default logic
observation logic
free default
refined evidence
oe e
sensor fusion
videocamera image
compatible extension
defeasible observations
d iff
compatible extensions
normal default
observation theories
specific proposition
minimal default
evidence underlying
logic using
defeasible observation
background knowledge
evidence e
unique extension
d consisting
r e
exact angle
multiple extension
rules representing
less observation
unblocked extensions
considerable distance
layered extensions
f p
probabilistic interpretation
satisfaction relation
normal free default
observation based on
refined than e
level observation models
refined evidence than
free default logic
observation theory d
first order models
extended observation models
free default rules
based on evidence
default rule d
first order model
based on more
default rules and
observations oe e
default rules representing
multiple extension problem
minimal default rules
observation logic using
free default theory
top less observation
compatible observation models
normal default theory

corpus/krapavin2000-test/1017463.txt
clocks
processors
faults
stabilizing
synchronization
protocols
self
synchronizing
failures
nonfaulty processors
clock values
clock value
nonfaulty processor
clock synchronization
physical clock
byzantine faults
processor p
safe configuration
common pulse
stabilizing protocols
chinese remainder
faulty processors
logical clocks
synchronous protocol
first configuration
synchronization protocols
bounded clocks
successive pulses
remainder theorem
luck intervenes
distributed counter
logical clock
transient faults
physical clocks
synchronizing clocks
tolerant averaging
two randomized
first protocol
nonfaulty processor p
clock synchronization protocols
new clock value
nonfaulty processors to
chinese remainder theorem
coin toss results
around when appropriate
presence of faults
tolerant averaging function
collecting clock values
synchronizing clocks in
set of processors

corpus/krapavin2000-test/1017478.txt
plugins
loading
edsls
linking
typing
languages
emacs
string
dsls
compiling
scripting
reloading
enables
resolving
enabling
dynamic loader
host application
dynamic types
extension language
plugin library
dynamic typing
haskell plugins
plugin source
type safety
dynamic loading
extension languages
object code
dynamic type
compilation manager
plugin infrastructure
type safe
runtime system
source code
haskell source
configuration file
specific languages
object file
haskell compiler
interactive haskell
haskell code
plugin code
plugin interface
error messages
dynamic linking
source file
abstract syntax
application author
load obj
haskell interpreter
plugins using
plugin author
perform type
loaded plugins
lightweight parser
c string
done loading
haskell p
external process
typed extension
runtime compilation
infrastructure library
dynamics implementation
haskell plugin
haskell environment
function interface
base linking
separate compilation
staged type inference
host application and
haskell source file
using dynamic types
operating system s
plugin library s
plugin infrastructure library
c and objective
base linking done
extension languages and
typed extension language
foreign function interface
glasgow haskell compiler
ghc base string
statically typed extension
interactive haskell environment
using haskell plugins
type checking using
haskell compiler s
application configuration files
dynamically loaded plugins
dynamically checked plugins

corpus/krapavin2000-test/1017779.txt
events
laws
occurrences
expressions
semantics
subexpressions
operators
detecting
resources
dis
timing
pressions
restrictions
reasoning
meaning
occurring
criteria
stating
restriction policy
event stream
composite events
event expressions
event streams
primitive event
algebra semantics
primitive events
composite event
temporal restriction
event expression
event instance
event detection
equivalent expressions
limited resources
algebraic laws
event instances
transformation algorithm
event occurrences
event algebra
algebraic properties
formal reasoning
single event
active databases
event patterns
identifier p
restriction policies
declarative semantics
detection mechanism
event specification
reactive systems
specification language
many expressions
expression equivalence
memory complexity
primitive instance
detection algebra
detected with limited
facilitate formal reasoning
u neg s
event stream s
extent the operators
showing to what
rem neg s
primitive event stream
operators comply with
event specification language
comply with intuition
timing constraints and
rather than to
detection can be
expressions can be
individual operator occurrences
expressions to be
detected event occurrences
formal restriction policy

corpus/krapavin2000-test/1017794.txt
staging
circuits
generators
optimizations
ys
languages
annotations
ms
computations
ensuring
guarantees
programs
abstract interpretation
generated code
rap languages
hardware description
deployment platform
aware programming
monadic style
combinatorial circuits
type system
posteriori optimizations
manifest interfaces
efficient circuits
static type
fast fourier
development platform
partial evaluation
description languages
stage computation
generated circuits
stage programming
concrete type
specific optimizations
generated programs
staging annotations
reconfigurable hardware
fourier transform
type systems
code type
abstraction mechanisms
code resulting
generated computations
fast fourier transform
floating point multiplications
hardware description languages
generated by fftw
bind mg xs
domain specific optimizations
single assignment programming
use abstract interpretation
add staging annotations
sound reduction semantics

corpus/krapavin2000-test/1018238.txt
oading
offloading
triggering
monitoring
partitioning
devices
adaptations
relieving
incurring
overcoming
delivering
oading inference
inference engine
mobile device
oading platform
candidate partition
application execution
partition plan
execution graph
pervasive computing
oading system
fuzzy control
partition plans
wireless bandwidth
decision making
program objects
mobile devices
application partitioning
memory size
remote data
control model
oading rules
prototype experiments
java class
available memory
wireless network
total memory
smaller memory
oading decisions
computing environment
remote execution
graph edge
partition selection
java heap
available bandwidth
current prototype
constrained devices
expensive application
oading inference engine
candidate partition plan
decision making approaches
different decision making
candidate partition plans
average interaction stretch
fuzzy control model
application execution graph
pervasive computing environment
generic fuzzy inference
total execution time
approach different decision
inference engine s
new memory utilization
total bandwidth requirement
linguistic variable availmem
application execution monitoring
stochastic con dence
inference engine uses
making problems in
expensive application rewriting
resource constrained devices
decision making problems

corpus/krapavin2000-test/1018355.txt
augmenting
graphs
neighboring
labeling
ow algorithms
h prf
energy minimization
image restoration
q prf
combinatorial optimization
graph cuts
active nodes
residual graph
augmenting paths
minimization methods
free nodes
dinic algorithm
linear interactions
experimental tests
standard algorithms
computer vision
saturated edges
ow algorithm
new algorithm
neighboring pixels
new min
passive nodes
residual capacities
running times
image segmentation
edge weights
graph structures
interaction penalties
cut algorithms
ow techniques
style augmenting
energy minimization methods
residual graph g
search tree s
pairs of neighboring
max flow algorithms
graph based methods
style augmenting paths
virtual reality visualisation
push relabel algorithms
fulkerson style augmenting
shortest augmenting path
interactive graph cuts

corpus/krapavin2000-test/1018405.txt
res
inputs
circuits
units
trees
guessing
bits
attempting
proving
imposing
direct product
product assertion
product assertions
decision trees
communication protocols
r units
compute f
f k
product theorem
bit communication
low discrepancy
f airdepth
communication complexity
decision tree
communication protocol
suc res
fair decision
parallel repetition
boolean circuits
product results
repetition theorem
computational models
strong product
product problem
function f
general counterexample
random guessing
k times
forest model
algorithm attempting
discrepancy using
kr units
strong direct product
direct product assertions
direct product assertion
hard on average
direct product theorem
direct product question
parallel repetition theorem
attempting to compute
direct product results
bit communication protocol
probabilistic communication complexity
bit communication protocols
f airdepth kd
direct product problem
strong product assertion
k decision trees

corpus/krapavin2000-test/1018452.txt
processors
crashes
failures
balancing
tasks
passing
simulations
bounds
analyses
matching
gathering
performing
ces
simulating
log p
p log
p f
log log
work complexity
prone processors
failure pattern
f p
n f
o n
load balancing
message passing
message complexity
algorithm simulations
n tasks
lower bounds
complete analysis
balancing assumption
log f
n p
p processors
r p
c p
memory model
passing model
processor algorithm
failure patterns
memory models
f c
n problem
upper bounds
memory algorithm
new bounds
r r
processor steps
synchronous processors
processor crashes
p failure
r instances
r n
p log p
log log p
perfect load balancing
failure prone processors
load balancing assumption
crash prone processors
number of processors
shared memory model
message passing model
shared memory models
number of crashes
shared memory algorithm
passing and shared
message passing algorithm
work complexity w
synchronous message passing

corpus/krapavin2000-test/1018488.txt
equivalences
axiomatizations
preorders
axioms
semantics
actions
ccs
transitions
algebras
notions
branching
behaviour
relations
processes
contexts
occurring
languages
operators
interleaving
equations
sequences
presenting
approximations
bccsp terms
nested simulation
bccsp term
possible futures
closed substitution
language bccsp
bisimulation equivalence
nested trace
axiom system
trace equivalences
simulation preorder
closed terms
equational axiomatizations
behavioural equivalences
finite equational
completed trace
modal characterization
equational axiomatization
trace equivalence
context c
inequational axiomatization
substantial substitution
closed term
labelled transition
behavioural equivalence
time spectrum
nested semantics
trace semantics
time branching
behavioural semantics
finite axiomatizability
process algebras
inductive hypothesis
inequation p
technical developments
branching time
inequational logic
closed bccsp terms
nested simulation preorder
nested simulation and
possible futures preorder
nested trace equivalences
closed bccsp term
finite inequational axiomatization
possible futures equivalence
time branching time
branching time spectrum
finitely based over
linear time branching
labelled transition systems
finite equational axiomatizations
non finite axiomatizability
inequation p v
notions of behavioural
afford finite equational
axiom system e
left merge operator
bccsp is the
finite equational axiomatization
nested trace equivalence

corpus/krapavin2000-test/1022335.txt
symbols
sorts
predicates
formulas
substitutions
hierarchies
reasoning
rules
relationships
relations
expressions
kinds
occurring
languages
res
resolution system
label hierarchy
hierarchical resolution
sorted resolution
terminological knowledge
sorted logic
resolution rules
based language
label terms
based formulas
sublabel relations
knowledge base
labeled substitution
sublabel relation
sort predicates
hierarchical relationships
labeled substitutions
assertional knowledge
hierarchical representation
ken kaneiwa
sorted substitution
sort symbols
unary predicates
elimination rule
unary predicate
terminological hierarchy
animal ancestor
subordinate relations
subsort relation
ary predicates
binary predicates
resolution rule
based expressions
sorted substitutions
hierarchical expressions
subordinate relation
erent kinds
predicate symbols
various symbols
erent types
x l s
hierarchical resolution rules
based formulas in
formulas in hierarchical
sorted resolution system
kinds of symbols
types of subordinate
complicated sublabel relations
order sorted resolution
terms and formulas
labeled signature lh
sort l s
animal ancestor descendant
labeled substitutions and
substitutions and hierarchical
simple sublabel relations
hierarchical resolution system
relation l s
ancestor descendant parent
sets of individuals
representation and reasoning
first order symbols
terminological hierarchy section

corpus/krapavin2000-test/1022634.txt
embedding
coordinates
routing
networks
neighboring
networking
approximation
graphs

ts
unit disk
disk graph
quasi unit
virtual coordinates
grid drawing
disk graphs
ad hoc
sensor networks
single chains
directed towards
graph g
r g
approximation ratio
connectivity information
lower bound
euclidean plane
good embedding
approximation algorithm
euclidean distance
neighboring nodes
geometric routing
unit disk graph
quasi unit disk
ad hoc and
unit disk graphs
disk graph g
embedded in the
wireless ad hoc
ad hoc networks
sensor networks proceedings
non neighboring nodes

corpus/krapavin2000-test/1023754.txt
receivers
probing
scheduling
cts
lans
flows
fading
rates
fair
channels
nels
ts
exploiting
networks
improves
achieves
networking
benefits
schemes
transmissions
channel probing
network throughput
data transmission
channel conditions
relative gain
channel condition
multiuser diversity
wireless lans
rate adaptation
wireless lan
temporal fairness
coherence time
data rates
gain scheduling
medium access
adaptation scheme
channel coherence
phy layer
rayleigh fading
throughput improvement
access diversity
overall network
data packets
adaptation schemes
multiple receivers
overall throughput
current channel
existing rate
wireless networks
scheduling algorithms
instantaneous channel
high data
higher data
channel quality
highest data
receiver scheduling
exploiting multiuser
using oar
d f
fair scheduling
varying channel
wireless network
transmit data
transmission rate
temporal fair
cts control
mad scheduling
mad using
relative gain scheduling
rate adaptation scheme
channel coherence time
medium access diversity
existing rate adaptation
exploiting multiuser diversity
channel probing data
high data rates
overall network throughput
madpac rev performs
varying channel conditions
instantaneous channel conditions
ad hoc networks
multiuser diversity gain
multiple data flows
multiuser diversity gains
channel condition information
mad using oar
among multiple data
throughput gain and
feasible data rate
current channel condition
link goodput optimization
maintaining temporal fairness
asymptotic performance bound

corpus/krapavin2000-test/1024018.txt
prs
circuits
gates
polynomials
counting
monomials
rules
questions
evaluating
families
proof circuits
acyclic prs
proof trees
circuit c
replacement systems
polynomial replacement
input x
simple prs
deterministic prs
gate g
membership problems
line program
arithmetic circuits
boolean circuit
line programs
variable membership
polynomial p
arithmetic circuit
n inputs
m c
logarithmic space
acyclic systems
replacement system
circuit value
c c
hand side
input variables
systems definition
integer coefficients
input gates
deterministic and acyclic
polynomial replacement systems
simple and deterministic
simple acyclic prs
variable membership problems
simple and acyclic
proof trees of
boolean circuit c
f thetag circuits
circuit c and
range is np
circuit value problem
arithmetic circuits and
replacement systems definition

corpus/krapavin2000-test/1024022.txt
bipartiteness
vertices
queries
graphs
edges
sampling
selecting
running
bounds
testing bipartiteness
property p
average degree
query complexity
neighbor queries
dense graphs
graph g
th neighbor
degree graphs
testing algorithm
algorithm test
lower bound
length cycle
general graphs
property testing
regular graphs
distance parameter
adjacency matrix
multiple edges
query access
g n
x v
n vertices
testing algorithms
graph properties
generated according
graph property
testing properties
matrix model
sparse graphs
testing graph
vertex v
actual number
constant degree
e p
bound holds
far from bipartite
number of edges
vertex pair queries
odd cycle s
type of queries
odd length cycle
bounded degree incidence
degree incidence lists
query access to
o min queries
queries and vertex
number of vertices
equivalent to sampling
graph property p
given query access
testing graph properties

corpus/krapavin2000-test/1024079.txt
pivoting
matrices
ordering
nonzeros
orderings
preordering
nding
partial pivoting
column ordering
ordering algorithm
cholesky factorization
symbolic factorization
lu factorization
symbolic update
column c
sparse matrix
symbolic lu
better orderings
numerical factorization
nonzero entries
gaussian elimination
symmetric matrices
multiple elimination
row interchanges
nonzero pattern
approximate minimum
nonsymmetric matrices
rectangular matrices
colamd ordering
strong hall
row ordering
degree ordering
sparse cholesky
multifrontal method
colmmd ordering
symmetric ordering
computational uid
sparse gaussian
chemical process
point operations
column preordering
nonzero patterns
pattern multifrontal
arbitrary row
aggressive row absorption
symbolic lu factorization
sparse partial pivoting
external row degree
number of nonzeros
mathematical software toms
minimum degree ordering
approximate minimum degree
degree ordering algorithm
sparse cholesky factorization
column ordering q
sparse gaussian elimination
colamd and symamd
computational uid dynamics
linear programming problems
oating point operations
row ordering p
colamd ordering algorithm
initial aggressive row
pattern multifrontal method
chemical process separation
node selection strategies
ordering quality nonzeros

corpus/krapavin2000-test/1024149.txt
terminals
cutting
embedding
rounding
slicing
connecting
bounds
bedding
ordering
cutting scheme
integrality gap
maximum density
multiway cut
geometric relaxation
cut problem
linear program
way cuts
approximation algorithm
cutting schemes
performance ratio
performance guarantee
terminal case
probability distribution
scheme chooses
geometric embedding
cut corresponds
terminal j
edge e
improved approximation
general k
approximation algorithms
multiway cut problem
aligned segment e
closed form expression
provable upper bounds

corpus/krapavin2000-test/1024162.txt
instances
coefficients
hyperplanes
ejols
branching
intersecting
frobenius number
z n
infeasible instances
lattice hyperplanes
polytope q
integer programming
direction e
search tree
d l
tree search
lattice hyperplane
frobenius numbers
lattice z
unit direction
search algorithm
lower bound
computational study
integer multiple
r n
constant depending
integer branching
solve using
decomposable structure
comparable sizes
verify infeasibility
unit directions
e n
tree search algorithm
large frobenius numbers
lattice z n
direction e n
unit direction e
compared to p
number of nodes
see that instances
instances we consider
first isomorphism theorem
integer branching algorithm
second computing time

corpus/krapavin2000-test/1024429.txt
locations
parts
matching
images
sampling
connections
configurations
faces
joints
foreshortening
learning
filters
people
tracking
bodies
matches
objects
finding
connecting
relationships
hypotheses
heuristics
features
measures
transformations
modeling
pictorial structure
pictorial structures
energy minimization
possible locations
location l
training examples
part v
structure models
matching results
l j
appearance parameters
object configuration
human body
posterior distribution
statistical framework
connected parts
iconic representation
minimization problem
individual parts
transformed space
binary images
cient algorithms
deformation costs
object configurations
connection parameters
energy function
binary image
optimal location
part models
transformed locations
relative locations
deformable configuration
matching algorithms
object recognition
minimization algorithm
l r
appearance models
joint distribution
model parameters
background subtraction
erent modeling
structure model
statistical formulation
prior distribution
gaussian distribution
modeling schemes
single part
good matches
novel images
articulated objects
binary decisions
object location
dynamic programming
computer vision
generic recognition
desktop computer
pairs of parts
pictorial structure models
connections between parts
energy minimization problem
best match of
energy minimization algorithm
pictorial structure model
erent modeling schemes
finding the best
part v j
connected by flexible
position of one
relationships between parts
parts arranged in
parts are connected

corpus/krapavin2000-test/1024484.txt
rules
domains
labeling
notions
solvers
ps
scenes
pos
constraints
cons
mains
concerning
equality rules
membership rules
rule consistency
constraint programming
arc consistency
constraint c
membership rule
based programming
generation algorithm
krzysztof r
programming viewed
eric monfroy
constraint propagation
full adder
local consistency
equality rule
finite domains
f c
constraint satisfaction
variable x
boolean constraints
polyhedral scenes
constraint logic
satisfaction problems
propagation rules
respective domains
current domain
arbitrary arity
chr rules
predefined constraints
logic programming
valued logic
given constraints
finite constraint
valid rules
given finite
repeated application
programming language
rules generation algorithm
equality rules generation
constraint programming viewed
viewed as rule
apt and eric
equality rules and
membership rules generation
sequence of variables
rule consistency and
built out of
explicitly given constraints
types of rules
constraint satisfaction problems
constraint logic programming
small finite domains
constraints of arbitrary
describing polyhedral scenes
rules and membership
constraint programming can
notions of local
consistency for constraints
programming can be
constraint handling rules
repeated application of
set of rules

corpus/krapavin2000-test/1024485.txt
typing
fages
subtyping
francois
inequalities
constructors
predicates
coercions
subtypes
arities
programs
renaming
checking
symbols
libraries
inferring
les
metaprogramming
expresses
errors
constraints
cates
type system
subtype inequalities
constraint logic
logic programs
type constructors
typing constraint
subject reduction
francois fages
emmanuel coquery
type constraints
type inference
type checking
variable typing
type declarations
prescriptive type
subtype relations
type list
denitional genericity
type structure
clp programs
logic programming
execution model
parametric polymorphism
dierent arities
csld resolution
predicate symbols
type variables
type checker
constraint domains
substitution steps
programming errors
sicstus prolog
subtype constraints
genericity condition
function symbols
constraint programming
cubic time
typed program
type schemes
basic types
type error
contravariant type
constraint logic programs
typing constraint logic
francois fages and
fages and emmanuel
variable typing u
prescriptive type system
denitional genericity condition
infered type list
checking and type
type checking and
typed with type
type inference algorithms
abstract execution model
subject reduction w
polymorphic type system
type checking algorithm
contravariant type constructors
prescriptive type systems

corpus/krapavin2000-test/1024923.txt
simulations
branching
stuttering
invariants
specications
transitions
provers
proving
relations
actions
satises
proofs
establishing
checking
specification
normed forward
forward simulation
normed backward
backward simulation
forward simulations
backward simulations
step renements
norm function
start states
trace inclusion
execution correspondence
partial completeness
reachable states
prophecy relations
level specication
normed simulations
automaton b
norm functions
arbitrary norm
higher level
r b
tautology checking
branching bisimulation
invisible nondeterminism
transfer condition
lower level
dashed lines
start state
branching bisimilarity
reachable subautomata
prophecy relation
founded set
global reasoning
complete proof
theorem provers
last state
normed forward simulation
normed backward simulation
forward simulation from
normed forward simulations
normed backward simulations
branching forward simulation
normed history relation
n is a
forward simulations and
complete proof method
branching forward simulations
checking is decidable
tautology checking is
arbitrary norm function
simulations and normed
nite invisible nondeterminism
founded set s
partial completeness result
proof method for
function from states

corpus/krapavin2000-test/1027341.txt
simulations
networks
routing
les
nodes
dis
spatial distribution
random waypoint
deployment region
hoc networks
waypoint model
limit distribution
mobility parameters
voronoi diagram
ad hoc
delaunay triangulation
mobile ad
mobility model
total edge
mobility steps
uniformity test
mobility models
statistical tests
experimental density
like motion
pause time
nearest neighbor
uniform distribution
mobile network
uniformity assumption
theoretical density
critical transmitting
stationary networks
distribution generated
node distribution
square cells
limit distributions
random way
like model
hypothesis h
empty cells
point model
hoc network
analytical results
deployment area
experimental distribution
mobile networks
standard deviation
next position
distribution resulting
statistical hypothesis
mobility pattern
initial node
cellular networks
normal distribution
node spatial distribution
ad hoc networks
random waypoint model
mobile ad hoc
longest nearest neighbor
total edge length
nearest neighbor edge
wireless ad hoc
nodes are distributed
spatial distribution generated
critical transmitting range
uniformly and independently
ad hoc network

corpus/krapavin2000-test/1027352.txt
requests
items
deadlines
broadcasting
clients
scheduling
users
dissemination
profiles
disks
environments
frequencies
coming
channels
becoming
arriving
requirements
timing
incorporating
suffers
contents
situations
periodic broadcast
broadcast program
uplink channel
asymmetric communication
access frequency
broadcast cycle
adaptive hybrid
demanded items
user access
access distribution
broadcast mode
communication environments
channel saturation
actual user
deadline constraints
broadcast disks
overload conditions
broadcast model
broadcast models
frequency distribution
client profiles
bandwidth requirements
edf batching
communication environment
strong overload
cycle length
hybrid model
available bandwidth
data dissemination
adaptive models
dynamic uniform
deadline requirements
relative deadlines
hybrid models
potential requests
access frequencies
adaptive model
dynamic time
broadcasting periodically
deadline distribution
broadcast frequencies
downlink channel
worth broadcasting
dynamic client
capacity uplink
single transmission
total bandwidth
periodic broadcast program
number of requests
number of deadlines
critical asymmetric communication
asymmetric communication environments
user access distribution
actual user access
critical adaptive hybrid
access frequency distribution
demanded time unit
broadcast cycle length
adaptive hybrid broadcast
uplink channel saturation
bandwidth assigned to
included in the
broadcast program and
unit edf batching
asymmetric communication environment
satisfied by the
static zipf distribution
frequently demanded items
hybrid broadcast model
bandwidth allocated to
number of users
user access pattern
broadcast program to
adaptive hybrid data
dynamic client profiles
strong overload conditions
distribution limited uplink
demand broadcast mode
dynamic zipf distribution
items that are
assigned to each
number of items
capacity uplink channel

corpus/krapavin2000-test/1028478.txt
signatures
curves
pairing
groups
messages
signing
verifying
families
users
f q
signature scheme
discrete log
e f
elliptic curve
order p
elliptic curves
short signatures
gdh groups
bilinear map
prime order
signature queries
gap di
weil pairing
group pair
random oracle
cdh problem
hellman groups
chosen message
message m
hellman problem
hash function
signature length
supersingular curves
z p
e p
short signature
tate pairing
gdh group
computational co
computable isomorphism
h m
domain hash
hellman group
hellman tuple
supersingular curve
signature schemes
full domain
computational di
approximately 2
pick random
bilinear group
key v
dsa using
message recovery
abelian varieties
discrete log problem
prime order p
co gdh groups
e hellman groups
signature scheme is
chosen message attack
computational co di
discrete log algorithm
generic discrete log
computational di e
supersingular elliptic curves
full domain hash
gdh group pair
non supersingular curves
ciently computable isomorphism
public key v
bilinear group pair
mov reduction maps

corpus/krapavin2000-test/1029119.txt
routing
protocols
routes
attacks
sys
messages
neighbors
res
neighboring
nodes
capabilities
flaws
preceding
novelties
participants
assurances
networks
transmissions
route request
corrupted nodes
routing protocol
world model
route discovery
world adversary
hoc routing
routing protocols
ad hoc
node list
corrupted node
compromised identifiers
plausible route
adversarial node
source routing
demand source
hoc networks
negligible probability
endaira protocol
secure routing
request identifier
compromised identifier
plausible routes
digital signatures
routing security
discovery process
following message
identifier z
simulation paradigm
following identifier
communication capabilities
security analysis
ad hoc routing
hoc routing protocols
real world model
demand source routing
ad hoc networks
real world adversary
routing protocol for
route reply messages
route discovery process
basic endaira protocol
source routing protocols
secure routing protocol
route discovery part
following message to
first adversarial node
route reply message
source routing protocol
send the following
contains the identifiers
second adversarial node
corrupted nodes in
wireless ad hoc
key exchange protocols

corpus/krapavin2000-test/1029199.txt
ases
routing
attacks
paths
topologies
senders
isps
networks
prefixes
nodes
relationships
observes
eavesdropping
communications
servers
mix network
location independence
level path
mix networks
level paths
anonymity networks
network path
node selection
onion routing
level topology
exit paths
ip address
bgp routing
routing tables
anonymity network
cable modem
latency networks
hops tor
mix paths
endpoint attacks
mix net
selection algorithms
internet routing
mix path
directory servers
mix network path
single as can
senders and receivers
exit node to
mix network paths
existing mix networks
node selection algorithms
observed by a
low latency networks
border gateway protocol
likely to be

corpus/krapavin2000-test/1029351.txt
lamping
bookkeeping
sharing
reductions
families
abstract algorithm
sharing graph
optimal reduction
linear logic
shared reductions
term encoding
term m
l c
ne logic
typed terms
c l
optimal sharing
graph reduction
elementary function
elementary time
normal form
non elementary
inside eal
affine logic
higher order
elementary functions
graph rewriting
e l
box nesting
optimal reducer
optimal duplication
optimal implementation
dierent encoding
quantier elimination
en using
number of shared
optimal sharing graph
true c false
functional programming languages
elementary linear logic
box nesting depth
typeable in eal
bold box stands

corpus/krapavin2000-test/1029352.txt
learning
circuits
distributions
sampling
queries
identifying
les
product distribution
term dnf
fourier coefficients
uniform distribution
learning monotone
product distributions
monotone dnf
monotone functions
log n
linial et
polynomial time
boolean function
bounded product
size dnf
compute monotone
polynomial size
depth circuits
constant depth
learning theory
algorithm learnmonotone
learning algorithm
dnf formulae
time algorithm
query algorithm
random examples
fourier transform
fourier spectrum
important variables
fourier coefficient
boolean functions
chernoff bounds
labeled examples
let c
small subsets
unbounded fanin
class c
log log
least outputs
membership queries
small constant
et al
linial et al
constant bounded product
compute monotone functions
polynomial size dnf
low fourier coefficients
set s f
polynomial time algorithm
bounded product distribution
algorithm learnmonotone learns
constant depth circuits
small constant depth
real valued functions
log log n
arbitrary polynomial size
learning monotone 2
monotone boolean function
bounded product distributions
polynomial time membership
size m circuits
algorithm which learns
time algorithm which

corpus/krapavin2000-test/1029901.txt
invariants
optimizations
upgrades
refactoring
postprocessing
executions
checking
implementations
incompatibilities
runs
verifying
evaluates
preconditions
predicting
eliminating
timizations
program points
program point
incremental algorithm
invariant detection
simple incremental
incremental algorithms
invariant detector
pass algorithm
variable hierarchy
target program
dynamic invariant
equal variables
derived variables
constant variables
likely invariants
space usage
dynamic detection
trace file
batch algorithm
trace data
operational abstraction
different program
dependent invariants
partial order
test suites
variables optimization
weaker invariants
optimization opportunities
antecedent properties
redundant properties
checking invariants
candidate invariants
test cases
g v
program executions
simple incremental algorithm
number of invariants
dynamic invariant detection
algorithms and optimizations
multiple program points
sample dependent invariants
incremental algorithms and
properties are checked
number of samples
incremental algorithm section
likely program invariants
properties that are
number of variables
object oriented component
relevant program invariants
simple java classes

corpus/krapavin2000-test/1030096.txt
extractors
perturbations
attacks
string
hamming
dodis
secrets
constructions
oracles
decoding
pos
outputs
correcting
certificates
notions
fuzzy sketch
fuzzy extractor
chosen perturbation
private string
public string
fuzzy extractors
perturbation attacks
fuzzy sketches
public strings
secure fuzzy
randomness extractor
generic fuzzy
private queries
perturbation attack
outsider security
function fsk
error correction
permutation group
space m
isometric permutations
variable w
random oracle
private strings
chosen perturbations
fuzzy commitment
adaptive outsider
privacy amplification
public queries
adaptive chosen
random bits
metric space
random oracles
generic construction
authentication protocol
linear code
fuzzy secrets
isometric permutation
admissible perturbations
randomization strings
theoretic security
public query
fresh random
statistical distance
drs construction
sketch construction
metric d
chosen perturbation attacks
public string q
fuzzy sketches and
sketches and extractors
generic fuzzy sketch
private string s
random variable w
adaptive chosen perturbation
metric space m
chosen perturbation attack
adaptive outsider chosen
fuzzy sketch construction
fuzzy sketch and
variable w m
average min entropy
transitive isometric permutation
secure fuzzy sketch
adaptive insider chosen
isometric permutation group
information theoretic security

corpus/krapavin2000-test/1030130.txt
fs
keys
joining
users
roles
communications
gs
schemes
encrypting
hierarchies
lends
organizations
entities
based encryption
time period
broadcast encryption
encryption scheme
secret keys
key sk
hierarchical identity
forward security
time periods
root pkg
w h
lower level
o h
key broadcast
hierarchical id
current time
private keys
forward secrecy
secure communications
dynamic joins
bilinear di
random oracle
oracle model
key generation
multiple roles
key update
random oracles
multiple identities
public parameters
ciphertext security
scalable forward
content provider
binary tree
key encryption
access control
scheme ii
adversary issues
hibe schemes
key broadcast encryption
based encryption scheme
hibe scheme can
public key broadcast
secure hibe scheme
broadcast encryption scheme
random oracle model
key be scheme
current time period
scheme can be
secret key sk
broadcast encryption fs
scalable forward secure
chosen ciphertext security
multiple hierarchical identity
hibe scheme and
e h s
public key encryption
public key be
based access control
next time period
secure broadcast encryption
level setup queries
multiple hierarchical id
forward security in
key corresponding to
cannot be achieved

corpus/krapavin2000-test/1031806.txt
sing
regularization
stokes
singularities
hydrodynamics
domains
opening
insulating
discretizations
denoting
conducting
fields
approximation
equations
linearizations
references
demonstrating
finite element
weighted regularization
weight vector
magnetic field
mhd problems
mhd problem
incompressible mhd
convex domains
element approximation
vector satisfying
polyhedral domains
boundary conditions
field b
w h
weak formulation
regularization technique
incompressible magneto
magneto hydrodynamics
continuous embedding
boundary data
r c
continuity properties
solution components
regularization term
element methods
r e
navier stokes
optimal error
singular solution
regularization approach
magnetic fields
magnetic singularities
element method
error bounds
e e
small data
bilinear form
magnetic bilinear
cited therein
sup stable
dimensional analogue
weighted spaces
standard inf
nodal elements
derive quasi
dimensional mhd
c v
finite element approximation
weight vector satisfying
mixed finite element
magnetic field b
incompressible mhd problems
hood taylor elements
incompressible magneto hydrodynamics
weighted regularization technique
finite element methods
finite element method
weighted regularization approach
optimal error bounds
discrete inf sup
smooth solution errors
finite element spaces
proposed finite element
using the weighted
technique recently developed
weighted regularization is
stationary incompressible magneto
linear mhd problems
incompressible mhd equations
standard inf sup
regularization technique recently
magnetic bilinear form
type mhd problem

corpus/krapavin2000-test/1031858.txt
os
segments
shooting
subdivisions
deletions
insertions
cascading
endpoints
blocks
rebuilding
answering
sorting
searching
structures
emanating
tting
log b
n b
green segments
point location
ray shooting
external memory
vertical ray
logarithmic method
multislab structure
using o
shooting query
log m
red segments
fractional cascading
rst segment
secondary structures
disk blocks
planar point
structure m
external version
disjoint segments
planar subdivision
general subdivisions
dynamic data
structure using
linear space
internal memory
memory data
vertical slab
dynamic point
blue segments
dynamic structure
k b
data structures
o b
internal node
support deletions
monotone subdivisions
global rebuilding
shooting queries
searching problems
planar subdivisions
sampled segments
r v
n log
d j
et al
log b n
vertical ray shooting
performed in o
answered in o
ray shooting query
constructed in o
planar point location
external memory data
structure using o
insertions and deletions
dynamic data structure
multislab structure m
os and such
dynamic point location
structure can be
deletions can be
memory data structures
dynamic fractional cascading
consecutive green segments
static external memory
external memory algorithms
internal node v
ray shooting queries
new external version

corpus/krapavin2000-test/1032082.txt
circuits
counting
modes
protocols
communication
ir
arguments
classes
branching
matrices
primes
tradeoffs
bounds
las
hing
relations
communication complexity
p cc
complexity classes
np cc
modmp cc
counting communication
protocol p
mod p
pp cc
acceptance mode
prime number
communication protocol
counting acceptance
lower bounds
binomial coefficient
branching programs
rejecting computations
variation ranks
n p
mod q
probabilistic communication
p p
communication protocols
rank arguments
nondeterministic communication
prime factorization
nondeterministic mode
nondeterministic protocols
accepting computations
monotone circuits
natural number
nonnegative integer
communication complexity classes
counting communication complexity
mod p p
cc are incomparable
counting acceptance modes
p p cc
incomparable with regard
regard to inclusion
modmp cc are
cc and modmp
lower bounds on
probabilistic communication complexity
binomial coefficient consider
homeister stephan waack
nondeterministic communication protocols
nondeterministic vlsi circuits
lower bound arguments
sigma n holds

corpus/krapavin2000-test/1032163.txt
registration
cells
signaling
lrs
overlapping
calls
reconfiguration
pcs
updates
areas
messaging
users
neighboring
adapting
communication
patterns
shrinking
expanding
caching
services
networks
balancing
registration area
call delivery
registration areas
location management
ra handoffs
ra moves
core cells
reconfiguration period
inter gammaoutgoing
inter gammaincoming
mobility pattern
pcs networks
candidate cells
call patterns
new vlr
k signaling
n moves
mobile users
mobile service
proposed scheme
old vlr
call pattern
ra m
mobility patterns
management schemes
inter ra handoffs
inter ra moves
c inter gammaoutgoing
c inter gammaincoming
intra ra moves
intra gammamove gammanoncore
intra ra handoffs
intra gammacall gammanoncore
ra call deliveries
inter gammaoutgoing gammamove
inter gammaoutgoing gammacall
intra gammacall gammacore
home location registrar
inter gammaincoming gammacall
k signaling load
location management schemes
different cost depending
gammacall gammanoncore gammanoncore
dynamically adapting registration
inter gammaincoming gammamove
mobility pattern m

corpus/krapavin2000-test/1032502.txt
cache
instructions
branches
codes
blocks
reordering
torrellas
workloads
sequences
inlining
optimizations
breaking
crossing
conflicts
trying
mapping
basic blocks
fetch unit
trace cache
basic block
cache miss
instruction cache
miss rate
core fetch
sequence breaks
software trace
instruction fetch
conditional branches
code reordering
branch prediction
branch predictor
popular traces
useful instructions
hardware trace
per cycle
better results
cache lines
taken branches
code sequences
execution path
large codes
fetch mechanism
double size
fetched instructions
prediction accuracy
cache line
unconditional branches
consecutive instructions
profile information
execution sequences
memory positions
reordering technique
sequential fetch
subroutine call
small htc
popular sequences
indirect jumps
dynamic references
execution paths
high instruction
rate reduction
cache misses
cache miss rate
core fetch unit
software trace cache
instruction cache miss
hardware trace cache
branch prediction accuracy
fetched instructions per
codes with few
double size alone
miss rate reduction
basic blocks to
unused basic blocks
basic block transitions
code reordering technique
sequential fetch unit
sequences of basic
instruction cache misses
sequence breaking bb
per cycle obtained

corpus/krapavin2000-test/1035549.txt
mixing
permutations
weights
items
hyperplanes
fpras
counting
ows
sampling
hoeding
walks
ces
holding
solutions
almost uniform
uniform permutation
mixing time
uniform permutations
ow f
knapsack problem
balanced permutation
almost uniformity
balance property
balance condition
random permutation
ow carrying
symmetric random
index order
uniform distribution
feasible solutions
rapid mixing
partial sums
o n
xed number
arbitrary weights
multiple hyperplanes
knapsack solutions
knapsack capacity
balanced permutations
symmetric dierence
arbitrary vertices
x fig
l f
d m
balanced almost uniform
almost uniform permutation
almost uniform permutations
random walk on
mixing time of
bounded ratio case
symmetric random walk
1 knapsack problem
feasible solutions to
ciently large m
almost uniformity of
ow carrying path
uniform random permutation

corpus/krapavin2000-test/1035752.txt
clocks
detecting
events
predicates
timestamps
synchronization
advancing
orderings
ordering
satisfying
monitoring
gs
removes
satisfies
debugging
processes
messages
local states
local state
global state
poss db
computation c
poss hb
state g
case time
global states
clock synchronization
detection algorithms
time complexity
computation satisfies
global predicates
partial ordering
distributed systems
line detection
interval timestamp
maintain invariants
add records
detecting inst
state satisfying
time clocks
predicate detection
n e
priority queues
minimal increase
immediate successor
lattice hcgs
interval timestamps
receive events
phi iff
monitor waits
local computation
conjunctive predicates
complexity analysis
c satisfies
global state g
case time complexity
predicates in distributed
algorithms for detecting
based on happened
fromentin and raynal
state satisfying phi
global state satisfying
local state s
error between clocks
detection based on
real time clocks
non empty queues
consistent global states
total partial ordering
last local state
possibly occurred before

corpus/krapavin2000-test/1035755.txt
superstabilizing
superstabilization
registers
stabilizing
faults
ring
masking
processors
protocols
nonmasking
counters
correcting
interrupts
self
holding
specifies
tolerances
statements
bilizing
local fault
legitimate state
critical section
token circulation
mutual exclusion
transient fault
superstabilization time
local faults
state oe
latent protocol
exclusion protocol
program counter
faulty state
transient faults
token passing
superstabilizing protocol
token holders
token holder
stabilization time
processor j
program counters
internal variables
computation starting
reading model
computation segment
minor tokens
superstabilizing protocols
legitimate states
token values
mutex protocol
bidirectional protocol
fault masking
local state
register r
self stabilizing
fault tolerance
r p
1w1r registers
n register
masking fault
token circulates
unidirectional ring
stabilizing protocols
global state
processor local fault
mutual exclusion protocol
perform critical section
stabilizing mutual exclusion
computation starting from
superstabilizing mutual exclusion
superstabilizing with respect
protocol is superstabilizing
number of registers
computation in which
passage predicate for
passage predicate is
arbitrary initial state

corpus/krapavin2000-test/1035756.txt
conflicting
processes
signatures
messages
exchanges
failures
participating
members
mes
protocols
participants
sages
incurs
incurring
forming
sending
honest processes
honest process
conflicting messages
message exchanges
corrupt processes
message m
conflicting message
digital signatures
signed acknowledgment
e protocol
process p
process participating
signed acknowledgments
faultless scenarios
authenticated message
valid acknowledgments
reliable multicast
quorum systems
consistency requirement
probabilistic agreement
corrupt process
multicast protocol
different messages
forming agreement
active t protocol
consistency requirement to
honest process participating
case of failures
secure reliable multicast
reliable multicast protocol

corpus/krapavin2000-test/1035757.txt
checkpoints
checkpointing
protocols
timestamps
sending
messages
breakpoints
predicates
communication
processes
computations
events
piggybacking
conjunctions
pointing
plications
local checkpoint
local checkpoints
forced checkpoints
global checkpoint
forced checkpoint
induced checkpointing
checkpoint c
useless checkpoints
distributed computations
global checkpoints
checkpointing protocols
process p
message m
based prevention
local state
checkpointing protocol
basic checkpoints
proposed protocol
last checkpoint
p j
control information
boolean array
unstable properties
distributed computation
checkpoint interval
lamport timestamp
basic checkpoint
free communication
useless checkpoint
first checkpoint
prevent useless
data structures
communication induced checkpointing
consistent global checkpoint
local checkpoint c
induced checkpointing protocols
checkpoints in distributed
based prevention of
consistent global checkpoints
number of forced
induced checkpointing protocol
checkpoint is a
checkpoint is useless
forced checkpoint when
message m sent
checkpoint forced checkpoint
checkpoints to ensure
causal z paths
checkpoints are taken
local state oe
current local state
determination of consistent
checkpointing protocol that
prevent useless checkpoints
domino free communication

corpus/krapavin2000-test/1035761.txt
protocols
synchronizing
inhibiting
constraints
processes
specifying
designing
executing
terminating
rules
combining
interacting
component protocols
composite protocol
initiate p
synchronizing constraint
multifunction protocols
unspecified receptions
inhibiting constraint
synchronizing constraints
liveness properties
inhibiting constraints
mutual exclusion
composition using
active p
exclusion protocol
sequential composition
inference rules
loop statement
composite protocols
initialization action
critical section
election protocol
flow control
interleaved execution
leader election
initial state
multifunction protocol
component functions
infer safety
basic computation
multiple functions
component protocol
process mutual exclusion
multifunction protocols which
rules to infer
mutual exclusion protocol
set of constraints
protocols can be
leader election protocol
obtained by combining
composite protocol r
interleaved execution of
synchronizing and inhibiting
infer safety and
component protocols can
protocols which perform
one of them

corpus/krapavin2000-test/1035782.txt
masking
quorums
servers
clients
constructions
failures
preceding
services
scenarios
protocols
verifying
accessing
sharing
variations
registers
propagating
quorum system
quorum systems
masking quorum
correct server
prone system
write operation
faulty servers
quorum q
dissemination quorum
read operation
replicated data
write operations
correct servers
byzantine quorum
opaque masking
update protocol
failure scenarios
quorum induces
client c
masking quorums
equal probability
faulty client
correct client
last preceding
timestamp pairs
faulty server
higher timestamp
faulty clients
arbitrarily faulty
correct clients
regular masking
secret sharing
correct process
byzantine failures
digital signatures
distributed computing
variable x
masking quorum systems
prone system b
dissemination quorum system
quorum system q
byzantine quorum systems
opaque masking quorum
value timestamp pairs
preceding write operations
quorum systems that
dissemination quorum systems
arbitrarily faulty servers

corpus/krapavin2000-test/1035802.txt
stamps
events
processes
synchronizations
agents
frontiers
gossiping
synchronizing
passing
sacrificing
involving
keeping
communications
optimizing
secondary information
primary information
secondary p
asynchronous automata
primary p
tertiary information
asynchronous automaton
secondary q
asynchronous cellular
process p
secondary events
gossip problem
r e
p p
e latest
new event
time stamping
bounded time
frontier pq
initial event
local transition
secondary event
communication sequence
primary events
synchronous communication
keep track
local states
local state
process q
primary and secondary
asynchronous cellular automata
secondary and tertiary
q r s
set of processes
bounded time stamps
automaton can be
processes which synchronize
compare and update
recognizable trace languages
keep track of
log n bits
stamps assigned to
deterministic asynchronous automaton

corpus/krapavin2000-test/1035804.txt
subring
subrings
candidates
messages
capturing
nodes
ring
leaders
rings
captures
networks
processors
principles
capture message
second phase
first phase
complete networks
complete network
captured nodes
message complexity
log n
send messages
owner message
node entering
time unit
owner messages
k subrings
larger level
messages to capture
capture nodes in
o n messages
log n bits

corpus/krapavin2000-test/1035806.txt
processes
naming
registers
keys
bits
invoking
claiming
competing
renaming
executions
adversaries
executing
selects
ns
running
crashing
protocols
writer n
shared memory
process p
n log
running time
key range
n processes
adaptive adversary
log n
naming protocol
log log
o n
shared bits
coin flip
composite register
naming problem
system execution
name space
high probability
probability ff
atomic read
competing processes
system executions
write registers
randomized wait
bit operations
shared variables
expected running
naming algorithm
free naming
invoking processes
faulty process
free solution
bit registers
coin flips
bit components
anonymous communication
private register
intercommunication primitives
atomic bits
shared registers
log log n
atomic read write
free atomic read
n bit operations
test setonce objects
owned by process
running time is
expected running time
probability at least
reader shared bits
number of processes
single writer multi
using shared memory
n bit components
initial execution segment
exactly one process
non faulty processes
key range size

corpus/krapavin2000-test/1036015.txt
multiplication
multiplications
matrices
communication
bounds
processors
misses
constants
tiplications
computers
matrix multiplication
elementary multiplications
lower bounds
3d algorithms
2d algorithms
multiplication algorithms
distributed memory
memory parallel
m words
local memory
conventional matrix
parallel computer
asymptotic notation
conventional multiplication
p processor
cache misses
multiplication algorithm
n matrices
lower bound
local memories
output combining
alexander tiskin
dror irony
concrete constants
capacity cache
n n
element c
communication network
communication lower bounds
matrix multiplication algorithms
distributed memory parallel
memory parallel computer
lower bounds for
conventional matrix multiplication
processor must send
must send or
processor distributed memory
elementary multiplications involving
send or receive
words that must
parallel matrix multiplication
n n matrices
least one processor
one processor must
matrix multiplication algorithm
theorem statement holds
must be transferred
matrix multiplication and
lower bounds on
multiplication algorithms must
element c ik
algorithms must perform
communication lower bound
communication that must
capacity cache misses
bulk synchronous parallel

corpus/krapavin2000-test/1036164.txt
covering
vertices
approximation
graphs
rounding
edges
outliers
pos
implying
ering
generalization
vertex cover
cover problem
partial covering
full coverage
covering problem
approximation algorithms
optimal solution
geometric covering
partial vertex
planar graphs
covering problems
average degree
partial set
uncovered elements
approximation scheme
approximation algorithm
partial coverage
partial cover
time approximation
feasible solution
k elements
constant average
set covering
randomized rounding
polynomial time
degree graphs
cover problems
maximum matching
problems approximation
graphs approximation
expander graphs
e c
k points
dual variables
facility location
greedy algorithm
lower bound
graph g
dynamic programming
local optimization
vertex cover problem
cover at least
partial vertex cover
partial set cover
covers at least
partial covering case
partial covering problem
constant average degree
dual feasible solution
polynomial time approximation
bounded degree graphs
vertex cover problems
chebyshev cantelli inequality
semi local optimization
partial coverage version
l outerplanar graphs
full coverage version
geometric covering problem
facility location problems
set covering problem
number of edges
time approximation scheme
linear time algorithms
decomposable graphs approximation

corpus/krapavin2000-test/1036205.txt
unsatis
satis
clauses
inequalities
nding
inconsistencies
ning
locating
ir
icting
classes
demanding
solving
heuristics
removing
verifying
mus selection
minimally unsatis
satis ability
clausal inequalities
able subformulae
exact selection
linear inequalities
cnf formula
ability problem
linear relaxation
selection problem
propositional formulae
renamable horn
polynomial time
formula f
able subformula
bu ning
able therefore
vector b
propositional formula
programming problem
propositional variables
linear programming
world contradiction
help deleting
minimal unsatis
computational experience
selection of minimally
mus selection problem
f is unsatis
integral point property
set of clauses
solving a linear
linear programming problem
subset of clauses
strict integer constraints
ip property holds
number of clauses
set of rules
rules should be
real world contradiction
world contradiction detection
real h vector
con icting rules
rules for inconsistencies

corpus/krapavin2000-test/1036463.txt
crossing
drawing
vertices
crossings
ows
edges
rounding
witnessing
embedding
graphs
bounding
partitioning
pairs
embeddings
bounds
ces
crossing number
pair crossing
log n
edge expansion
bisection width
graph g
nonplanar subgraph
crossing pairs
n vertices
maximum degree
ow problem
recursive drawing
randomized rounding
nonplanar subgraphs
small nonplanar
optimal drawing
bounded degree
feasible solution
lower bound
n log
planar graph
edge e
possible number
recursive partitioning
crossing number of
number of crossing
number of crossings
number of edges
multicommodity ow problem
number of vertices
minimum possible number
small nonplanar subgraphs
common terminal vertex
bounded by a
maximum degree bounded
bounding the crossing

corpus/krapavin2000-test/1037116.txt
routing
packets
destinations
routes
protocols
tracing
updates
ns
routers
scenarios
simulations
delays
networks
searches
maintaining
data packets
table driven
source tracing
control packets
routing protocols
routing protocol
demand routing
distance table
ood search
control overhead
hoc networks
hop query
control packet
ad hoc
hop count
route discovery
zero hop
distance vector
routing tables
vector routing
max hops
dynamic source
source routing
update routing
regular updates
permanent loops
ood searches
unreliable updates
known destinations
table driven routing
ad hoc networks
demand routing protocols
zero hop query
driven routing protocol
distance vector routing
number of hops
driven routing protocols
destination bdcast addr
routing protocol that
maintain routing information
source tracing algorithm
paths to destinations
routing in ad
routing protocols for
ad hoc network
update routing tables

corpus/krapavin2000-test/1037287.txt
documents
odds
queries
learning
scores
lengths
pages
languages
retrieving
scoring
collecting
outperforms
probabilities
selecting
experiments
engines
getting
term selection
slovenian documents
query generation
total documents
target language
probabilistic term
query length
target documents
language filter
total queries
probabilistic odds
learning methods
selection method
initial documents
exclusion terms
language documents
generation method
selection methods
relevant documents
query lengths
generation methods
query parameters
initial document
tagalog documents
web pages
initial conditions
inclusion terms
search engine
minority language
minority languages
memory learning
word queries
query terms
d m
positive documents
different term
exclusion term
longer queries
natural languages
single word
web search
new documents
positive document
find documents
ratio query
additive update
slovenian words
collecting documents
croatian documents
probabilistic term frequency
found total documents
total documents retrieved
found total queries
term selection method
term selection methods
query generation method
query generation methods
target language documents
number of documents
different initial conditions
number of queries
initial conditions using
retrieved query length
frequency and probabilistic
issued query length
different learning methods
total documents examined
different term selection
methods and lengths
learning query parameters
different initial documents
ghani and jones
single word queries
tagalog documents and
according to their
frequency probabilistic term
generation methods and

corpus/krapavin2000-test/1038132.txt
recommenders
documents
recommendations
predictions
recommendation
clustering
clusters
recommending
requests
filtering
users
browsing
learning
sequences
searching
fitting
interactions
features
assessing
lawren
menders
maximum entropy
based recommenders
document requests
entropy model
entropy models
multinomial models
d prev
collaborative filtering
entropy approach
current document
active bibliography
user navigation
markov model
next d
order markov
individual similarity
markov models
training data
researchindex data
ordered sequences
based predictors
test data
next document
em algorithm
probabilistic models
related clusters
markov terms
term interactions
greedy clustering
different clusters
model p
data sequences
steve lawrence
related documents
document details
multinomial mixture
user accesses
based recommendation
researchindex recommenders
maximum entropy model
maximum entropy models
maximum entropy approach
first order markov
mixture of multinomials
based recommenders currently
markov and multinomial
order markov terms
interactions and dependencies
long term interactions
collection of ordered
term interactions and
recommenders currently available
ordered sequences of
c l giles
greedy clustering algorithm
low order statistics
computer science papers
user navigation patterns
volume web servers
entropy approach to
entropy maxent approach
generating online recommendations
conditional maximum entropy
typical screen shot
regular markov model
probabilistic model p
com lawrence98searching html

corpus/krapavin2000-test/1038162.txt
records
mining
reconstructing
distributions
randomizing
concerns
databases
users
preserving
swapping
statistics
queries
original distribution
statistical databases
data mining
training data
original data
privacy preserving
randomized data
original byclass
tree classifiers
individual records
reconstruction procedure
privacy protection
reconstruct distributions
true value
value x
statistical database
certain fields
privacy concerns
x lies
successive estimates
protection measures
global accuracy
original distributions
preserving data
gaussian provides
preserving privacy
partial disclosure
successive queries
tree classifier
perturbed training data
accuracy original byclass
reconstructing the original
decision tree classifiers
level original accuracy
privacy preserving data
original accuracy privacy
privacy preserving methods
decision tree using
decision tree classification
byclass global accuracy
preserving data mining
value x lies

corpus/krapavin2000-test/1038204.txt
views
indexes
cubes
queries
graphs
costs
heuristics
minimizes
answering
selecting
maintaining
sions
view graph
greedy algorithm
view graphs
selection problem
unit space
absolute benefit
view v
benefit function
monotonicity property
update costs
graph g
without updates
optimal benefit
achievable using
interchange algorithm
materialized views
solution m
whose benefit
total query
data cubes
selected views
total space
maximum benefit
outgoing edges
query response
view maintenance
algorithm produces
incremental benefits
materialized view
total maintenance
time heuristics
query q
m assuming
arbitrary sets
set of views
view graph g
level greedy algorithm
greedy interchange algorithm
benefit achievable using
optimal benefit achievable
selection of views
total space occupied
benefit function b
greedy algorithm produces
function b satisfies
total query response
query response time
set of queries

corpus/krapavin2000-test/1039213.txt
games
learning
agents
monitoring
actions
settings
people
interactions
dynamics
appealing
setting
nding
stochastic games
repeated games
imperfect monitoring
policy prole
average reward
perfect monitoring
nash equilibrium
learning equilibrium
joint action
reinforcement learning
learning algorithms
cient learning
probabilistic maximin
learning algorithm
repeated game
game theory
normative approach
return mixing
possible histories
common interest
agent reinforcement
machine learning
desired value
monitoring case
behave according
bayesian approach
polynomial number
cient learning equilibrium
learning in games
return mixing time
normative approach to
perfect monitoring setting
approach to learning
probabilistic maximin value
agent reinforcement learning
repeated games with
games with perfect
always exist in
sum stochastic games
repeated game m
multi agent reinforcement
number of steps
multi agent interaction
imperfect monitoring settings

corpus/krapavin2000-test/1039285.txt
stabilizing
self
derivations
string
configurations
rewriting
ring
ds
rules
terminating
proving
substring
preserving
schemes
languages
transitions
adapts
appearing
sequences
ending
replacing
decreases
perspectives
focusing
orities
top chain
ground word
minimal reduction
top rule
rewrite systems
top chains
stabilizing systems
regular languages
chain generation
infinite derivation
beauquier debas
proving convergence
minimal reductions
substitution oe
rewrite system
middle rules
legitimate configurations
reduction chains
rewriting systems
norm function
r using
br preserving
ground substitution
reduction chain
middle rule
variable words
top rules
generalization process
reduced form
order variables
generation procedure
w r
finite number
non increasing
regular sets
graph rewriting
stabilizing iff
derivation via s
string rewrite systems
r using oe
cyclic top chain
rewrite system s
active ground derivation
system is self
measure that strictly
ground cyclic derivation
first order rewriting

corpus/krapavin2000-test/1039329.txt
pir
ldcs
codes
queries
decoding
qubits
codewords
positions
bounds
extractors
correcting
schemes
string
recovery probability
pir scheme
decodable codes
private information
bit answers
access code
lower bounds
decodable code
random access
quantum random
best known
lower bound
query ldcs
exponential lower
recover x
quantum query
communication complexity
information retrieval
bit queries
classical queries
2 classical
server pirs
query ldc
query lqdc
q queries
classical pir
quantum queries
log n
basis states
quantum computing
success probability
y m
bit strings
quantum argument
query lqdcs
hadamard code
adaptive queries
queried bits
classical proof
known ldcs
et al
o n
quantum state
known upper
bit string
upper bounds
pure states
larger answers
bit answer
pure state
polynomial lower
private information retrieval
random access code
locally decodable codes
server pir scheme
pir scheme with
quantum random access
lower bounds for
exponential lower bound
locally decodable code
lower bound for
query locally decodable
bit answers and
goldreich et al
best known classical
server pir schemes
pir schemes with
bound for 2
number of queries
best known ldcs
known upper bounds
2 classical queries
lower bound on
n bit strings
best known upper
codes and private
extend our lower
recently improved the
communication complexity o
recovered with probability
classical and quantum
known classical 2
quantum decodable code
via a quantum
polynomial lower bounds
good q tuple
bit queries and

corpus/krapavin2000-test/1039333.txt
metrics
embeddings
approximating
embedding
trees
spaces
spanning
labeling
graphs
improves
routing
log n
tree metrics
approximation algorithms
metrical task
log log
approximation algorithm
metric spaces
n log
metric labeling
group steiner
steiner tree
spanning trees
d v
server problem
expected stretch
task system
bulk network
network design
outerplanar graphs
competitive ratio
communication spanning
factor approximation
algorithmic applications
probabilistic approximation
particular level
steiner points
arbitrary metrics
time approximation
improved approximation
flow min
constant factor
online tracking
distortion embedding
distributed queueing
probabilistic embedding
cost spanning
k clustering
log n log
n log log
log log n
metrical task system
metrical task systems
group steiner tree
bulk network design
hierarchical cut decomposition
communication spanning trees
metric labeling problem
hierarchically well separated
polynomial time approximation
k outerplanar graphs
metrics such that
n approximation algorithms
distributed k server
deterministic polylog approximation
minimum communication spanning

corpus/krapavin2000-test/1039411.txt
processors
balancing
grids
ordering
cons
performances
proces
cessors
tracing
passing
heuris
links
tributions
ending
distributions
sors
root processor
rational solution
load balancing
execution time
scatter operation
scatter operations
ordering policy
processor ordering
execution duration
processor receives
root process
static load
network links
heterogeneous processors
ray paths
parallel computer
p processors
d p
source code
message passing
ray tracing
mpi_scatterv calls
original application
seismic events
clever distributions
seismic waves
seismic tomography
grid characteristics
simultaneous endings
replacing mpi_scatter
code rewriting
optimal distribution
destination processors
optimal rational solution
static load balancing
processor ordering policy
root processor sends
presented on figure
total time comm
linear algebra algorithms
set of processors
parallel computer networks
heterogeneous processor grids
initial velocity model
1003005007009001000030000500007000090000110000 time data

corpus/krapavin2000-test/1039491.txt
respecting
flooding
spreading
resources
protocols
nodes
completing
paths
underlying
filling
calling
bounds
time respecting
closest resource
resource location
temporal network
strictly time
gossip algorithm
node x
high probability
gossip algorithms
propagation time
polynomial gossip
uniform density
network hr
time interval
approximation guarantee
new information
induction hypothesis
neighbor flooding
k containing
underlying gossip
spatial gossip
point communication
higher dimensions
e e
time step
network h
location problem
message m
simple protocol
time respecting path
probability at least
time respecting x
temporal network hr
inverse polynomial gossip
polynomial gossip algorithms
resource location problem
k containing x
temporal network h
temporal network g

corpus/krapavin2000-test/1039494.txt
sampling
approximation
approximations
entries
matrices
proximations
scaling
multiplying
approximating
satisfying
rank approximation
singular vectors
alan frieze
rank approximations
k singular
regularity lemma
frobenius norm
carlo algorithms
sampling assumptions
n matrix
et al
distribution satisfying
value decomposition
singular value
singular values
f applying
probability distribution
k approximation
matrix m
p columns
natural probability
error parameter
orthonormal set
regular partitions
sparsity structure
corresponding rows
n terms
low rank approximation
alan frieze et
low rank approximations
good low rank
probability at least
k singular vectors
rank approximation to
distribution satisfying assumption
szemer edi s
singular value decomposition
top k singular
rank k approximation
set of vectors
probability distribution satisfying
f f using
matrix of s
algorithm whose running
natural probability distribution

corpus/krapavin2000-test/1039903.txt
partitions
letting
os
sizes
conjectures
oscillates
parts
integers
part size
multiplicity m
random composition
distinct part
ln n
different part
integer partitions
unconditional probability
bernoulli trials
random partition
n n
probability measure
random compositions
n p
random variables
fourier coefficients
random partitions
geometric random
positive integers
chosen part size
different part sizes
part sizes in
independent bernoulli trials
multiplicity of parts

corpus/krapavin2000-test/1039913.txt
terminals
rounding
approximation
graphs
labeling
edges
nodes
approximating
integrality ratio
approximation algorithm
planar graphs
metric relaxation
extension problem
triangle inequality
approximation algorithms
programming relaxation
feasible solution
polynomial time
metric labeling
linear programming
graph e
edge lengths
terminal closest
nonnegative edge
r r
whose removal
time algorithm
positive integer
region growing
optimal solution
natural linear
linear programming relaxation
multiway cut problem
polynomial time o
weighted planar graphs
metric on t
polynomial time algorithm

corpus/krapavin2000-test/1039958.txt
homotopies
polynomials
equations
solutions
tracking
paths
intersecting
embedding
charles
defining
algebraic set
irreducible decomposition
irreducible components
irreducible component
isolated solutions
c n
witness points
polynomial systems
system f
solution components
diagonal homotopy
polynomial system
polynomial equations
numerical continuation
homotopy continuation
witness point
algebraic subset
linear subspace
r f
abstract embedding
dimensional components
algebraic sets
generic points
general linear
total degree
membership tests
numerical irreducible decomposition
algebraic set x
system of polynomials
isolated solutions of
dimensional algebraic set
polynomial system f
abstract embedding theorem
numerical algebraic geometry
irreducible component z
intersection of two
irreducible of dimension
whose irreducible components

corpus/krapavin2000-test/1040296.txt
ls
marshalling
forms
distinctions
integers
expressions
loading
languages
extensions
type analysis
order coercions
directed operations
new types
higher order
hoc polymorphism
order coercion
new label
defined types
generative types
l language
new labels
core l
type constructor
directed operation
directed programming
new names
type argument
l e
polykinded types
type information
order analysis
generic haskell
normal form
type variables
intensional type
type isomorphisms
type names
l label
polymorphic equality
primitive coercions
polymorphic operations
type constants
time type
polytypic operations
core language
e l
new type
structural analysis
type constructors
type classes
analysis operator
type generativity
set polymorphism
order type
nominal analysis
l l
e e
type check
source language
type arguments
polymorphic function
set of labels
type directed programming
type directed operation
time type analysis
intensional type analysis
first order coercion
label set polymorphism
structure of types
first class map
rightmost matching branch
first order coercions

corpus/krapavin2000-test/1040306.txt
declarations
dependencies
typing
traits
overloading
optimising
libraries
classes
arrays
rules
interfaces
associated type
associated types
type classes
associated data
functional dependencies
instance declarations
data types
generic programming
evidence translation
indexed types
instance declaration
type class
class parameters
array e
system f
type system
type parameters
class declaration
type declarations
type parameter
dictionary environment
element type
type variables
type constructor
generic haskell
target language
indexed data
data constructor
class arrayelem
e arr
optimising libraries
graph library
template library
abstract interfaces
type declaration
array example
new type
standard type
haskell type
et al
dictionary function
hoc overloading
representation type
target declarations
refinement kinds
associated data types
associated data type
garcia et al
data type declarations
top level data
intensional type analysis
data type declaration
generic finite maps
parametric type classes
haskell type classes
data types are
e array e
associated types are
type checking rules
data types to
applications of associated
data types by
typed target language
ad hoc overloading

corpus/krapavin2000-test/606523.txt
covering
automorphisms
coverings
actions
generators
lifting
digraphs
graphs
morphisms
projections
homomorphisms
arising
maps
presentations
acting
vertices
surfaces
preserving
groups
projecting
generating
epimorphisms
semiedges
mapping
transformations
covering projection
equivariant group
action graph
action graphs
g g
voltage space
action automorphisms
cayley graph
covering projections
regular covering
closed walks
regular map
graph act
structure preserving
trivial voltage
schreier coset
automorphism group
set z
ng g
covering graph
base graph
conjugacy class
group actions
action digraphs
covering transformations
group presentations
right multiplication
equivariant covering
transitive actions
action digraph
cayley graphs
lifted group
graph x
regular homomorphism
invariant covering
conjugacy classes
action di
normal stabilizer
cayley voltage
derived covering
g g s
z g s
cay g s
covering of actions
covering projection of
act g s
action graph act
transitive and faithful
cayley graph cay
z g lifts
group of automorphisms
cayley voltage space
eq g projects
along a regular
theory of maps
group of covering
regular covering projection
action graphs and
g h s
lifting and projecting
maps on surfaces

corpus/krapavin2000-test/606529.txt
graphs
subgraphs
letters
ding
ordering
letter graphs
letter graph
induced subgraphs
induced subgraph
threshold graphs
subgraph relation
interval graphs
vertex graphs
n vertices
c n
quasi ordering
l g
minimal forbidden
different letters
x g
nonisomorphic n
vertex graph
polynomial time
intersection graph
l n
word consisting
topological minor
contiguous subword
fewer vertices
g ding
cochromatic number
easier reference
whose lettericity
alphabet permitting
whose letter
threshold graph
k letter graphs
unbounded interval graphs
n vertex graphs
ordered by the
induced subgraph relation
forbidden induced subgraphs
pairs of letters
minimal forbidden induced
letter graphs is
letter graphs and
graphs is well
letter graphs can
recognized in polynomial
lettericity of cycles
nonisomorphic n vertex

corpus/krapavin2000-test/606695.txt
switching
stabilizing
es
integrals
designing
transforming
yields
dieren
analyzing
solutions
substituting
elds
homogeneous systems
switching controller
solution corresponding
generalized rst
stability analysis
lyapunov function
cient stability
closed trajectory
polar coordinates
linear systems
switched systems
asymptotic stability
stability condition
f g
homogeneous functions
absolute stability
stabilizing switching
lyapunov theorem
case switching
explicit lyapunov
stability problem
order systems
rst integrals
stability conditions
equilibrium point
common lyapunov
unstable systems
curve encircling
order switched homogeneous
switched homogeneous systems
switched linear systems
necessary and su
cient stability condition
generalized rst integral
stabilizing switching controller
sin sin cos
generalized rst integrals
absolute stability problem
worst case switching
lyapunov function that
r sin cos
order homogeneous systems
explicit lyapunov function
switching controller for
lyapunov function v
case switching law
positively homogeneous of

corpus/krapavin2000-test/606706.txt
masks
exponents
interpolating
wavelets
satises
shifts
rs
spaces
generalizing
renable function
dilation matrix
smoothness exponent
symmetry group
sum rules
sobolev smoothness
renable functions
interpolatory mask
symmetric multivariate
smoothness exponents
matrix m
lattice mz
full axes
spectral radius
interpolatory masks
supported mask
quincunx dilation
order k
d r
multivariate re
numerical computation
l p
refinable function
computing smoothness
transition operator
general dilation
hexagonal symmetry
dilation m
dilation matrices
renement equation
interpolatory subdivision
matrix size
g r
quincunx lattice
isotropic dilation
function vectors
nonnegative symbol
dilation matrix m
mask a and
multivariate renable function
symmetric multivariate renable
sobolev smoothness exponent
lattice mz d
interpolating renable function
full axes symmetry
axes symmetry group
nitely supported mask
sobolev smoothness exponents
exponents of symmetric
joint spectral radius
symmetric renable functions
symmetric renable function
general dilation matrix
quincunx dilation matrices
hexagonal symmetry group

corpus/krapavin2000-test/606717.txt
smoothers
coarsening
smoother
smoothing
inverses
preconditioners
grids
promising
thers
approximate inverse
sparse approximate
approximate inverses
algebraic multigrid
sparsity pattern
multigrid iteration
coarsening strategy
damped jacobi
spai smoothers
convergence rates
inverse preconditioners
geometric multigrid
seidel smoothing
frobenius norm
inverse m
algebraic coarsening
multigrid methods
sparsity patterns
1 smoother
grid levels
improved robustness
smoothing steps
multigrid method
unstructured grids
classical smoothers
weak dependencies
spai smoothing
semi coarsening
interpolation operators
local adaptivity
inverse smoothers
eective sparsity
f splitting
ilu smoothing
positive denite
grid method
priori sparsity
inverse preconditioner
convergence rate
least squares
inherent parallelism
linear systems
dierential equations
algorithm proceeds
linear system
diagonal smoothers
inverse smoother
sparse approximate inverse
sparse approximate inverses
approximate inverse preconditioners
gauss seidel smoothing
0 and spai
approximate inverse m
table amg convergence
algebraic coarsening strategy
coarse grid correction
multigrid v cycle
eective sparsity pattern
symmetric gauss seidel
high frequency behavior
approximate inverse smoothers
c f splitting
approximate inverse preconditioner
partial dierential equations
xed sparsity patterns
ilu smoothing matrix
strong dependency dependency
parallel algebraic multigrid
inverse preconditioners robustness
amg convergence results
approximate sparsity patterns
original spai algorithm

corpus/krapavin2000-test/606722.txt
preconditioner
preconditioning
preconditioners
inverses
matrices
chains
partitioning
entries
queueing
tioning
ir
leading
ods
schur complement
approximate inverse
nonsingular m
singular m
markov chains
irreducible m
inverse factors
markov chain
graph partitioning
krylov subspace
generalized inverse
chain problems
inverse preconditioners
diagonal blocks
null space
generator matrix
generalized inverses
biorthogonalization process
subspace methods
approximate inverses
inverse preconditioner
linear systems
parallel preconditioner
upper triangular
preconditioned krylov
diagonal block
diagonal entry
subspace method
ilu methods
ergodic markov
incomplete factorization
preconditioner construction
singular case
inverse techniques
finite markov
large markov
factorized form
parallel implementation
markov models
numerical experiments
queueing network
coefficient matrix
diagonal matrix
large state
nonsingular m matrix
sparse approximate inverse
singular m matrix
singular irreducible m
irreducible m matrix
markov chain problems
approximate inverse preconditioners
krylov subspace methods
leading principal minors
exact schur complement
approximate inverse preconditioner
preconditioned krylov subspace
approximate inverse factors
nonsymmetric linear systems
sparse approximate inverses
large markov models
finite markov chains
singular m matrices
krylov subspace method
dimensional null space
irreducible singular m
nonsingular m matrices
generalized gram schmidt
factorized sparse approximate
approximate inverse techniques
table matrix p
nonsingular approximate schur
generalized inverses of
formed and stored

corpus/krapavin2000-test/606859.txt
differentiability
complementarity
theorems
formulating
satisfying
inequalities
minimizing
mathematics
lems
ncp f
ncp function
r n
fischer burmeister
nonlinear complementarity
merit function
burmeister function
differentiable function
differential given
p function
complementarity problems
differentiable functions
x solves
complementarity problem
stationary point
necessary optimality
diagonal matrices
function f
stationary points
ncp functions
optimality condition
nonsmooth functions
piecewise smooth
local minimum
second application
nonzero vector
first application
lipschitzian function
differential of f
differential given by
h differential given
h differentiable function
differentiable function f
nonlinear complementarity problem
f x consists
differential t x
necessary optimality condition
nonlinear complementarity problems
two applications of
diagonal matrices satisfying
local optimal solution
carried out for

corpus/krapavin2000-test/606884.txt
queueing
dynamics
calculations
inequalities
draining
strategies
formulas
skorokhod problem
load q
skorokhod dynamics
non idling
minimum performance
nonnegative orthant
performance criterion
server re
single server
robust control
optimal service
fluid models
state trajectory
optimal control
queueing systems
control functions
new arrivals
point conditions
control function
scalar multiple
optimal policy
boundary verifications
reflection matrix
individual hamiltonian
outer boundary
queueing applications
lipschitz continuity
entrant line
f l
hamiltonian system
multiple server
nonnegative entries
numerous examples
minimum performance criterion
invariant control vector
saddle point conditions
state trajectory x
single server re
invariant control vectors

corpus/krapavin2000-test/606888.txt
spaces
equations
mapping
tests
optimality system
generalized equation
newton method
lagrangian sqp
generalized newton
control problems
y n
optimal control
second order
augmented sqp
strong regularity
y p
optimality conditions
banach spaces
order optimality
parabolic equations
unique solution
convergence analysis
c c
boundary condition
adjoint state
boundary control
adjoint equation
generalized equations
lagrange multiplier
numerical tests
rst order
state equation
sucient optimality
local solution
current iterate
control constraints
control problem
sucient condition
hilbert spaces
optimality condition
parabolic control
multiplier p
sqp methods
nonlinear optimal
continuous linear
order derivatives
f u
dierential equations
y v
augmented lagrangian sqp
generalized newton method
lagrangian sqp method
augmented sqp method
second order sucient
optimal control problems
order sucient condition
boundary control problems
order sucient optimality
second order derivatives
partial dierential equations
sucient optimality condition
continuous linear operator
nonlinear optimal control
lagrangian sqp methods

corpus/krapavin2000-test/606895.txt
backtracking
subproblems
projections
leaving
functional evaluations
trust region
line search
spectral projected
projected gradient
trial point
functional value
global convergence
current face
constrained optimization
unconstrained minimization
incremental quotient
search direction
functional values
free variables
constrained minimization
projected gradients
angle condition
constrained algorithm
quadratic subproblems
cylinder packing
descent direction
many constraints
conjugate gradients
objective function
feasible set
spectral projected gradient
direction d k
box constrained optimization
trust region algorithms
incremental quotient version
box constrained algorithm
spectral projected gradients
unconstrained minimization problem
truncated newton approach
trust region methods

corpus/krapavin2000-test/606904.txt
smoothing
centering
behaviour
updating
equations
optimality conditions
type methods
predictor step
smoothing parameter
smoothing method
linear programs
global convergence
central path
point methods
convergence properties
centering parameter
path conditions
line search
corrector smoothing
global linear
minimum function
numerical results
smoothing methods
r n
linear systems
sequence f
linear system
exible choice
subsequence converging
smoothing type methods
interior point methods
central path conditions
class of smoothing
nonlinear complementarity problems
smoothing method for
linear complementarity problems
predictor corrector smoothing
constrained variational inequalities
mangasarian smoothing functions
corrector smoothing method
global and local
updating of the
quadratic noninterior continuation
global convergence properties
local superlinear continuation

corpus/krapavin2000-test/606910.txt
string
streams
formulas
cuts
axioms
strings
proofs
substring
lying
contractions
paths
occurrences
sequents
branching
combinatorics
rewriting
rules
antecedents
cycles
graphs
describing
ending
logical flow
flow graph
cut formulas
input vertex
output vertex
compact string
focal pairs
branching point
flow graphs
stream passes
free proof
arithmetical value
explicit string
substream passing
formal proofs
logical rules
topological structure
last rule
weak formulas
directed paths
branching points
negative occurrence
logical connectives
atomic formulas
distinguished formulas
logical flow graph
elimination of cuts
logical flow graphs
described by the
transformation of streams
cut free proofs
proof theory and

corpus/krapavin2000-test/606912.txt
disjunctions
atoms
upgrading
databases
deciding
characterizations
languages
classes
semantics
reasoning
tools
querying
data disjunction
fp np
data disjunctions
unique data
expression complexity
combined complexity
theta p
propositional complexity
data complexity
fpspace np
pspace np
fl np
disjunctive ground
r c
relation symbol
minimal models
minimal model
polynomial time
parallel queries
world reasoning
input negation
hb db
deductive databases
ground facts
snf witnesses
relational language
complexity classes
disjunctive datalog
clique size
successor relation
world assumption
metric reductions
function problems
logic programming
decision problems
query languages
domain elements
generalized quantifiers
complexity class
finite structures
hardness results
disjunctive logic
function classes
complexity results
model m
metric reduction
clause r
function computations
logical characterizations
descriptive complexity
deductive database
free variables
unique data disjunction
data disjunction on
expression and combined
combined complexity of
relation symbol r
data disjunctions in
parallel queries to
symbol r s
disjunctive deductive databases
disjunctive ground facts
disjunctive logic programming
disjunctive deductive database
data and propositional
disjunctive ground fact

corpus/krapavin2000-test/606913.txt
logics
unraveling
backwards
modalities
fragments
trees
saying
operators
relations
games
branching
ables
structures
xed point
guarded xed
guarded fragment
tree width
point logics
model property
guarded logics
order logic
tree model
modal logic
point logic
f v
guarded bisimulations
xed points
satisability problem
guarded tuples
every satisable
modal logics
greatest xed
van benthem
countable trees
propositional modal
kripke structure
satisable sentence
guarded fixed
backwards modalities
guarded fragments
every formula
countable model
guard formulae
k unraveling
tree representations
ary relation
free variables
modal operators
order theory
induction hypothesis
guarded xed point
tree model property
xed point logics
xed point logic
least and greatest
xed point formulae
clique guarded bisimulations
propositional modal logic
guarded fixed point
greatest xed points
clique guarded fragment
calculus with backwards
clique guarded quantication
xed point formula
guarded fragment of
loosely guarded fragment
second order theory
greatest xed point

corpus/krapavin2000-test/606915.txt
turing
machines
simulates
languages
accepting
string
classes
subsets
proofs
propositional proof
proof system
clocked turing
polynomial time
proof systems
turing machines
complete languages
turing machine
propositional tautology
easy subset
easy subsets
nondeterministic turing
promise classes
machine m
optimal proof
complete language
enumerable list
recursive np
deterministic turing
tautology ff
every theory
polynomial p
nondeterministic algorithm
computable function
covering languages
j accepting
propositional tautologies
relative efficiency
main results
boolean formulas
propositional proof system
polynomial time clocked
optimal propositional proof
time clocked turing
clocked turing machines
nondeterministic polynomial time
optimal proof systems
propositional proof systems
recursively enumerable list
time clocked transducer
recursive np presentation
nondeterministic turing machine
proof systems for
theory t there
polynomial time computable
proof system and
clocked turing machine
nondeterministic turing machines
deterministic turing machine
np and up
taut which is
every theory t
time computable function
deterministic polynomial time
optimal nondeterministic algorithm
optimal deterministic algorithm

corpus/krapavin2000-test/607032.txt
editing
editors
grammars
diagrams
hypergraphs
drawing
prototyping
transformation
languages
creating
modes
ers
specifying
transformations
graphics
meaning
hypergraph model
directed editing
hand editing
reduced hypergraph
editing operations
diagram components
diagram language
diagram editors
attribute evaluation
hypergraph grammar
editing operation
graph grammars
diagen editors
diagram languages
hypergraph transformation
diagram analysis
diagram editor
graph transformation
hypergraph models
editor developer
specific diagram
application conditions
syntactic structure
visited nodes
diagen editor
constraint multiset
multiset grammars
hypergraph parser
editing mode
layout mechanism
internal model
uml class
h c
conn edges
vertical arrow
class diagrams
hypergraph transformations
internal diagram
prototyping tool
diagram editing
editing modes
transformation rules
semantic representation
rapid prototyping
visual representation
diagen uses
drawing tools
creating diagram
edited diagrams
shaped conditions
support syntax
visual language
correct subdiagrams
correct diagram
free hand editing
reduced hypergraph model
directed editing operations
specific diagram language
context free hypergraph
directed editing is
constraint multiset grammars
reduced hypergraph models
free hypergraph grammars
directed editing operation
hypergraph transformation rules
uml class diagrams
rapid prototyping tool
internal diagram model
representations of diagrams
creating diagram editors
based on hypergraph
hand editing mode
automatic layout mechanism
syntax directed translation
editors and does

corpus/krapavin2000-test/607196.txt
frames
disks
scattering
signatures
channels
scheduling
broadcasting
comparisons
filtering
retrieving
clustering
prefetching
monitoring
strengths
ds
broadcasts
broadcast cycle
access time
broadcast disks
clustered broadcast
flat broadcast
index methods
integrated signature
indexing efficiency
scattering factor
meta segment
broadcast channels
desired frames
data organization
signature methods
broadcast scheduling
initial probe
clustered data
indexing method
meta segments
broadcast channel
cost models
indexing techniques
minor cycle
indexing methods
hybrid index
desired data
hybrid indexing
conservative indexing
client tunes
tree techniques
attribute value
distributed indexing
wireless broadcast
average access
minor cycles
data broadcasting
data dissemination
broadcast schedule
attribute indexing
index trees
mobile computer
signature techniques
level signature
index nodes
signature technique
control index
access patterns
clustered broadcast cycle
access time and
index tree method
sparse index tree
access time overhead
index tree and
number of frames
clustered and non
clustering and scheduling
power conservative indexing
hybrid indexing method
index tree techniques
initial probe time
data frames with
average false drop
data access patterns
saved per unit
broadcast cycle i

corpus/krapavin2000-test/607200.txt
outliers
processors
mining
objects
outperforms
workstations
accessing
dimensions
items
clustering
studies
first array
second array
o time
based outliers
internode communication
local disk
execution time
reading order
large database
nl algorithm
parallel mining
dataset size
second arrays
computation time
dataset passes
local memory
buffer size
performance studies
unmarked objects
algorithm penl
distance calculations
original nl
major cost
communication time
total number
communication network
parallel algorithm
data mining
theoretical analysis
penl using
number of objects
number of processors
outliers in large
number of calculations
quadratic to the
mining of outliers
hung and cheung
number of pages
number of blocks
minptsub nearest neighborhoods
report unmarked objects
temporary minptsub nearest

corpus/krapavin2000-test/607278.txt
designs
automorphisms
representatives
admitting
isomorphisms
tomorphisms
intersection numbers
block intersection
intersection types
automorphism group
global intersection
intersection type
global intersections
intersection number
design theory
prescribed automorphism
orbit representatives
isomorphism problems
orderly generation
intersection equations
ordinary intersection
block intersection types
group of automorphisms
global intersection numbers
block intersection type
block intersection numbers
essential block intersection
full symmetric group
prescribed automorphism group
8 designs with
automorphism group are
arbitrary m subset
following table shows
kaltofen volker weispfenning
generalized mendelsohn systems
ordinary intersection numbers

corpus/krapavin2000-test/607292.txt
polynomials
codes
invariants
designs
enumerators
covering
packing
series
cosets
hamming
groups
forms
generating
belonging
jacobi polynomials
weight enumerator
molien series
weight enumerators
covering designs
type ii
dual codes
simultaneous invariant
ii code
generating series
extremal type
distribution matrix
polarization operator
joint weight
jacobi forms
weight distribution
finite groups
combinatorial interpretation
reynolds operator
mattson theorem
invariant theory
binary codes
binary code
aronhold polarization
covering design
secondary invariants
macwilliams relation
simultaneous invariants
divisible designs
extremal codes
covering radius
binary linear
dual code
type ii code
bivariate molien series
design with parameters
extremal type ii
joint weight enumerator
simple combinatorial interpretation
coset weight distribution
new rank parameters
aronhold polarization operator
invariants of finite

corpus/krapavin2000-test/607301.txt
codes
enumerators
designs
polynomials
self
lattices
mials
strengthening
series
merators
coding
covering
dual codes
harmonic weight
code c
weight enumerators
extremal even
dual code
xed weight
c f
weight enumerator
hahn polynomials
w c
relative invariants
harmonic functions
binary code
theta series
harmonic function
intersection numbers
mattson theorem
binary linear
jacobi polynomials
fourier transform
spherical designs
unimodular lattices
spherical codes
harmonic spaces
usual weight
even formally self
harmonic weight enumerators
extremal even formally
j l s
overlap and covering
harmonic function f
harmonic weight enumerator
usual weight enumerator
invariant linear forms
certain harmonic functions

corpus/krapavin2000-test/607562.txt
fevbdds
evbdds
diagrams
obdds
ans
weights
normalizing
integers
edges
associating
graphs
fdds
representations
multiplying
denoting
dds
decision diagrams
function graphs
binary decision
valued binary
boolean functions
complement edges
affine property
terminal node
rational rule
edge weights
weight normalizing
factored edge
nonterminal vertex
integer linear
logic verification
scalar multiplication
arithmetic functions
multiplicative weight
using fevbdds
additive property
function graph
boolean function
memory consumption
arithmetic operations
boolean operations
c f
linear programming
fevbdd representing
affine transformation
e f
matrix representation
f e
computational complexity
multiplicative weights
terminal case
arithmetic function
matrix package
certain operations
evbdd representation
multiplicative edge
evbdd representations
row swapping
function decomposition
reconverging branches
kolmogorov equations
generated using
jf j
moment diagrams
binary moment
valued binary decision
binary decision diagrams
integer linear programming
evbdds and fevbdds
additive and a
associating both an
nonterminal vertex f
matrix representation and
based on evbdds
weight normalizing rules
based on fevbdds
weight normalizing rule
multiplicative edge weights
directly represent the
chapman kolmogorov equations
binary moment diagrams
integer valued functions
operations such as

corpus/krapavin2000-test/607573.txt
markings
rs
marking
transitions
nets
pns
places
invariants
firing
subnets
spns
matrices
gspns
symmetries
composing
interleavings
hashing
representations
reachability set
reachability graph
reachability analysis
rg generation
kronecker representation
minimal regions
reachable markings
petri nets
local transitions
macro marking
macro markings
generate rs
aggregated places
place p
petri net
hn marking
successor marking
kronecker operations
successor markings
invariant computation
state space
incidence matrix
level nets
low level
initial marking
linear combinations
analysis approaches
compact representation
aggregated marking
hierarchical reachability
compositional analysis
behavior preserving
high level
net n
possible transitions
space generation
complete reachability
g rs
synchronized transitions
characterize rs
extended nets
complete net
h pn s
number of markings
marking of the
high level net
generated reachability set
reachability set and
reachability set rs
covered by p
low level nets
size of rs
subset of transitions
behavior preserving reduction
hierarchical reachability graph
reachability graph generation
markings and possible
reachable markings and
methods for efficient
stochastic petri nets
set of transitions
approach can be

corpus/krapavin2000-test/607620.txt
documents
learning
kernels
categorization
joachims
datasets
products
dimensions
classification
vectors
spaces
machines
features
incorporating
mapping
improvements
feature space
kernel matrix
semantic kernel
support vector
relevant documents
document matrix
vector space
space model
inner products
information retrieval
eigenvalue decomposition
text categorization
vector machines
text data
semantic indexing
defined feature
kernel methods
statistical learning
kernel function
semantic information
semantic network
feature spaces
feature vector
ridge regression
inner product
gaussian construction
polynomial kernel
occurrence information
semantic kernels
soft margin
different terms
machine learning
new space
original feature
gaussian kernel
preliminary experiments
singular value
vector machine
vector space model
support vector machines
latent semantic indexing
reduced feature space
defined feature space
basic vector space
kernel defined feature
generalised gsk algorithm
number of dimensions
low rank approximation
semantic indexing lsi
original feature space
statistical learning theory
support vector machine
term term correlations
latent semantic kernel

corpus/krapavin2000-test/607623.txt
documents
pages
categorization
bayes
learning
classification
realizations
sequences
journals
merging
overfitting
networks
classifying
probabilities
inhypertextsbyextendingthearchitecturedescribedinthispaperisstillanopenproblem
stepisperformedinthestandardwayfortransitionparameters
thegeneralcaseofdirectedgraphsisdifficultbecauseofthepresenceofcycles
american missionary
naive bayes
hidden markov
text categorization
markov models
bayesian networks
isolated page
labeled documents
page classification
page documents
unlabeled documents
sequential classifier
emission parameters
contextual information
page classifier
state realizations
page categories
bayesian network
training sequences
classification using
page labels
model induction
et al
training documents
transition graph
focused crawling
classification accuracy
markov model
isolated pages
whose emissions
conditional word
grammar extraction
transition parameters
model merging
sequential classification
multiple states
sequential organization
digital libraries
hidden markov models
naive bayes classifier
frasconi et al
multi page documents
labeled and unlabeled
isolated page classification
isolated page classifier
support vector machines
sequential page classification
account contextual information
domain name description
structure learning algorithm
conditional word independence
new probabilistic model
text classification using
probabilistic independence networks
classification using support
markov probability models

corpus/krapavin2000-test/607624.txt
pages
categorization
regularities
hyperlinks
datasets
bayes
links
learning
referencing
thresholding
representations
classification
mining
kernels
classifying
exploiting
citations
treating
classifiers
clas
improving
domains
sources
tagged words
linked words
meta data
linked names
hypertext classication
text categorization
web pages
co referencing
naive bayes
feature selection
classication tasks
hypertext regularities
linked pages
text classication
linked documents
hypertext categorization
web page
encyclopedia regularity
web sites
categorization using
data regularity
vocabulary sizes
classification proceedings
category labels
classication performance
partial co
candidate categories
category distributions
local words
text classification
class label
linked neighbors
classication problems
classication decisions
using hyperlink
rich information
names competitor
information extraction
local text
conventional text
co referencing regularity
meta data regularity
chakrabarti et al
partial co referencing
webkb university corpus
document classification proceedings
hypertext classication tasks
international journal v
text categorization using
learning to classify
text categorization proceedings
related web sites
representations for hypertext
conventional text categorization
information extraction techniques
classification information processing

corpus/krapavin2000-test/607698.txt
lters
caselles
ir
nonincreasing
shapes
operators
grains
filters
heijmans
acts
decreasing
images
pruning
concerning
connected components
internal hole
extrema lters
semicontinuous functions
connected component
internal holes
semicontinuous function
open sets
mathematical morphology
connected operators
grain lter
continuous functions
connected operator
lower level
morphological lter
topographic map
structuring elements
closed set
ir n
o n
open set
closed sets
direct consequence
invariance properties
connected sets
external hole
contrast invariance
connected components of
caselles and p
upper semicontinuous function
upper semicontinuous functions
connected component of
nonincreasing sequence of
semicontinuous function and
hand side term
mathematical morphology and

corpus/krapavin2000-test/607707.txt
singularities
learning
blowing
samples
machines
mixtures
networks
asymptotics
manifolds
statistics
asymptotic expansion
generalization error
stochastic complexity
hierarchical learning
learning machines
learning machine
bayesian estimation
true distribution
probability density
true probability
parameter space
hidden units
neural networks
training samples
analytic function
parametric case
priori distribution
algebraic geometry
statistical model
statistical models
parametric model
learning theory
probability distribution
neural network
information matrix
kullback distance
algebraic variety
statistical estimation
fisher information
geometrical structure
asymptotic theory
singular points
natural number
parametric models
learning curve
dimensional vectors
trained using
conditional probability
learning model
previous paper
true parameters
hierarchical learning machines
artificial neural networks
probability density function
hierarchical learning machine
regular statistical models
contained in the
regular statistical model
true regression function
resolution of singularities
true probability distribution
generalization error g
case when the
priori probability density
true probability density
conditional probability density
algebraic geometrical structure
learning machine is
stochastic complexity f
number of parameters
neural computation v
maximum likelihood method
natural number n
arbitrary natural number

corpus/krapavin2000-test/607896.txt
timing
cache
generations
caches
caching
predictions
deadlines
estimates
paths
programs
executing
pipelining
sys
configurations
execution times
evolutionary testing
time systems
timing analyzer
longest execution
extreme execution
temporal behavior
execution time
evolutionary algorithms
static cache
timing analysis
static analysis
schedulability analysis
timing constraints
case execution
control flow
test data
temporal correctness
cache simulation
evolutionary computation
logical correctness
instruction categorizations
systematic test
testing real
timing predictions
test methods
run times
cache behavior
path analysis
static timing
evolutionary optimization
discrete recombination
evolutionary algorithm
entire program
current work
instruction cache
specified timing
analytical method
instruction caches
test programs
random testing
first misses
real time systems
extreme execution times
longest execution time
actual execution times
static analysis and
longest execution times
static cache simulation
case execution time
shortest and longest
static cache simulator
real time environments
remaining associativity levels
static timing analysis
evolutionary testing et
case and best
analysis and evolutionary
timing constraints of
case execution times
timing analysis of
specified for the
temporal system behavior
actual running system
constraints of real
methods to verify
run times possible
important analytical method
cache simulation and
actual real time
extreme run times
static analysis sa
verify timing constraints

corpus/krapavin2000-test/608017.txt
squashing
weights
diminishing
cients
sampling
weighting
scoring
gains
samples
mining
scaling
empirical likelihood
logistic regression
data squashing
likelihood weights
diminishing returns
squashed data
logistic regressions
likelihood squashing
credit scoring
g m
original data
likelihood weighting
random sample
training algorithms
predictor variables
data sets
local features
et al
expect squashing
variance reduction
speed gains
categorical variables
zero bayes
regression weighting
numerical integration
smaller sample
training data
dumouchel et al
empirical likelihood weights
empirical likelihood squashing
empirical likelihood weighting
simple random sample
using empirical likelihood
zero bayes error
credit scoring problem
regression coe cients
boosted decision trees
logistic regression coe
weighted logistic regressions
data to match
algorithms to large
monte carlo simulation

corpus/krapavin2000-test/608041.txt
servers
sites
arriving
self
characterization
sizes
characteristics
end servers
b2c site
commerce sites
response time
b2b site
arrival process
end server
web servers
processor utilization
b2b space
response file
commerce servers
load periods
commerce site
web server
traffic arriving
transfer times
general web
b2c environment
catalog server
workload characterization
database server
disk utilization
normal web
high burstiness
access logs
commerce server
load conditions
capacity planning
service time
d b
visual inspection
tailed behavior of
e commerce servers
front end servers
end web servers
observed that the
due to the
attributed to the
web response times

corpus/krapavin2000-test/608045.txt
channels
turing
communicating
verifying
writing
protocols
machines
channel systems
lossy channel
channel c
channel system
recursive complexity
e n
lossy behaviors
f n
lossy systems
decidable problems
petri nets
single channel
finite state
several channels
reset nets
control state
m using
n e
transition rules
nite state
contain encodings
recursive time
verication problems
perfect channels
lossy channel systems
nonprimitive recursive complexity
channel systems has
systems has nonprimitive
channel system s
probabilistic lossy channel
nite state automata
primitive recursive time
f n s
m using c
infinite state systems
ack n steps

corpus/krapavin2000-test/608119.txt
classiers
mdts
stacking
attributes
odts
bagging
predictions
voting
learning
boosting
trees
ensembles
classifiers
inducing
combining
distributions
siers
clas
bayes
cascading
leaves
constructing
level classiers
meta decision
decision trees
class probability
level classier
combining classiers
relative improvement
induced using
ordinary decision
classier c
level learning
learning algorithms
level data
multiple classiers
class value
combining multiple
probability distributions
predicted class
relative areas
class values
ordinary attributes
probability distribution
distribution properties
decision tree
voting schemes
class distribution
example x
learning algorithm
constructing ensembles
given example
australian balance
data sets
voting scheme
dierent learning
significant figure
naive bayes
machine learning
inducing meta
stacking framework
learning mdts
combine classiers
base level classiers
meta decision trees
class probability distributions
meta level data
ordinary decision trees
class probability distribution
predicted by the
distributions predicted by
combining multiple classiers
probability distributions predicted
short line density
constructing ensembles of
level learning algorithms
australian balance breast
boosting and bagging
base level classifiers
chess diabetes echocardiogram
meta decision tree
ensembles of classiers
class distribution properties
original base level
insignificant significant figure
dierent learning algorithms
relative accuracy improvement
single data set
induced using the
classiers can be
base level predictions
decision trees is

corpus/krapavin2000-test/608175.txt
bmds
multipliers
diagrams
bits
circuits
substituting
bdds
verifying
cir
pointing
representations
cuits
errors
sizes
partial product
product bits
backward construction
variable order
binary moment
terminal node
moment diagrams
topological order
high successor
like multipliers
input word
nonterminal node
substitute algorithm
variable x
arithmetic circuits
partial products
product bit
o n
decision diagrams
multiplier circuit
bmd representing
multiplicative binary
arithmetic functions
variable orders
integer multiplication
recursive calls
terminal vertices
primary inputs
level specifications
formal verification
boolean variables
moment diagram
high successors
intermediate bmds
terminal value
specific multiplier
partial product bits
initial partial product
binary moment diagrams
reverse topological order
tree like multipliers
partial product bit
experimental data has
multiplicative binary moment
labeled with a
data has been
terminal high successor

corpus/krapavin2000-test/608176.txt
cells
modelling
invariants
checking
proving
proofs
rm cells
abr conformance
timed automata
model checking
rate acr
stable locations
current time
ideal rate
proof methods
algorithm b
auxiliary properties
update relation
discrete variables
variable r
project calife
action moves
new rm
real time
reachability analysis
inductive invariance
inductive invariants
reachable states
algorithm f
theorem proving
complete sequence
initial location
proof assistant
cross fertilizing
standardized algorithm
hybrid automata
conformance algorithm
unified framework
time increases
algorithm b 0
current time s
ideal rate acr
new rm cell
unified framework of
two proof methods
real time systems
initial p constraint
closed form evaluation
universal clock s
parametric real time

corpus/krapavin2000-test/608242.txt
controllability
ls
groups
matrices
spaces
algebras
semigroups
fields
products
controllability conditions
invariant systems
lie algebra
algebra l
lie group
lie groups
ae l
ad b
controllability condition
sufficient controllability
rank controllability
solvable lie
lie saturation
necessary controllability
control systems
hypersurface principle
adjoint operator
attainable set
jordan base
real n
r n
following conditions
invariant system
root space
simple spectrum
lie subalgebra
l containing
vector space
spectrum sp
jordan chain
bilinear system
invariant vector
compact group
bilinear systems
vector fields
theta n
mathematical control
controllability of right
lie algebra l
sufficient controllability conditions
gamma is controllable
lie group g
operator ad b
rank controllability condition
adjoint operator ad
solvable lie groups
group of motions
necessary controllability conditions
invariant vector fields

corpus/krapavin2000-test/608323.txt
centres
entities
subproblems
clustering
instances
rosing
solutions
dissimilarities
solving
routing
airports
procedures
locating
improving
positions
alt procedure
solution quality
computing time
initial solution
computing times
candidate list
p centres
best solutions
mwp instances
clustering problems
dissimilarity measure
centroid clustering
list search
good solutions
vehicle routing
median problem
routing problems
weber problem
nearest centre
problem instances
o p
pmp instances
source weber
heuristic methods
local optimization
better solutions
initial problem
decomposition methods
n p
deterministic procedure
mwp solution
number of centres
entities allocated to
set of entities
candidate list search
vehicle routing problems
centroid clustering problems
list search cls
best solutions known
number of entities
non deterministic procedure
respective computing times
depot vehicle routing
location allocation problems
n p entities
quality time s
methods presented in

corpus/krapavin2000-test/608327.txt
deconvolution
thresholding
cients
textures
regularizing
wavelets
denoising
deblurring
cnes
areas
blur
images
filtering
packets
edges
regions
wavelet packet
complex wavelet
original image
real wavelet
satellite image
packet transform
homogeneous areas
residual noise
gaussian model
wavelet transform
wavelet thresholding
wavelet packets
proposed algorithm
satellite images
frequency space
space agency
regularization method
image deblurring
adaptive parameters
french space
complex wavelets
thresholding technique
image deconvolution
directional selectivity
fourier space
homogeneous regions
noise variance
invariance properties
proposed method
rotational invariance
bayesian thresholding
better directional
homogeneous model
inhomogeneous gaussian
adaptive gaussian
packet decomposition
invariant real
invariant transforms
transform exhibits
soft thresholding
real satellite
complex wavelet packet
approximate original image
wavelet packet transform
complex wavelet transform
complex wavelet packets
je rey s
space agency cnes
wavelet packet basis
satellite image deblurring
noise coe cients
french space agency
unknown coe cients
original coe cient
wavelet coe cients
adaptive gaussian model
new complex wavelet
proposed algorithm consists
original complex wavelet
shift invariant real
automatic parameter estimation
proposed complex wavelet
shift invariant transforms
original image x
inhomogeneous gaussian model
wavelet packet decomposition
original image using
possible to use
transform coe cients
proposed algorithm is

corpus/krapavin2000-test/608350.txt
averaging
gibbs
learning
guarantees
concepts
distributions
minimizing
kearns
satisfying
selecting
classifiers
bounds
weighting
settings
model selection
stochastic model
model averaging
posterior distribution
concept classes
probability measure
concept class
prior probability
prior distribution
l c
posterior distributions
distribution q
performance guarantee
performance guarantees
optimal posterior
countable concept
simpler posterior
concept c
training data
gibbs distribution
density estimation
empirical error
machine learning
continuous density
countable class
arbitrary posterior
decision trees
generalization error
probability distribution
bayesian approach
distribution p
error rates
error rate
continuous function
learning algorithm
delta satisfying
continuous probability
bayesian mixture
stochastic model selection
simpler posterior distributions
model selection algorithms
first main result
continuous concept classes
second main result
nearly optimal performance
guarantees for deterministic
model selection algorithm
measurable loss function
continuous probability density
superior to analogous
posterior is a
bayesian stochastic model
smoothed trigram model
countable concept classes

corpus/krapavin2000-test/608351.txt
reinforcement
learning
outcomes
trials
signals
predictions
bounds
instances
sums
setting
relative loss
loss bounds
difference learning
reinforcement signals
linear regression
r n
total loss
future reinforcement
order algorithm
learning algorithm
second order
outcome y
linear predictor
regression algorithm
order algorithms
linear function
episodic setting
temporal least
discount rate
discounted sum
additional loss
positive definite
ridge regression
vector x
rate parameter
parameter fl
unknown distribution
reinforcement learning
line algorithm
instance vector
discounted sums
reinforcement signal
arbitrary sequences
first inequality
consider linear
learning rates
least squares
signal r
lower bound
first order
average case
relative loss bounds
temporal difference learning
bounds for temporal
future reinforcement signals
outcomes y t
trials 1 through
1 through t
sequence of examples
outcome y t
second order algorithm
best linear predictor
positive semi definite
second order algorithms
real interval gammay
difference learning setting
new second order
rate parameter fl
discount rate parameter
temporal least squares
bounds for linear
number of trials
vector x t
instance vector x
first order algorithm
reinforcement signal r
linear regression algorithm
order learning algorithm
consider linear regression
consider temporal difference
second order learning
known relative loss
signal r t
relative loss bound

corpus/krapavin2000-test/608352.txt
certifying
samples
working
joachims
svms
machines
iterations
gramming
certifying pair
rate certifying
qp problem
support vector
vector machines
working sets
qp problems
certifying pairs
o m
smaller qp
log m
m log
stepwise improvement
existing svm
certifying condition
svm algorithms
model algorithm
decomposition algorithms
technical report
smo algorithm
optimality using
nontrivial components
et al
decomposition algorithm
optimality condition
current solution
many existing
low g
feasible directions
rate certifying pair
support vector machines
keerthi et al
m log m
lanl technical report
smaller qp problems
high low v
technical report la
rate certifying algorithm
rate certifying condition
existing svm algorithms
using certifying pairs
working sets that
original qp problem
optimality using certifying
drive the criterion
class of algorithms
polynomial time bound
number of samples
necessary and su
original problem solution

corpus/krapavin2000-test/608356.txt
scenarios
trees
running
lowing
determining
gorithms
reducing
backward reduction
scenario tree
forward selection
simultaneous backward
scenario reduction
stochastic programming
n scenarios
ternary scenario
reduction algorithms
probability measure
scenario trees
binary scenario
probability measures
load process
stochastic programs
n n
running times
minimal distance
numerical experience
r r
measure p
function c
distance scenarios
power management
management model
electrical load
measure q
original scenario
optimal reduction
initial probability
numerical tests
computational complexity
optimal deletion
non branching
test trees
deleted scenarios
reduced trees
reduced tree
conceptual algorithm
optimal redistribution
reduced measures
running time
integer program
fast forward selection
simultaneous backward reduction
scenario reduction algorithms
algorithms in stochastic
index set j
ternary scenario tree
binary scenario tree
weekly electrical load
electrical load process
power management model
bound distance scenarios
probability measure p
discrete probability measure
scenario tree representing
subset containing n
regular ternary scenario
reduced tree with
optimal reduction concept
higher running times
non branching points
j having cardinality
reduced probability measures
optimal redistribution rule

corpus/krapavin2000-test/608456.txt
reasoning
patients
es
estimates
ms
estimating
survival time
based reasoning
kernel estimate
e h
distance function
observed survival
statistical approach
observable variables
new case
bandwidth h
regression estimate
breast cancer
regression function
distance functions
regression estimates
univariate kernel
function m
nonparametric regression
local averaging
e y
cancer data
given new
regression estimation
final result
new patient
survival times
cancer patients
bandwidth selection
et al
n l
k cases
appropriate therapy
case based reasoning
statistical approach to
dippon et al
observed survival time
breast cancer data
univariate kernel estimate
pn pm es
distance function which
given new case
breast cancer patients
observable variables and
r v s
distance function d

corpus/krapavin2000-test/608626.txt
controllers
adonis
movements
primitives
robotics
hodgins
behaviors
kinematics
agents
arms
manipulators
swinging
sequencing
tradeoffs
dancing
watching
specifying
walking
impedance controller
impedance control
different controllers
human data
kluwer style
style file
hand position
inverse kinematics
task specification
servo controller
space controllers
force fields
articulated agents
human movement
space torque
dynamic simulation
joint limits
cartesian space
computer animation
hand tuning
complex articulated
torso simulation
space controller
controller use
dynamic simulations
position control
motor primitives
combination approach
cartesian impedance
different control
avoid collisions
robot arm
et al
c et al
kluwer style file
torque field controller
joint space controllers
qualitative and quantitative
joint space torque
complex articulated agents
joint space force
e sub tasks
approach to control
applied to the
cartesian impedance control
left torque field
joint space control
rigid body simulation
joint space controller
non linear controllers

corpus/krapavin2000-test/608634.txt
agents
saridakis
hosting
policies
matching
requirements
accepting
servers
architectures
verifying
regarding
primitives
supporting
services
describing
execution properties
functional properties
host environment
web agents
architectural elements
execution environment
remote execution
interaction properties
customized remote
software architecture
open software
formal specication
formal specications
software architectures
pattern matching
open components
architectural description
open architecture
functional property
specication matching
resource management
matching techniques
web servers
component providing
open component
requirements regarding
host according
functional interaction
service binding
declared operations
functional typeint
operation signatures
functional non
customized remote execution
execution properties that
client typeformat format
environment customized to
open software architectures
open software architecture
customized execution environment
server typeformat format
agent is a
functional typeint close
open close read
close typedsc fd
architecture description languages
svce service binding

corpus/krapavin2000-test/608635.txt
commitments
agents
metacommitments
protocols
parties
participating
interactions
messaging
reasoning
actions
specifications
auctions
synthesizing
meaning
checking
tems
specifying
designers
sys
commitment protocols
multiagent systems
autonomous agents
multiagent system
market protocol
potential causality
participating agents
local models
commitment protocol
agent systems
model checking
compliance testing
agent communication
temporal logic
open systems
global model
electronic commerce
technical framework
testing compliance
g p
distributed computing
compliance checking
international joint conference
fourth international joint
autonomy and heterogeneity
compliance can be
base level commitments
agent communication languages
given multiagent system
open multiagent systems
compliance checking procedure

corpus/krapavin2000-test/608643.txt
semantics
agents
acls
acts
communication
frameworks
standards
checking
languages
planning
informing
demonstrating
verifying
referring
requesting
promising
claims
agent communication
speech acts
communication language
semantic language
communication framework
language l
logical consequence
michael wooldridge
l c
semantic issues
model checking
autonomous agents
communication languages
program semantics
agent systems
propositional logic
proof problem
modal logic
temporal logic
program satises
acl semantics
speech act
communication frameworks
conformance testing
successful completion
preparatory conditions
physical actions
formal framework
grounded semantics
arbitrary programs
classical rst
language l s
agent communication framework
classical propositional logic
quantied multi modal
semantic language l
agent communication languages
model checking approaches
determine whether or
international joint conference
agent communication language
agent communication frameworks
whether or not
desire intention logics
claims to conform
communication language semantics

corpus/krapavin2000-test/608645.txt
agents
clearing
auctions
designers
dynamics
decreases
reasoning
thinking
seeking
designing
advantages
participants
rs
conventions
strategies
strategy agents
umdl auction
strategic agents
umdl system
offer price
interested agents
strategic reasoning
multiagent system
umdl service
service market
market society
digital library
mechanism design
multiple p
collective behavior
auction mechanism
simpler strategy
social laws
emergent properties
simpler strategies
strategic thinking
agent population
profit seeking
double auction
sell prices
interested agent
higher profit
allocation efficiency
agent societies
agent designers
transition probabilities
overall system
individual agents
multiagent systems
incentive engineering
reservation prices
double auctions
query planning
p strategy agents
buyers and sellers
umdl service market
service market society
bid their true
adaptive p strategy
agents use simpler
based digital library
overall system behavior
evolve to a
artificial agent societies
p strategy works
enough other agents
arrival of equally
ss bbbbss s
digital library umdl
point where some
fm qpa s
profit seeking behavior
auction mechanism may

corpus/krapavin2000-test/608654.txt
agents
roles
methodologies
protocols
organisations
jennings
agent systems
autonomous agents
agent system
agent types
agent model
software engineering
systems part
oriented analysis
liveness properties
design process
liveness expression
liveness responsibilities
interaction model
business process
liveness expressions
gaia methodology
safety properties
based system
applied computing
oriented development
supplied customerrequirements
oriented methodologies
coffee machine
agent carrying
concrete concepts
interaction models
knowledge engineering
information systems
electronic commerce
based systems
software development
international joint conference
first international joint
multiagent systems part
oriented analysis and
agent oriented analysis
agent oriented software
responsibilities liveness safety
informworkers checkstock awaitempty
agent systems proceedings
associated with the
oriented software engineering
software engineering notes
fifth international conference
customerdetails customer contact
giunchiglia john mylopoulos
object oriented analysis
agent oriented development
business process management
davidsson fredrik wernstedt
agent oriented methodologies

corpus/krapavin2000-test/608666.txt
sources
wrappers
documents
rules
learning
pages
extracting
agents
lists
missing
labeling
orders
generates
accur
extraction rules
wrapper induction
information sources
semistructured information
ion muslea
hierarchical wrapper
training examples
information extraction
iteration rules
ec tree
list extraction
missing items
various orders
list iteration
extraction rule
initial candidates
uncovered examples
data extraction
information agents
fewer wildcards
stalker generates
extraction tasks
inductive algorithm
ec description
stalker uses
positive examples
web pages
fewer tokens
training example
extracting data
covered examples
initial candidate
semistructured information sources
hierarchical wrapper induction
induction for semistructured
rules based on
extracting data from
active learning techniques
extraction rules based
learning extraction rules
information extraction systems
list iteration rules
based on a
items that appear
list iteration rule

corpus/krapavin2000-test/608686.txt
agents
messages
forwarding
faults
communication
mechanisms
passing
delivering
ensuring
associating
enhancements
traveling
guarantees
guaranteeing
missing
mobile agent
mobile agents
message delivery
arrives action
agent systems
runtime support
agent platform
communication mechanism
next message
message source
reliable communication
group communication
distributed snapshot
physical mobility
forwarding scheme
message passing
state transitions
message arrives
tree broadcasting
sheer presence
conventional mechanisms
free network
agent platforms
mobile agent systems
mobile agent platform
highly mobile agents
message j arrives
multiple message delivery
underlying mobile agent
reliable message delivery
finished processing action
mobile agent platforms
either do not
currently available mobile
static network graph
many mobile agent
current message delivery
mobile agent server
available mobile agent

corpus/krapavin2000-test/608696.txt
sellers
prices
learning
agents
players
policies
economies
undercutting
rewards
crites
games
unending
filtering
approximators
competing
discounting
alternating
adjusting
leading
differen
simultaneous q
discount parameter
price war
profit functions
price wars
shopbot model
quality model
agent q
agent economies
information filtering
parameter fl
pricing policies
cyclic price
price pair
myopic opponent
immediate reward
expected reward
take turns
time step
state space
current price
setting prices
action pair
exact convergence
pricing algorithms
approximate convergence
economic models
lookup tables
longer term
reinforcement learning
high prices
derived policies
deterministic policy
future rewards
stationary environment
optimal pricing
instantaneous profits
optimal policies
function approximators
competing sellers
pricing policy
theoretical guarantees
software agents
nash equilibrium
lookup table
full knowledge
optimal policy
simultaneous q learning
agent q learning
discount parameter fl
single agent q
cyclic price wars
information filtering model
alternately take turns
functions and policies
sellers alternately take
sandholm and crites
good approximate convergence
myopic optimal price
adjusting their prices
turns setting prices
current q function
current price pair
state space transitions

corpus/krapavin2000-test/608736.txt
dependences
accesses
summaries
loops
parallelization
polaris
expressions
parallelizing
subscripts
classifying
transformations
tests
privatizing
locations
codes
summarizing
compilers
boundaries
analyses
patterns
dependence analysis
range test
dependence testing
access region
omega test
subscript expressions
dependence grain
later grain
order summary
memory location
dependence grains
region test
subscripting expressions
procedure boundaries
access summaries
dependence test
memory accesses
ne expressions
input dependence
memory locations
memory references
across procedure
compiler transformations
array access
memory access
internal overlap
array reshaping
recursive intersection
access patterns
linear memory
abstract interpretation
memory classication
region descriptor
classication analysis
classifying memory
order summarization
interprocedural dependence
array subscripting
parallelism detection
coupled subscripts
intersection operation
loop indices
dependence tests
simplication operations
access representation
order summary scheme
access region test
across procedure boundaries
removed by privatization
recursive intersection algorithm
ne subscript expressions
dimensional recursive intersection
linear memory access
memory classication analysis
access region descriptor
dependence between grains
classifying memory locations
single memory location
interprocedural dependence analysis
memory access descriptor
new summary sets
array subscripting expressions
memory referencing unit
data dependence analysis
interprocedural array region
represent memory accesses

corpus/krapavin2000-test/608747.txt
guarding
dependences
predicates
renaming
scheduling
registers
instructions
branches
paths
optimizations
definitions
defining
blocks
removing
profiling
architectures
pipelining
guarding predicate
height reduction
schedulable cycle
predicated code
predicated execution
predicated speculation
path predicates
path information
using pssa
false dependences
normal op
single assignment
predicated hyperblock
guarding predicates
instruction scheduling
control flow
ebagf cmpp
cmpp statements
sensitive analysis
epic architecture
control paths
cmpp operations
predicate registers
cmpp operation
block predicates
original code
flow graph
define predicates
op guarding
renamed variables
multiple control
multiple definitions
issue machine
block predicate
control dependence
basic blocks
control path
original control
level parallelism
dependence graph
flow analysis
sensitive implementation
traditional code
trimaran system
predicate register
executed cycles
earliest schedulable cycle
control height reduction
full path predicates
static single assignment
predicated static single
predicated speculation and
control flow graph
predicate sensitive analysis
single assignment pssa
eliminating false dependences
next def get
guarding predicate is
instruction level parallelism
predicated speculation pspec
predicate sensitive implementation
cmpp op guarding
guarding predicates are
multiple control paths
normal op target
predicate defining operations
original control flow
optimized infinite results
using pssa to
need for renaming
schedulable cycle f
support for predicated
renaming and for

corpus/krapavin2000-test/608786.txt
skewing
loops
calculations
cache
tiling
arrays
oating
iterations
optimizations
improving
ding
transformations
scalable locality
time skewing
time loop
time step
compute balance
machine balance
step calculation
improving locality
o b
main memory
step calculations
skewing transformation
tomcatv benchmark
problem size
cache interference
matrix multiplication
code generation
virtual memory
break statements
e loops
stencil calculations
memory locality
l2 cache
current techniques
loop nests
n values
data locality
loop bounds
ow dependences
step completing
temporary values
locality proceedings
break statement
previous iteration
g e
achieve scalable locality
produce scalable locality
time skewing transformation
time step calculations
grows less than
exhibits scalable locality
time step completing
exhibit scalable locality
compile time optimizations
techniques for improving
less than linearly

corpus/krapavin2000-test/608853.txt
circuits
encoding
coding
codes
patterns
decoding
flops
probabilities
inputs
sequences
cores
unique patterns
test sets
test patterns
encoded test
test application
primary inputs
length encoding
deterministic built
test sequences
comma code
huffman coding
codeword length
length coding
huffman code
comma coding
set compression
pattern generation
fault coverage
sequential circuits
application time
comma encoding
statistical encoding
precomputed test
multiple cuts
unique pattern
pseudorandom testing
pattern xi
decoder dc
average length
average codeword
d le
test pattern
test sequence
huffman encoding
clock cycles
design automation
data compression
lowest probabilities
single decoder
test vec
set encoding
unique test
benchmark circuits
encoded test set
run length encoding
test set compression
test application time
equal length coding
average codeword length
full binary tree
precomputed test sequences
run length coding
test set encoding
unique test patterns
chandra krishnendu chakrabarty
among multiple cuts
encoding of precomputed
number of bits
present experimental results

corpus/krapavin2000-test/608855.txt
cores
ports
interconnections
scheduling
interconnects
signatures
pipelining
connections
patterns
test time
test data
bit match
output test
cost values
fault coverage
test paths
test path
shortest path
test controller
output ports
output port
bypass scheduling
input test
bit widths
bypass circuitry
test point
bit width
input port
input ports
test points
primary inputs
test patterns
embedded cores
complete bypass
directed weighted
existing interconnections
test methodology
design automation
characteristic function
primary outputs
reusable blocks
isolation techniques
state buffers
micron cmos
graph modeling
programmable e
directed weighted graph
transfer test data
bit test data
tri state buffers
test data distribution
input test paths
weighted graph in
isolated core environment
programmable e g
input test path
output test path
output test paths
global global source
shortest path problem
data distribution and
electronic testing theory
graph in which
available bypass connections

corpus/krapavin2000-test/608920.txt
tams
cores
socs
wrappers
os
partitioning
scheduling
multiplexing
optimizing
architectures
sizing
stepping
minimizing
determining
testing time
tam width
scan chain
scan chains
internal scan
wrapper design
tam optimization
tam design
ilp model
testing times
test access
total tam
test wrapper
tam widths
functional inputs
system testing
clock cycles
test bus
tam lines
test wrappers
test scheduling
general problem
soc test
mathematical programming
functional outputs
width partition
core test
access mechanism
execution time
design problem
industrial soc
ilp models
test patterns
optimal partition
core testing
soc testing
access architectures
test architecture
new wrapper
optimal tam
obtained using
design algorithm
wrapper scan chains
wrapper scan chain
internal scan chains
number of tams
total tam width
internal scan chain
cores to tams
assignment of cores
system testing time
balanced wrapper scan
mathematical programming model
test access mechanism
tam width partition
scan chain elements
test wrapper and
tam optimization that
among the tams
wrapper design algorithm
core testing time
test access architectures
integration vlsi systems
ieee p1500 standard
soc testing time
total testing time
tam optimization models
soc as well

corpus/krapavin2000-test/609176.txt
cps
passing
reasoning
semantics
asserting
notions
mapping
extensions
programs
languages
effects
mantics
computations
retraction theorem
lambda terms
computational transform
type oe
retraction embedding
type sets
term m
computational lambda
lambda calculus
r e
passing style
e oe
type system
type inference
lambda term
embedding pairs
recursive type
simple type
equivalence classes
computational effects
computational effect
recursive types
continuation passing
value v
denotational semantics
closed terms
value evaluation
simple types
closed lambda
particular transform
retraction approach
defined using
e r
equational correspondence
r r
larger class
modified computational transform
prove the retraction
retraction theorem to
retraction embedding pairs
retraction embedding pair
computational lambda calculus
continuation passing style
computational transform t
class of extensions

corpus/krapavin2000-test/609180.txt
binding
continuations
exceptions
passing
semantics
delimiters
emacs
programs
enclosing
languages
reasoning
theories
constructs
cons
dynamic binding
dynamic environment
evaluation function
parallel evaluation
deep binding
dynamic extent
environment passing
dynamic variables
sequential evaluation
syntactic theory
adds expressiveness
dynamic abstraction
binding adds
passing style
passing translation
associative list
expressive programming
common lisp
equational reasoning
functional language
shallow binding
dynamic abstractions
resumable exceptions
control delimiters
class continuations
transition rules
continuation passing
programming technique
active handler
binding technique
partial continuations
dynamic scope
observational equivalence
gnu emacs
active binding
syntactic theories
equational correspondence
standard ml
programming patterns
future construct
implementation strategies
lexical binding
resumable ones
e evaluation
dynamic environment passing
sequential evaluation function
binding adds expressiveness
prove that dynamic
purely functional language
environment passing style
expressive programming technique
environment passing transform
parallel evaluation function
adds expressiveness to
class continuations and
first class continuations
binding is a
environment passing translation
ml style exceptions
current dynamic environment
programs in dynamic
deep binding strategy
continuations and assignments
perform equational reasoning
deep binding technique
space binding list
inverse dynamic environment

corpus/krapavin2000-test/609199.txt
cons
interrupts
saving
processes
languages
indiana
ideas
executing
scheduling
operating
monitors
pages
process saving
applicative languages
elementary exclusion
critical region
enable preemption
denotational semantics
class instance
data protection
disable preemption
language design
applicative language
control access
causes control
ready process
many functions
complex schedulers
control access to
north holland amsterdam
let x cons
small many functions
becomes less of

corpus/krapavin2000-test/609202.txt
specialization
computations
strategies
specializing
programs
unrolling
ts
specializations
iterations
phases
data specialization
program specialization
specialized program
early computations
code explosion
specialization strategies
aeow computations
residual program
partial evaluation
program specializer
code size
expensive data
problem size
innermost loop
specialization problem
specialization opportunities
expensive calculations
combining program
computations program
unspecialized program
residual code
size increases
static computations
specialization process
perform data
nested loops
c programs
fourier transformation
speculative evaluation
program applications
program and data
data specialization can
data specialization does
cubic spline interpolation
program specialization and
specialization can be
data specialization is
program specialization can
data specialization for
1 program specialization
data specialization when
control aeow computations
scienti c programs
perform data specialization
computations which depend
problem size increases
number of iterations
contrast data specialization
line program specializer
specialized program figure
d struct data

corpus/krapavin2000-test/609203.txt
certifying
constructs
analyses
invariants
shaders
manipulating
programs
allocating
generators
translating
generating
generates
code generation
run time
time code
object code
certifying compiler
generation region
cyclone program
type safe
template code
front end
time specializer
cyclone compiler
type safety
local variables
time specialization
splice statement
italicized constructs
tal instructions
c program
code fragments
type system
codegen expression
invariant arguments
generation process
static analyses
subsequent paper
popcorn compiler
new tal
cyclone programs
mobile code
source code
modular exponentiation
second phase
time code generation
action annotated program
code generation region
tal t instructions
tal t program
code generation process
type safe dialect
code generation regions
function that generates
tal t language
object code satisfies

corpus/krapavin2000-test/609226.txt
mops
interpreters
string
languages
semantics
debugging
objects
protocols
programs
reflective interpreter
reified representation
generic reification
class instance
method call
reflective programming
reification technique
base representation
environment locale
reflective systems
original class
reification operator
interpreter definition
original interpreter
see figure
program transformation
dispatch objects
reflective interpreters
active representation
tailored mops
local environment
accessible representation
reflective tower
reflective programs
oriented interpreters
interpretation layer
using reflection
reflective towers
reflective languages
reflective system
lookupdata string
runtime system
level n
security properties
user programs
syntax tree
language designers
metacircular interpreter
metaobject protocols
method eval
expmethod extends
reification process
reification operation
global environment
reflective capabilities
current representation
non reflective interpreter
generic reification technique
exemplified in section
object oriented interpreters
class instancelink datalist
instancelink datalist datalist
generic reification scheme
lookupdata string name
datalist datalist field
class expmethod extends
original class name
dispatch object instance
original interpreter definition
incoming method calls
infinite tower of
generated dispatch class
level n interprets
method call tracing
datalist datalist instance
new tower level

corpus/krapavin2000-test/609228.txt
pers
binding
semantics
analyses
relations
programs
ning
security condition
information flow
equivalence relations
secure information
binding time
security properties
probabilistic powerdomain
time analysis
partial equivalence
powerdomain semantics
security type
slam calculus
per model
based security
probabilistic security
equivalence relation
security levels
type system
higher order
sequential programs
partial evaluation
order functions
concurrent language
lower powerdomain
correctness arguments
security types
relational semantics
flow properties
static analysis
imperative language
denotational semantics
flow analysis
program analysis
security analysis
nondeterministic choice
bottom reflecting
den ning
security conditions
static arguments
discrete powerdomains
representing degrees
secure information flow
partial equivalence relations
low high theta
per model of
equational security condition
information flow properties
partially confidential data
f g subsets
high theta st
probabilistic powerdomain semantics
giacobazzi isabella mastroeni
specify security properties
partial evaluation time
specific correctness arguments
probabilistic security properties

corpus/krapavin2000-test/609230.txt
loaders
loading
typing
subtyping
widening
environments
applets
linking
instructions
classes
ects
appearing
dening
straints
ns
proving
loading constraint
constraint scheme
method resolution
class loaders
class loader
class loading
bytecode verication
value typing
class c
c cl
loading constraints
method m
method dispatch
dispatch table
bytecode verier
predicate selects
jvm state
selection process
soundness theorem
method overriding
augmented typing
method invocation
found inside
ndclass scheme
applet loaders
bridge safe
error state
n l
environment e
r l
virtual machine
resolution process
type r
local stack
loading constraint scheme
method selection process
method dispatch table
augmented value typing
java virtual machine
constraint scheme and
method resolution process
cl pc lvars
theorem trusted environments
class loading in
dynamic class loading

corpus/krapavin2000-test/609232.txt
terminating
cs
metrics
datatypes
orderings
proving
checking
establishing
rewriting
ordering
nating
verifies
programs
verifying
guaranteeing
minating
easing
demonstrating
program termination
dependent types
termination verification
mutual recursion
termination checking
index expressions
type system
program errors
structural ordering
recursive function
programming features
establishing program
ackerman function
general recursion
interactive theorem
typed program
primitive recursion
higher order
rewriting systems
theorem proving
term rewriting
natural numbers
dynamic semantics
order functions
program error
automated termination
significant programming
termination proofs
practical programming
type annotation
founded orderings
facilitate program
function call
programming language
liveness property
development cycle
lexicographic ordering
program termination verification
approach to program
establishing program termination
interactive theorem proving
typed program in
detecting program errors
term rewriting systems
cannot be proven
programming features such
significant programming features
including mutual recursion
usual lexicographic ordering
types in practical
program development cycle
e is a
theorem proving systems
program termination and
decreasing when a
realistic programming language

corpus/krapavin2000-test/609238.txt
axioms
continuations
iterators
operators
cps
monads
theories
eects
products
reasoning
principles
fossacs
languages
categories
inspecting
amounts
passing
semantics
recalling
lifting
tinuations
xpoint operator
xpoint operators
stable uniform
class continuations
uniform cbv
rigid functionals
bijective correspondence
uniformity principle
uniform call
uniform iterator
r c
computational lambda
lambda calculus
uniformity principles
uniform iterators
function types
stability axiom
cps transformation
strong monad
passing style
continuation passing
nite products
fixpoint operators
categorical semantics
diagonal property
domain theory
value programming
computational model
total functions
second main
side eects
h f
n x
value recursion
value setting
iteration theories
rst class continuations
uniform cbv xpoint
stable uniform cbv
cbv xpoint operators
stable uniform call
computational lambda calculus
value xpoint operator
sound and complete
cbv xpoint operator
uniform xpoint operator
recursion from iteration
continuation passing style
value programming languages
value xpoint operators
filinski s construction
second main result
cbv xpoint axiom
least xpoint operator

corpus/krapavin2000-test/609316.txt
qos
caching
networks
challenges
networking
os
standards
operating
technologies
supports
clients
services
environments
explores
interfaces
seamless mobility
mobile computing
computing environment
portable computer
wireless networks
adaptive computing
consistency management
file system
wireless network
multiple wireless
disconnected operation
consistency policies
home computer
qos changes
dynamic qos
mobile user
network qos
different wireless
connected operation
different networks
connection manager
backbone support
qos negotiation
commercial networks
application servers
kept consistent
dynamic operating
adaptation support
file systems
across different
base stations
cached data
available network
exception handling
computing environments
provide seamless
variable qos
record caching
network migration
operating conditions
wireless networking
network connections
networking technologies
virtual point
update conflicts
backbone network
low qos
level adaptation
predictive caching
interoperable wireless
multiple connections
contemporary research
pricing structure
mobile computing environment
seamless mobility and
caching and consistency
multiple wireless networks
mobility and adaptive
different wireless networks
partially connected operation
across different wireless
computing environment which
adaptive computing and
environment which provides
dynamic operating conditions
mobile computing environments
provide seamless mobility
support disconnected operation
provides seamless mobility
semantic record caching
prayer mobile computing
mobile computing model
wireless networking technologies
e g switches
outdoor wireless networks
commercially available wireless
collaboratively adapt to
non interoperable wireless
network level solution
portable computer and
available network qos
computing and seamless
heterogeneous wireless networks
mobile user switches
computing environment is
file system clients
mobile service stations
distributed file systems
need to be

corpus/krapavin2000-test/609391.txt
users
fading
channels
ds
multicodes
spreading
ranking
signals
detectors
sequences
simulations
decorrelating
employing
nels
codes
rates
sers
estimates
schemes
shadowing
mixed modulation
interference cancellation
qam users
qpsk users
rayleigh fading
th user
ary qam
parallel channels
modulation systems
signature sequences
gaussian approximation
ic scheme
baseband signal
multicode system
h th
e b
stationary awgn
modulation system
multiple access
cdma systems
channel parameters
imperfect cancellation
single bpsk
pilot symbols
gaussian noise
fading channels
matched filter
flat rayleigh
multicode systems
composite signal
random sequences
rate systems
spreading sequences
rate users
cdma system
successive interference
multistage interference
similar expression
awgn channels
decision variables
k h
data rates
power control
channel gain
multiuser detectors
perfect ranking
multiple data
division multiple
psfrag replacements
known channel
error probability
directed interference
perfect power
modulation formats
imperfect cancellations
stage interference
average power
mixed modulation systems
mixed modulation system
single user bound
k th user
single bpsk figure
flat rayleigh fading
th user s
rayleigh fading channels
single rate systems
stationary awgn channels
multistage interference cancellation
successive interference cancellation
division multiple access
systems with ic
multiple data rates
decision directed interference
multistage ic scheme
using order statistics
orthogonal spreading sequences
high rate users
mean square value
stage interference cancellation
single rate system

corpus/krapavin2000-test/609397.txt
nccs
channels
borrowing
blocking
cells
sharing
locking
resources
schemes
dynamics
communications
achieves
cell region
blocking probability
channel assignment
channel sharing
base station
adjacent channel
call blocking
channel interference
traffic load
channel borrowing
neighbor cells
nominal channels
cochannel interference
cochannel cells
sharing channels
sharing pool
traffic density
channel resources
borrowable channels
channel locking
borrowed channel
cell regions
lower call
dca schemes
nominal channel
sharing pools
assignment schemes
dynamic channel
radio link
sharing channel
traffic dynamics
channel swapping
wireless cellular
cell channel
adaptive channel
mobile cellular
cellular network
cellular mobile
mobile terminals
adjacent cells
mobile communication
cellular networks
communication systems
base stations
available channels
c channels
borrowed channels
directional borrowing
channel resource
interference issue
new call
traffic loads
radio channel
cellular systems
d b
proposed scheme
exclusive use
adapt channel
call blocking probability
adjacent channel interference
channel assignment schemes
channel sharing scheme
lower call blocking
channel sharing pool
cochannel interference and
cell channel sharing
channel sharing nccs
adaptive channel assignment
neighbor cell channel
mobile communication systems
compared with that
traffic adaptive channel
channel assignment and
wireless cellular networks
traffic load distributor
scheme can adapt
compared with other
referred to as
cochannel interference issue
fca scheme is
traffic load dynamics

corpus/krapavin2000-test/609461.txt
fading
channels
policies
coding
schemes
communications
varying
ms
spectral efficiency
nakagami fading
rate m
channel inversion
channel capacity
rate adaptation
constant power
constellation size
fading channel
nmf channels
rayleigh fading
adaptive m
continuous rate
nmf channel
discrete rate
fading channels
adaptive modulation
noise ratio
optimal rate
outage probability
optimal power
adaptive transmission
average bit
perfect channel
channel estimation
nakagami m
shannon capacity
channel fading
adaptive discrete
ber degradation
qam schemes
assuming perfect
channel conditions
multipath fading
communication system
mobile radio
average link
regions capacity
adaptive policies
capacity penalty
efficiency regions
fading decreases
adaption policies
adaptive m qam
link spectral efficiency
variable rate m
truncated channel inversion
rayleigh fading channel
adaptive discrete rate
achievable spectral efficiency
adaptive continuous rate
average bit rate
average link spectral
time delay on
optimal rate adaptation
total channel inversion
nakagami fading channel
assuming perfect channel
nakagami fading m
channel estimation and
average ber degradation
estimation and negligible
spectral efficiency regions
adaptation is the
power truncated channel
nakagami fading channels
different adaption policies
flat fading channel
negligible time delay
nakagami fading parameter
power continuous rate
bit rate regions

corpus/krapavin2000-test/609902.txt
learning
hypotheses
classes
asks
showing
proceeds
choosing
learning algorithm
concept class
noise model
malicious noise
target function
class c
nasty sample
rate j
binomial distribution
class h
nasty classification
pac learning
pac model
instance space
accuracy ffl
m examples
nasty adversary
composition theorem
noise rate
concept classes
symmetric differences
probability j
distributed according
sample points
trivial class
trivial concept
consistency algorithm
learning algorithms
m points
positive result
agnostic learning
original sample
x according
accuracy parameter
function h
lower bound
sample complexity
vapnik chervonenkis
function c
result showing
adversary chooses
probability distribution
efficient learning
e points
smaller sub
confidence parameter
probability at least
nasty sample noise
distribution with parameters
number of examples
learning in the
random classification noise
classification noise model
malicious noise model
nasty classification noise
learning from noisy
learning with nasty
distributed according to
probability distribution d
trivial concept class
according to the
bad sub intervals
variable distributed by
better than 2j
learning algorithm sees
target function c
nasty noise model
efficient learning algorithms
learning algorithm has
function c t
sample points that
random variable distributed
set of points

corpus/krapavin2000-test/610812.txt
solids
predicates
modelling
modeling
turing
sequences
situations
solid domain
partial solids
domain theory
boolean operators
solid modeling
recursive analysis
r e
rational numbers
countable basis
regular sets
continuous domain
boundary representation
real numbers
theoretic approach
continuous membership
compact subsets
basis elements
maximal elements
real number
computational geometry
rational interval
rigid solids
open set
computable sequence
machine model
continuous domains
computable function
cad situations
reverse inclusion
scott topology
observable properties
solid modelling
partial order
mathematical model
recursive function
mathematical theory
real solids
correct algorithms
unreliable programs
representation modelling
increasing chain
actual robust
effective limit
rational interval disks
theoretic approach to
continuous membership predicates
actual robust algorithms
domain theory used
solid domain s
regular sets and
basis elements which
real ram machine
continuous membership predicate
general purpose computer

corpus/krapavin2000-test/610819.txt
embedding
sequences
turing
machines
outputs
representations
names
composing
coding
encoding
gray code
signed digit
digit representation
work tapes
real numbers
code expansion
indeterministic multihead
code embedding
multihead type
real number
computability notion
usual binary
computational paths
binary expansion
embedding g
dyadic number
topological embedding
valid results
applicable rule
remaining bits
open interval
output sequences
partial function
real functions
number x
code computability
whole real
innite sequence
rational interval
many names
one induced
real line
basic algorithms
functional language
real function
computable function
function f
topological properties
signed digit representation
gray code expansion
gray code embedding
indeterministic multihead type
unit open interval
gray code and
open interval i
produce valid results
gray code computability
usual binary code
functional language haskell
based on gray
whole real line
innitely many names
2 machine which
one induced by
section 7 and
real number x
exact real arithmetic
computable function f
induced by the
7 and 8
good approximation information
embedding g is

corpus/krapavin2000-test/611399.txt
string
matching
patterns
pieces
partitioning
errors
searching
matches
subpatterns
filtering
searches
counting
substring
filters
letters
string matching
approximate string
exact partitioning
computer word
hierarchical verification
single pattern
superimposed automata
multipattern search
r patterns
error level
pattern partitioning
english text
text position
text searching
exact searching
many patterns
text character
automaton partitioning
error levels
exact search
multiple approximate
plain verification
jc errors
k errors
multiple patterns
dynamic programming
approximate pattern
short patterns
superimposed automaton
allowing errors
approximate searching
computer words
zero errors
matching algorithms
filtering algorithms
length m
pattern length
pattern matches
complete match
o m
single search
search algorithms
text depending
active states
efficient string
diagonal arrows
multipattern exact
pattern matching
classical algorithm
longer patterns
character c
approximate string matching
number of patterns
new text character
multipattern search algorithms
bk jc errors
multiple approximate string
hierarchical piece verification
search r patterns
string matching algorithms
approximate pattern matching
character t j
single pattern algorithm
number of errors
string matching a
100 on english
english text depending
bit parallel algorithms
efficient string matching
error level ff
dynamic programming and
less than 50
based on dynamic
single pattern version

corpus/krapavin2000-test/611411.txt
proxies
urls
requests
cache
movements
caching
files
clients
servers
accesses
contents
requesting
prefetching
operating
interleaving
os
storing
writing
workloads
improvements
ping
locations
locality buffers
web proxies
web proxy
read requests
file system
read operations
per second
file systems
disk head
head movements
proxy server
write operations
storage management
web server
figure plots
url requests
conscious storage
disk space
free space
secondary storage
file creation
disk cache
main memory
get requests
write requests
file management
busy web
traditional proxies
space management
single file
operating system
read operation
performance improvements
end user
url request
proxy performance
webcosm techniques
origin web
disk locations
traditional web
delete operations
read request
separate file
web documents
wide web
experimental evaluation
significant performance
local copy
single disk
disk block
structured file systems
web conscious storage
disk head movements
conscious storage management
operations per second
able to serve
second level cache
stores all urls
origin web server
read operations will
file management overhead
traditional web proxies
world wide web
simulation and experimental
secondary storage management
long head movements
previous read request
busy web proxy
like file systems
study the overheads
file system operations
nearby disk locations
utilization lazy reads
largest source of
sequential write operations
file creation and
storage management techniques
store all urls
set of techniques
structured file system

corpus/krapavin2000-test/611413.txt
probes
measurements
distributions
dynamics
estimates
queueing
queuing
probabilities
diagnosing
monitoring
violations
comprising
characteristics
routing
ns
networks
multicast tree
delay distribution
delay c
average delay
delay distributions
d f
cumulative density
link delay
cumulative delay
end measurements
logical multicast
end delay
inferred distributions
spatial correlation
multicast traffic
f k
network elements
packet delay
model simulation
based inference
leaf delays
vertical deviation
actual distributions
inferred values
median minimum
internal delay
confidence intervals
delay measurements
statistical properties
measured end
multicast probes
internal approach
interior links
delay model
function delay ms
cumulative density function
logical multicast tree
delay distribution estimator
number of probes
per link delays
based inference of
average delay ms
absolute vertical deviation
delay distributions and
multicast traffic is
cumulative delay distributions
tcp udp simulations
different bin sizes
network internal delay
packet delay and
d f s

corpus/krapavin2000-test/611430.txt
skeletons
operators
images
ups
scheduling
exploiting
surrounding
coding
erators
image processing
task parallel
baseline stereo
point operators
task parallelism
global operators
processing operators
stereo vision
level image
image operators
parallel approach
neighborhood operators
parallel framework
algorithmic skeletons
parallel image
application task
vision application
using skeletons
task graph
mixed task
image application
processing application
input images
parallel programming
image operator
host processor
processing user
distributed memory
processing environment
processing operator
neighborhood operator
computer imaging
operations function
dierent image
execution time
parallel environment
parallel tasks
processing applications
sequential code
image point
parallel code
monadic operations
processing library
adding data
data and task
task and data
baseline stereo vision
low level image
image processing operators
level image processing
application task graph
stereo vision application
parallel image processing
mixed task and
image processing application
task parallel framework
image application task
data parallel approach
image processing user
image processing environment
dyadic point operators
task parallel environment
image processing operator
level image operators
monadic point operators
distributed memory system
image processing applications
exploiting mixed task
monadic dyadic point
using skeletons and
c using mpi
executing taskb processors
therefore using only
image operations function
data parallelism has
large computational problems
processed image master
dyadic image operators
ram running linux
monadic image operations

corpus/krapavin2000-test/611436.txt
lis
coding
trees
lists
neighbouring
rates
computers
partitioning
wavelet transform
spiht algorithm
renement step
single pe
video data
list entries
direct ospring
overall coding
sequential algorithm
approximation sub
hierarchical trees
set partitioning
parallel algorithm
data distribution
tree coding
transform algorithms
spiht parallelisation
mimd computers
video compression
transformed data
d algorithms
o p
image compression
coding algorithm
oriented coe
direct parallelisation
driven parallelisation
distributed lists
competitive approaches
mimd architectures
neighbouring pes
tree roots
zerotree coding
parallel wavelet transform
partitioning in hierarchical
lip lsp bs
insignicant coe cients
set partitioning in
local coe cients
zero tree coding
wavelet transform algorithms
bit stream bs
decomposition overall spiht
wavelet coe cients
spacially oriented coe
sequential code parts
video coder using
direct spiht parallelisation
overall coding figure
child coe cients
tree coding algorithm
zero tree roots
overall coding b

corpus/krapavin2000-test/611451.txt
pseudospectrum
pseudospectra
contours
contour
curves
evaluations
bekas
gallopoulos
approximating
eigenvalues
lying
dening
regarding
neighboring
noting
path following
disconnected components
consecutive points
initial curve
single sweep
n points
singular vectors
block partitioning
single newton
points dening
minimum singular
boundary curve
parallel nature
single boundary
complex plane
matrix toolbox
e points
compute points
test matrix
singular value
original curve
pseudospectrum contours
y psdm
corrected towards
boundary curves
original path
triplet evaluation
points computed by
computed by psdm
computation of pseudospectra
static cyclic partitioning
static block partitioning
pseudospectrum descent method
single newton step
capture disconnected components
single boundary curve
test matrix toolbox
directional newton methods
partitioning time secs
disconnected components of
path following method
p e points
original path following
psdm can be

corpus/krapavin2000-test/611453.txt
residuals
recurrences
res
coecients
eigenvalues
polynomials
updating
als
chebyshev iteration
computed residuals
ultimate accuracy
term recurrences
r n
chebyshev polynomials
recurrence coecients
order richardson
true residuals
real axis
krylov space
line segment
term chebyshev
residual chebyshev
richardson iteration
term recursions
term recursion
absolute value
conjugate gradient
iterative methods
elliptic domain
local errors
second order
residual gap
local error
normal matrices
space methods
linear systems
achievable accuracy
space solvers
iteration using
asymptotic convergence
recursions iteration
whose foci
elliptical domain
assume iterates
whose eigenvalues
explicitly computed residuals
second order richardson
recursively computed residuals
order richardson iteration
w rec res
term chebyshev iteration
chebyshev iteration using
krylov space methods
true residual chebyshev
w expl res
normalized residual norms
true residual fig
rec residual chebyshev
recursively computed residual
krylov space solvers
methods based on
term recursions iteration
residual r n
elliptical domain e
ultimately achievable accuracy

corpus/krapavin2000-test/613633.txt
dns
urls
hfns
naming
resources
names
rds
resolving
services
mapping
contacting
storing
location service
web resources
lookup operations
forwarding pointers
name space
name servers
name resolution
urn mapping
url mapping
name system
hfn resolution
geographical area
mobile resources
resource records
uniform resource
replicated web
resolution process
url resolution
naming system
named resource
popular web
hierarchical name
identify resources
scalability problem
resource model
existing dns
globe location
multiple urls
resolution service
resolution mechanism
using dns
access information
update operations
single urn
domain name system
set of urls
large geographical area
distributed over a
hierarchical name space
common name resolution
replicated web resources
name system dns
globe location service
highly mobile resources
popular web resources
number of resources
retrieve web resources
replicated web pages
name web resources
url resolution mechanism
uniform resource identifiers
resources when possible
lookup operation finds
international doi foundation

corpus/krapavin2000-test/613982.txt
messages
benchmarks
passing
processors
supercomputing
designers
assessing
ps
running
communication subsystem
parallel applications
performance switch
new switch
point communication
message passing
high performance
point communications
sp2 communication
native version
execution times
average values
collective operations
new version
parallel benchmarks
parallel computer
obtained running
grain parallel
interconnection network
running parallel
execution time
fine grain
message interface
numeric applications
communication tests
passing networks
software elements
acknowledgements section
parallel application
several mpi
communication software
directional ports
current mpps
latency and throughput
high performance switch
throughput mb s
sp2 communication subsystem
grain parallel applications
results obtained running
mpi collective operations
message passing networks
implicit finite difference
running parallel applications
message passing software
message passing paradigm
large data structures
run parallel applications

corpus/krapavin2000-test/614294.txt
wavelets
visualization
features
coding
faces
images
filters
scaling
graphics
rendering
morphing
decompositions
range data
gabor wavelets
gabor function
laser range
gabor functions
r g
feature vector
texture data
fourier transform
image function
visualization pipeline
topological mapping
data sets
component analysis
based visualization
texture information
feature vectors
m h
gabor decomposition
multidimensional feature
human faces
range images
convolution products
color space
similar colors
computer graphics
color information
multidimensional data
g l
scientific visualization
spatial frequencies
face features
face data
similar functions
compact coding
signal analysis
2d image
frequency domain
data analysis
volume rendering
similar features
gabor filters
important data
surface point
feature extraction
local data
straightforward way
initial data
neural network
wavelet transform
data using
laser range data
principal component analysis
based visualization pipeline
2d image function
important data features
range data using
depicted in fig
cylindrical coordinate system
complex data sets
primarily applied to
multidimensional feature space
data from human
topological mapping neural
multidimensional feature vector
cluster analysis and
multidimensional face features
way to perfectly

corpus/krapavin2000-test/614303.txt
vortices
tubes
skeletons
isosurfaces
visualizing
graphics
stretching
fields
varying
frames
streamlines
dynamics
surfaces
hundreds
vortex core
vortex tubes
vorticity lines
vortex cores
vortex skeletons
low pressure
vorticity vector
corrector scheme
data reduction
time varying
shear flow
vorticity line
vortical structures
numerical simulation
flow data
cambridge university
fourier series
radius function
flow quantities
corrector phase
hairpin vortex
corrector technique
time step
turbulent flow
flow fields
large vorticity
integral curves
channel flow
integral curve
turbulent channel
vortex head
boundary layer
vortex stretching
3d grid
computational domain
time steps
volumetric data
turbulent boundary
boundary layers
locate vortices
vortical flow
skeletal representation
vortical motion
hairpin vortices
visualization system
identification schemes
fourier representation
quadrilateral mesh
dimensional flow
corrector algorithm
predictor corrector technique
turbulent channel flow
circular cross sections
reconstructed vortex tubes
predictor corrector algorithm
time varying data
machiraju david thompson
visualize vortical structures
point vorticity lines
low intensity region
predictor corrector skeleton

corpus/krapavin2000-test/614304.txt
quaternions
frames
curves
streamlines
fields
vanishing
visualizing
visualization
moving
surfaces
similarities
assigning
orientations
lying
entations
distinguishing
parallel transport
quaternion frame
frame components
space curves
quaternion field
moving frame
quaternion space
3d space
differential geometry
unit quaternions
euclidean space
scalar fields
streamline data
quaternion fields
3d rotations
vector quaternion
quaternion representation
3d rotation
curvature vanishes
initial frame
stream surfaces
unit quaternion
non vanishing
dimensional euclidean
normal vector
independent degrees
identical curves
frame coordinates
visualization methods
single curves
parallel transport frame
3d space curve
quaternion frenet frames
quaternion frame is
quaternion parallel transport
dimensional euclidean space
quaternion frame coordinates
torsion scalar fields
quaternion frenet frame
field that is
non vanishing curvature
euclidean space picture
pathological curve segment
space color scales
4d quaternion space

corpus/krapavin2000-test/614306.txt
animations
faces
visualization
debugging
graphics
objects
editing
animating
creating
geometers
users
documents
facilitates
sorting
dimensions
style file
algorithm animation
animation system
atomic unit
atomic units
geometric algorithms
ayellet tal
naive programmer
advanced programmer
computational geometry
geometric objects
conceptual model
advanced programmers
visual aspects
new faces
visual debugging
gasp supports
geometric algorithm
animation systems
combinatorial objects
ascii data
naive programmers
classroom proceedings
ascii style
enables others
level starting
c code
computer graphics
algorithm animation system
computational geometry p
dimensional geometric objects
others to use
enables others to
electronic classroom proceedings
system that enables
animation can be
possible to create
would like to
highly complex geometric
use inventor s
initial line segments

corpus/krapavin2000-test/614325.txt
solids
primitives
deformations
surfaces
physics
preserving
modeling
constraints
workstations
gineering
objects
control points
control point
form solids
point configuration
volume preservation
continuity constraints
olume p
linear constraints
tensor product
geometric modeling
deformation energy
desired volume
point manipulation
whose components
basis functions
ezier basis
preservation algorithm
volume preserving
computer animation
ezier solids
industrial design
point constraints
direct manipulation
displacement constraints
form deformations
surface design
object design
partial derivatives
physical properties
mathematical notations
constrained deformations
interactive setting
product solids
several tensor
current workstations
local coordinates
mathematical problem
solid models
ezier volumes
free form solids
control point configuration
tensor product b
control point manipulation
volume preservation algorithm
constrained minimization problem
point displacement constraints
control points configurations
free form objects
free form deformations
industrial design and
animation industrial design
usual geometric primitives
high order continuity
practical order combination
order continuity constraints
design and mechanical
nw linear equations
free form volume
tensor product solids
probabilistic point constraints
several tensor product

corpus/krapavin2000-test/614330.txt
grids
isosurfaces
graphics
sweeping
marching
vis
fields
isosurface extraction
span space
active list
unstructured grids
computer graphics
o n
sweeping simplices
optimal isosurface
data sets
extraction algorithm
maximum values
geometric space
structured grids
marching cubes
isosurface intersects
log n
fast triangulation
worst case
neighborhood search
minimum value
extrema graphs
structured grid
isosurface generation
large data
span filter
lake city
memory requirement
ray tracing
extraction proceedings
n log
algorithm using
previous isovalue
search phase
maximum value
number of cells
optimal isosurface extraction
isosurface extraction algorithm
near optimal isosurface
extraction algorithm using
san francisco california
algorithm using the
wilhelms and gelder
n log n
time varying fields
salt lake city
isosurface extraction proceedings
geometric space g
isosurface extraction methods
large data sets
interactive ray tracing

corpus/krapavin2000-test/614335.txt
particles
tracing
visualization
flows
grids
processors
lines
gigabytes
shedding
traces
injecting
decomposition
oscillating
moving
streak lines
particle tracing
point location
natural coordinates
velocity interpolation
physical space
time steps
computational space
tetrahedral method
frame rates
particle traces
streak line
particle path
virtual windtunnel
tetrahedral decomposition
curvilinear grids
tracing algorithm
simulation time
important flow
physical coordinates
tracing algorithms
tetrahedral decompositions
cell search
time step
hexahedral cell
steady flows
data sets
delta wing
numerical integration
path line
temporal interpolation
step doubling
space tracing
line injectors
vortex shedding
curvilinear grid
interactive frame
interactive performance
velocity vector
dependent particle
jacobian matrices
current position
interactive computation
studying unsteady
tetrahedral elements
batch computations
streak lines and
particle tracing algorithms
simulation time steps
particle tracing algorithm
even tetrahedral decompositions
number of particles
point location and
multi zone data
conditional test tetrahedron
unsteady particle tracing
interactive streak lines
streak line injectors
dependent particle tracing
interactive frame rates
time dependent particle
expensive for interactive
important flow features
space particle tracing
physical space tracing
physical space particle
capture these features
particle tracing was

corpus/krapavin2000-test/614347.txt
rendering
casting
images
photographs
graphics
flying
viewing
terrains
textures
objects
rendering algorithm
frame generation
ray casting
ray coherence
multiresolution traversal
realistic images
hierarchical traversal
pitch angle
flight simulation
power visualization
based objects
post rendering
parallel machine
3d objects
visualization system
computer graphics
geometric pipeline
target area
discrete ray
ray tracing
ray emanating
main memory
lower resolution
image pixels
image space
see figure
realistic impression
realistic rendering
real time performance
images generated by
ibm power visualization
post rendering processor
shared memory architecture
real time photo
discrete ray casting
accelerated by ray
different viewing directions
innovative rendering algorithm
purpose parallel architecture
powerful parallel machine
real time rates

corpus/krapavin2000-test/614361.txt
deformations
skeletons
surfaces
blending
forces
substances
collisions
animating
particles
bodies
characters
colliding
graphics
modeling
coating
contributions
deforming
objects
detailing
ects
defining
ers
implicit layer
implicit surfaces
collision detection
implicit surface
base structure
contact surface
sample points
field function
exact contact
field functions
contact surfaces
volume variations
field contributions
deformable models
applied forces
contact modeling
response forces
particle system
volume preservation
skeleton territories
soft substances
constant volume
unwanted blending
soft substance
collision processing
relative motion
smooth surface
elastic behavior
articulated skeletons
deformable bodies
processing collisions
implicit formulation
inelastic substances
controlled blending
time step
deformable objects
local coordinate
colliding bodies
implicit flesh
erent skeletons
friction forces
simplified characters
precise contact
articulated structure
computer graphics
f p
adaptive sampling
using implicit
deformable model
exact contact surfaces
articulated skeletons coated
soft inelastic substances
skeletons coated with
physically based model
collision detection and
modeling soft inelastic
changes such as
coated with implicit
along contact surfaces
precise contact modeling
cient collision detection
using implicit surfaces
capable of separation
hong qin haptics
generate exact contact
soft object model
may separate into
local sti ness
exact contact modeling
moves and deforms
deformations generated by
local volume variations
precise collision detection

corpus/krapavin2000-test/614370.txt
rendering
casting
grids
cells
visualization
sorting
wing
meshes
sweeping
graphics
lighting
ordering
shooting
complexes
polygons
preprocessing
faces
maintaining
splatting
sweep plane
ray casting
irregular grids
volume rendering
critical vertices
blunt fin
active edge
active edges
depth ordering
regular grid
event points
plane hits
boundary vertices
sweep algorithm
direct volume
casting algorithm
visibility ordering
curvilinear grids
status data
time o
priority queue
tetrahedral cells
topological information
data structures
projection methods
current scanline
disconnected grids
irregular grid
event point
lsrc algorithm
current sweep
cell complexes
connected components
ray shooting
delta wing
connectivity information
lower bound
topmost vertex
sweep ray casting
lazy sweep ray
sweep plane hits
rendering irregular grids
ray casting algorithm
direct volume rendering
status data structure
sweep status data
algorithm for rendering
exploit spatial coherence
sweep plane encounters
transformation and sorting
delta wing combustion
ray casting problem
o n vertices
post delta wing
rendering of irregular
dimensional ray casting

corpus/krapavin2000-test/614371.txt
cells
datasets
intervals
marching
vertices
normals
grids
isosurfaces
gradients
pyramids
trees
adopting
addressing
fitting
exploiting
triangles
interval tree
isosurface extraction
active cells
local coherence
unstructured datasets
isovalue q
structured datasets
span space
interval trees
marching cubes
board approach
cell selection
tree data
hash table
cell classification
unstructured grids
active intervals
based methods
volume data
active cell
isosurface vertices
global coherence
value q
auxiliary structures
cell oe
search structure
active edges
auxiliary data
memory requirements
tetrahedral cells
normal computations
conceptual organization
extraction process
time varying
regular dataset
active edge
interval tree data
case of unstructured
number of cells
structured and unstructured
active white cells
tree data structure
exploit local coherence
coherence between isosurfaces
auxiliary data structure
time varying fields
new conceptual organization
given an isovalue

corpus/krapavin2000-test/614386.txt
multiresolution
rendering
warping
datasets
visualization
simplification
meshes
vertices
multires
accuracies
subsampling
graphics
isosurfaces
surfaces
representations
adopting
levels
discontinuities
supports
multiresolution model
data simplification
curvilinear datasets
tetrahedral mesh
volume data
hybrid rendering
irregular datasets
convex curvilinear
volume rendering
tetrahedral meshes
convex datasets
direct volume
delaunay tetrahedrization
computational domain
refinement algorithm
transfer function
approximated hybrid
multiresolution extractor
volume visualization
regular datasets
multiresolution models
full resolution
lod representation
progressive rendering
multiresolution visualization
physical space
hexahedral mesh
multiresolution data
multiresolution representation
visualization system
dimensional case
boundary vertex
different resolutions
initial mesh
computational space
physical domain
isosurface rendering
maximum warping
multiresolution rendering
direct volume rendering
convex irregular datasets
approximated hybrid rendering
volume visualization system
convex curvilinear datasets
tetrahedral mesh sigma
standard surface graphics
based on refinement
multiresolution data structure
based on data
visualization of volume

corpus/krapavin2000-test/614387.txt
streamlines
visualization
megabytes
fetching
preprocessing
graphics
meshes
millions
paging
calculations
workstations
tracing
neighboring
partitioning
scheduling
files
calculating
operating
storing
visualizing
searching
sharing
bytes
octant size
memory space
streamline construction
main memory
streamline visualization
local disk
tetrahedral cells
test results
virtual memory
streamline objects
data sets
average cost
large unstructured
coordinate transformation
memory management
interactive streamline
constructing streamlines
core algorithm
management policy
disk files
memory blocks
preprocessing step
data visualization
streamline calculations
octant fetching
transformation functions
disk space
interactive visualization
unstructured grids
core rendering
core streamline
computer graphics
tetrahedral meshes
operating system
large data
unstructured grid
interpolation functions
octant containing
octree structure
streamline scheduling
visualization calculations
grid data
maximum octant size
memory management policy
millions of tetrahedral
neighboring cell indices
ieee computer graphics
computer graphics and
unstructured grid data
achieve interactive visualization
data sets on
cost and overhead
interactive streamline visualization
coordinate transformation functions
coordinate transformation function
unstructured tetrahedral meshes
core streamline visualization

corpus/krapavin2000-test/614396.txt
scattering
visualization
wing
visualizing
fields
streamlines
filtering
textures
simulations
vis
ames
subdividing
regions
ring
varying
patterns
snapshots
value scattering
integral convolution
scattering scheme
computational time
input texture
accurate value
flow fields
pass filtering
uflic algorithm
physical time
lic method
convolution algorithm
integration step
time step
new convolution
image value
flow data
pass filter
delta wing
temporal coherence
pixel values
flow texture
convolution results
flow lines
value gathering
vector fields
time steps
new algorithm
visualizing unsteady
vector data
vector field
convolution values
forward process
texture space
time varying
case studies
flow features
steady flow
n th
parallel algorithm
velocity magnitude
flow patterns
lic convolution
instantaneous method
flow traces
flow line
several cfd
previous convolution
vortex bursting
line integral convolution
value scattering scheme
accurate value scattering
unsteady flow fields
unsteady flow data
current computational time
new convolution algorithm
value scattering convolution
integral convolution method
pass filtering process
computational time step
scattering scheme to
jobard gordon erlebacher
flow data sets
computational time steps
data in unsteady
integral convolution algorithm
algorithm for visualizing
visualizing unsteady flow
ames research center
nasa ames research
new convolution method

corpus/krapavin2000-test/614405.txt
patches
surfaces
faces
vertices
forces
meshes
shapes
physics
fitting
graphics
degrees
modeling
visualization
splines
schemes
governing
interpolating
limit surface
initial mesh
bicubic patches
clark subdivision
subdivision surfaces
arbitrary topology
subdivision surface
local subdivision
extraordinary points
subdivision scheme
extraordinary point
control mesh
bicubic b
surface model
dynamic model
extraordinary vertex
dynamic subdivision
control vertices
smooth surface
recursive subdivision
subdivision rules
control points
deformable models
subdivision schemes
shape recovery
spline surfaces
extraordinary vertices
bicubic patch
dynamic catmull
geometric modeling
data points
spline patches
bicubic surface
mass damping
subdivision algorithm
subdivision steps
rectangular control
control point
f f
finite element
shape design
vertex positions
spline patch
potential energy
butterfly subdivision
recover shapes
dynamic surface
model deforms
near extraordinary
arbitrary genus
global subdivision
generalized coordinates
analytic formulation
computer graphics
finite elements
dynamic nurbs
spline surface
geometric shapes
volume data
based deformable
catmull clark subdivision
bicubic b spline
clark subdivision surfaces
dynamic subdivision surface
new dynamic model
subdivision surface model
dynamic catmull clark
clark subdivision surface
clark subdivision scheme
using very few
bicubic surface patch
local subdivision mesh
control vertex positions
new dynamic surface
limit surface s
near extraordinary points
generated b spline
sets using very
volume data sets
freedom control vertices
dynamic surface model
graphics and visualization
data sets using
new face points
shape representation using
clark subdivision rules

corpus/krapavin2000-test/614463.txt
accessibility
planning
directions
machining
graphics
surfaces
measuring
shading
rendering
chines
reasoning
placing
coordinates
accessibility analysis
obstacle x
second component
coordinate measuring
global accessibility
direction cones
dimensional inspection
solid model
accessibility cone
cubic map
direction cone
accessible directions
probe abstractions
measuring machines
probe abstraction
inspection planning
measuring machine
computer graphics
setup planning
setup orientations
clipping planes
automatic inspection
mechanical part
spherical surface
minkowski operations
penetrate x
accessible direction
bent probes
mechanical parts
spatial reasoning
global accessibility cone
coordinate measuring machine
coordinate measuring machines
first component accessibility

corpus/krapavin2000-test/614468.txt
shadows
textures
relighting
lighting
photographs
lights
rendering
scenes
images
sources
intensities
casting
objects
graphics
preprocessing
environments
modifications
publications
effects
convincing
tracing
real scene
virtual objects
virtual light
common illumination
virtual object
light source
light sources
unoccluded illumination
hierarchical radiosity
correction factor
real light
shadow boundaries
radiosity solution
augmented reality
real shadows
radiosity system
real objects
radiance images
patch hierarchy
illumination effects
real scenes
global illumination
illumination textures
virtual lights
original texture
form factor
bi di
display correction
lighting conditions
form factors
real lights
visibility information
heuristic correction
using radiance
interactive relighting
additional irradiance
light intensities
current radiosity
virtual source
illumination tex
virtual sources
video sequences
real world
interactive modification
scene using
geometric model
computer graphics
different lighting
ray casting
3d model
illumination texture
shadow calculations
light exchanges
dynamic object
source intensities
original illumination
real and virtual
virtual light source
unoccluded illumination textures
display correction factor
common illumination effects
real light sources
virtual light sources
real scene using
unoccluded illumination tex
effects such as
real world textures
textures extracted from
fr publications loscos
hierarchical radiosity system
new reflectance values
quicktime video sequences
dynamic virtual object
unoccluded illumination texture
imag fr publications
original real scene
different lighting conditions

corpus/krapavin2000-test/615161.txt
locks
locking
subtransactions
modes
granules
dbms
hierarchies
children
transactions
sibling
rules
trans
relationships
aborting
objects
protocols
chies
operating
nested transactions
downward inheritance
concurrency control
x lock
controlled downward
locking rules
object hierarchy
retained locks
deadlock detection
transaction parallelism
transaction hierarchy
upward inheritance
level transactions
nested transaction
parent transaction
transaction tree
object hierarchies
transaction holds
x locks
level transaction
trans action
transaction model
locking protocols
level concurrency
hierarchical locking
mode conflicting
transaction hierarchies
lock granules
lockable units
transaction management
among transactions
controlled downward inheritance
inheritance of locks
intra transaction parallelism
single level transactions
retained lock relationships
level concurrency control
x h s
concurrency control scheme
basic locking rules
nested transactions for
top level transaction
locking rules for

corpus/krapavin2000-test/618430.txt
muscles
ellipsoids
bones
stuffing
joints
animals
anatomy
deformations
individuals
species
animations
underlying
humans
graphics
wilhelms
grasping
marching
neighboring
drawing
modeling
images
connections
skin points
skin point
underlying components
skin mesh
polygonal skin
body parts
underlying parts
rest geometry
soft tissue
animal models
individual muscles
local coordinate
rest state
local segment
underlying anatomy
skin model
longitudinal axis
local ellipsoid
axis vector
anchor points
finite element
texture mapping
greater realism
physiological principles
different individuals
simulated muscles
joint motion
remarkable similarity
body deformations
animal model
interactive speeds
flexible skin
individual bones
jurassic park
skin points and
neighboring skin points
attached to underlying
influence of neighboring
images and animations
local segment frames
local ellipsoid coordinate
polygonal skin model
many animal models
anchor ellipsoid section
underlying components and
different individuals and
comfortable interactive speeds
animal coordinate system
research provides a
state geometry bones
local coordinate systems

corpus/krapavin2000-test/620236.txt
scheduling
deadlines
tasks
multiprocessing
multiprocessor
resources
anomalies
overloads
blocking
processors
minimizing
metrics
designers
implications
cessors
timing
constraints
multitasking
loads
ting
time systems
precedence constraints
maximum lateness
shared resources
scheduling algorithm
scheduling problem
scheduling theory
static scheduling
release times
multiprocessor scheduling
line scheduling
time scheduling
dynamic scheduling
classical scheduling
general precedence
time tasks
deadline scheduling
earliest deadline
scheduling results
computation time
scheduling problems
schedule length
periodic tasks
monotonic algorithm
scheduling algorithms
optimal schedule
critical section
partial order
overload conditions
precedence relations
single deadline
future release
start times
computation times
resource constraints
run time
completion times
edf scheduling
bin packing
classical results
multiprocessing anomalies
preemptive multiprocessing
worst case
execution time
optimal algorithms
arrival times
static schedule
periodic processes
monotonic scheduling
real time systems
real time scheduling
classical scheduling theory
multiprocessor scheduling problem
set of tasks
earliest deadline scheduling
real time tasks
future release times
scheduling theory results
scheduling algorithm can
line scheduling algorithm
unit computation time
polynomial and np
static scheduling algorithm
general precedence constraints
time systems designer
boundary between polynomial
general precedence relation
scheduling results for
rate monotonic algorithm
arbitrary partial order
rate monotonic scheduling
real time system
many real time
number of processors
real time computing
real time control
versus dynamic scheduling
tasks have deadlines
arbitrary release times
deterministic static scheduling
important classical scheduling

corpus/krapavin2000-test/623900.txt
messages
workstations
multiprocessors
clusters
latencies
communication
interfaces
operating
receiving
bandwidths
sending
scheduling
multiproces
primitives
networks
networking
collections
machines
sors
measurements
active messages
flow control
network interface
atm networks
atm network
active message
remote memory
network interfaces
address translation
communication architectures
operating system
shared memory
communication patterns
process scheduling
messages communication
communication architecture
reliable delivery
parallel applications
art multiprocessors
remote reads
larger window
communication layer
communication layers
message data
system software
memory access
parallel computing
technical point
communication performance
operating systems
continuous spectrum
multiprocessor networks
standard components
interface access
programming models
high performance
clusters of workstations
active messages communication
remote reads and
reads and writes
network interface access
sparcstation active messages
parallel computing setting
remote memory accesses
cluster of workstations
new communication architectures
messages on multiprocessors
transferred directly between
write system calls
write entry points

corpus/krapavin2000-test/623929.txt
sorting
optics
emitting
reordering
photonics
devices
arrays
interconnects
switching
string
communications
interfering
items
ascending
sorted output
rank vector
smart pixel
cylindrical lens
optical implementation
optical system
data elements
smart pixels
optical sorting
deformable mirror
surface emitting
sorting algorithm
sorted data
column addressing
sorting system
sorting systems
parallel sorting
light modulators
actual subtraction
constant time
electrical inputs
physical reordering
electronic sorting
selected elements
fundamental operation
sorting networks
time parallel
massive parallelism
parallel sorting algorithm
optical sorting system
non unique ranks
data elements in
physically reordering the
surface emitting laser
data elements to
angular beam deflection
spatial light modulators
time parallel sorting
n data elements
electronic sorting systems
optical sorting systems
non unique numbers
sorting is a
sorting algorithm and
algorithm and its
elements to be
number of data
cylindrical lens elements
properties of optics
fundamental operation that
using currently available

corpus/krapavin2000-test/624159.txt
messages
packets
interfaces
multiprogramming
resources
protocols
receiving
sending
overruns
microbenchmarks
scheduling
layers
communication
mechanisms
backing
workstations
benchmarks
networks
virtualizing
multiplexing
latencies
clusters
virtual networks
active message
virtual network
network interface
message delivery
network interfaces
reliable message
timer management
outstanding messages
flow control
active messages
endpoint scheduling
medium messages
error model
virtual memory
transport protocols
resident endpoints
logical channels
medium message
ii api
nic transport
active endpoints
retransmission mechanisms
trip times
receive queue
buffer overruns
communication layers
address space
communication system
network management
cluster interconnect
interface memory
message staging
communication resources
trip time
packet retransmissions
fast communication
network system
automatic network
general purpose
transport protocol
error handling
short messages
error models
unrelated applications
outstanding requests
reliable message delivery
client message rates
nic transport protocols
virtual interface architecture
average per client
single virtual network
round trip times
message delivery and
nic flow control
active message system
message rate msgs
medium message staging
high performance communication
direct network access
channel management tables
virtual memory regions
unduplicated message delivery
server message rates
network management daemons
support automatic network
sun ultrasparc workstations
management reliable message
workstations interconnected with
virtual network segment
interface architecture proceedings
topology acquisition and
california state micro
ultrasparc workstations interconnected
using medium messages
short message rates
bandwidth mb s
message staging areas

corpus/krapavin2000-test/624870.txt
hiding
classes
coupling
wirfs
obeying
languages
assuring
objects
acquaintance class
acquaintance classes
demeter system
class c
instance variables
strict version
good style
method m
class b
class dictionary
class referencesec
oriented software
oriented program
oriented programming
supplier classes
supplier class
bad style
object version
information hiding
oriented systems
oriented design
class definitions
information restriction
minimization version
class bookidentifier
rulename parsedetails
software engineering
class hierarchy
rule parsedetails
reference section
supplier objects
immediate parts
supplier object
oriented programs
variable class
object oriented program
object oriented programming
object oriented software
lookup rulename parsedetails
none implements interface
number of arguments
instance variable class
void grammar parse
aspect oriented software
number of methods
defmethod rule parsedetails
encodes the ideas
lookupparse rulename defmethod

corpus/krapavin2000-test/624907.txt
decisions
interleaving
specifications
documenting
languages
understanding
abstractions
activities
computations
decomposing
design decisions
design information
reverse engineering
design decision
software engineering
software maintenance
delocalized plans
programming languages
programming language
program development
software reuse
maintenance programmer
interrelated decisions
reuse activities
assignment statements
programming constructs
information hiding
several approaches
software engineering notes
reverse engineering and
design information to
program transformation approaches

corpus/krapavin2000-test/626675.txt
sequencing
instructions
branches
slots
mcfarling
mips
processors
ps
interrupts
pipelining
buffers
illinois
branching
exceptions
executing
aeronautics
programs
architectures
inserting
target insertion
inline target
sequencing pipeline
instruction sequencing
instruction fetch
likely branch
likely branches
original address
code expansion
insertion slots
instruction issue
predicted successors
multiple instruction
branch prediction
branch target
branch slots
sequencing efficiency
instruction sequence
delay slots
branch instructions
pipelined processors
code restructuring
predicted branch
sequential instruction
exception return
subsequent instructions
target buffers
delayed branches
pipeline implementation
next sequential
deep pipelining
hardware methods
delayed branching
sequential locations
dynamic instructions
dynamic instruction
prediction accuracy
c compiler
predicted successor
fetch pipeline
branch delay
branch instruction
compiler implementation
instruction execution
target instruction
freeze cycles
time branch
expansion control
branch redirects
profile information
inline target insertion
multiple instruction issue
instruction sequencing efficiency
incorrectly predicted branch
branch target buffers
mcfarling and hennessy
instructions to be
pipelining and multiple
order execution machines
deep pipelining and
number of slots
sequential instruction fetch
instruction fetch algorithm
instruction fetch pipeline
code expansion control
pipelined instruction fetch
instruction sequencing for
incorrect branch prediction
time branch prediction
branch target buffer
branch prediction accuracy
instruction can be
instruction issue and
better performance and
next sequential instruction
functional unit processors
branch prediction strategies
instruction sequencing mechanism

corpus/krapavin2000-test/626722.txt
jamming
retrieving
learning
operators
propagating
concluding
finite precision
precision computation
precision error
calculation graph
statistical evaluation
propagation learning
random variables
weight updating
neural network
error ffl
average sum
precision analysis
precision errors
discrete random
successive operators
ffl x
central limit
r th
total finite
truncation jamming
precision hardware
network algorithms
partial derivatives
statistical properties
high precision
rounding techniques
finite precision error
finite precision computation
independent random variables
finite precision analysis
finite precision errors
forward retrieving and
neural network algorithms
central limit theorem
total finite precision
new lowest order
statistical evaluation values
high precision computation
retrieving and back
possible error values
finite precision hardware
due to finite
discrete random variables
derivative evaluations using
precision error analysis
weight updating error

corpus/krapavin2000-test/626771.txt
reconfigurability
embedding
reconfiguration
arrays
graphs
nodes
working
es
switches
sacrificing
architectures
connections
processors
replacing
rays
dynamic graphs
embedding architecture
application graph
dynamic graph
g n
g r
initial embedding
redundant graph
graph g
local reconfigurability
distributed reconfiguration
n r
linear arrays
total distance
k n
reconfiguration algorithm
original working
fixed level
redundant graphs
dimensional web
array processors
fault tolerance
one greater
replacing nodes
dimensional webs
wavefront arrays
dimensional dynamic graphs
dimensional dynamic graph
nodes have failed
number of nodes
dimensional orthogonal lattice
distributed reconfiguration algorithm
application graph g
dynamic graph g
fixed level of
graph g n
local reconfigurability and
non empty classes
dynamic graph must
n m classes
one greater than
total distance cost
least one greater
original working subgraph

corpus/krapavin2000-test/626779.txt
faults
characterizing
mechanisms
measures
interactions
experiments
ana
modeling
establishes
concerning
fault injection
dependability evaluation
fault occurrence
fault tolerance
injection test
test sequence
asymptotic coverage
occurrence process
coverage parameters
injection experiments
target system
tolerant system
tolerance process
injected faults
experimental evaluation
experimental measures
tolerant systems
dependability measures
error detection
jean arlat
distributed fault
system dependability
tolerant architecture
conditional coverage
fault forecasting
variable characterizing
tolerance algorithms
analytical dependability
tolerance processes
cumulative distribution
analytical modeling
asymptotic value
main characteristics
worth noting
mean time
occurrence rates
fault dormancy
injection test sequence
fault injection test
fault injection experiments
fault occurrence process
fault tolerance process
fault occurrence and
tolerance process and
fault tolerant architecture
distributed fault tolerant
mean coverage time
fault tolerance algorithms
fault tolerance processes
hardware self checking
tolerance algorithms and
random variable characterizing
algorithms and mechanisms
evaluation and experimental
dependability evaluation method
typical experimental graph
reliability modeling techniques

corpus/krapavin2000-test/626781.txt
scattering
gathering
pes
messages
transmitting
broadcasting
spanning
dispatching
trees
scheduling
networks
processors
originating
hypercubes
routing
ring
interconnection
sending
multiscattering
receiving
meshes
sends
resides
paths
communicating
pe p
message sequence
fdf scattering
gathering operation
message m
shoulder tapping
transmission certificates
message transmission
transmission time
optimal scattering
scattering operation
general tree
multiport communication
port communication
intended interpretation
general trees
length messages
optimal algorithm
transmission times
personalized communication
spanning trees
spanning tree
flit message
gathering messages
scattering operations
fdf scattering schedule
transmit message orders
algorithm transmission certification
port communication regimen
single port communication
networks of processors
optimal scattering schedule
intended interpretation is
gap free transmission
fdf scattering schedules
transmission time s
interpretation is that
via the use
network of processors
equal length messages
single port regimen
transmission of messages
use of spanning
trees of arbitrary

corpus/krapavin2000-test/626788.txt
strings
string
substring
occurrences
entities
vertices
conflicts
traversals
ur
visualization
genomes
queries
polygons
linearizing
patterns
curves
modifications
circular strings
displayable entities
displayable entity
linear strings
circular string
linear string
extension edge
extension edges
prefix extension
le edges
suffix extension
re edges
right extension
redundant vertices
procedure circoccurrences
vertex representing
edge corresponding
e r
vertex corresponding
closed curves
last cscd s
ffl cv s
entity of s
suffix extension edges
prefix extension edge
length greater than
extended to circular
occurrences of displayable
ffl v s
vertex corresponding to

corpus/krapavin2000-test/626842.txt
ring
topologies
banks
cache
rings
branching
blocking
prefetching
processors
multiprocessors
levels
transfers
memories
multiprocessor
interfaces
simulating
interconnection
accesses
limiting
loads
connections
addressing
hierarchies
distributing
contexts
transactions
causes
caches
varying
request rate
transaction latency
maximum ring
outstanding transactions
hot spot
communication locality
processor efficiency
memory banks
cycle time
target memory
processor cycles
memory cycle
blocking reads
request rates
multiple outstanding
inter ring
non blocking
memory utilization
mean remote
memory saturation
multiple memory
branching factor
root ring
workload model
ring levels
hierarchical ring
ring utilizations
traffic patterns
hot spots
ring topology
favorite memory
processor module
e request
response packet
cache miss
processor cycle
cache misses
memory contention
workload parameters
remote transaction
processing module
memory latency
cache hit
traffic pattern
request packet
larger branching
communication localities
cache coherence
memory access
maximum number
memory bank
hardware contexts
best topologies
scalable coherent
ring interfaces
large branching
multiple hardware
coherent interface
per processing
l e
system performance
overall system
block transfers
ring connections
processor modules
synthetic workload
cycle times
memory multiprocessors
per processor
software cache
memory consistency
maximum ring utilization
non blocking reads
multiple outstanding transactions
multiple memory banks
memory cycle time
hot spot memory
hot spot traffic
outstanding transactions and
branching factor at
mean remote transaction
remote transaction latency
e request rate
inter ring interface
maximum ring utilizations
one memory bank
overall system performance
scalable coherent interface
per processing module
multiple hardware contexts
favorite memory probabilities
inter ring connections
system and workload
shared memory multiprocessors
processor cycle time
software cache coherence
u l topologies
different t values
synthetic workload model
adaptive maximum number
communication locality model
take prohibitively long
communication locality changes
large branching factors
would take prohibitively
low level workload
simple node interfaces
exposed transaction latency
node interfaces and
tradeoff between concurrency
shared memory multiprocessor

corpus/krapavin2000-test/626879.txt
conflicts
occurrences
entities
string
strings
substring
ms
scdawgs
visualization
modifying
patterns
sequences
displayable entities
prefix suffix
suffix conflicts
suffix extension
extension edge
subword conflicts
prefix extension
displayable entity
extension edges
right extension
vertex v
optimal algorithm
procedure getsubwords
conflict occurs
end positions
vertex representing
display conflicts
maximal patterns
end position
re edge
prefix suffix conflicts
prefix suffix conflict
prefix extension edge
suffix extension edges
suffix extension edge
number of occurrences
occurrences of displayable
suffix conflict occurs
prefix extension edges

corpus/krapavin2000-test/626911.txt
routing
assignments
hypercubes
modules
switching
failures
multicomputers
tasks
minimizing
timing
multicomputer
optimizing
embedding
ulations
signments
becoming
assigning
mapping
communicating
nodes
communication traffic
faulty links
task modules
link failures
message switching
communication performance
random assignments
routing algorithm
switched hypercubes
routing scheme
input tasks
bound tasks
circuit switching
hypercube multicomputers
simple objective
communication efficiency
turnaround time
communication turnaround
minimizing communication
communication volume
task execution
tolerant routing
objective function
shortest path
called communication
heuristic algorithms
overall communication
path routing
simulation results
different algorithms
communication events
mincut bipartitioning
optimize communication
alternative routing
free shortest
routing algorithms
hypercube multicomputer
smaller communication
hypercube embedding
actual communication
different assignments
communication traffic is
u ij s
circuit switched hypercubes
simple objective function
communication turnaround time
fault free hypercube
shortest path routing
inter node communication
alternative routing algorithm
additional link failures
actual communication performance
recursive mincut bipartitioning
link failures is
called communication traffic
free shortest path
message switched hypercubes
assigning task modules
communication performance measure
optimize communication performance

corpus/krapavin2000-test/626918.txt
caches
cache
sampling
instructions
traces
samples
misses
references
intervals
estimates
workloads
meets
multiprogramming
prefetching
stitching
hierarchies
estimating
calculating
les
operating
configurations
set sampling
full trace
constant bits
time sampling
megabyte caches
million instructions
sampling goal
interval lengths
mapped cache
cache performance
set samples
instruction fetches
cache state
confidence intervals
true mpi
initial cache
interval length
trace sampling
mapped caches
sampled instructions
selecting sets
per instruction
miss ratio
cache sizes
trace data
associative caches
secondary caches
miss ratios
mpi estimates
million instruction
primary cache
least 90
secondary cache
virtual indexing
trace interval
pid hashing
associative cache
sampling techniques
100 million instructions
set sampling is
wood et al
full trace mpi
initial cache state
instruction fetches to
cache performance of
meets the 10
traces and caches
mpi initmr estimates
million instruction intervals
set sampling coefficients
low cost methods
full trace data
trace sampling techniques
use virtual indexing
millions of instructions
sampling is more
overestimate mpi s
billion reference traces
alternative secondary caches
time sampling is
sampling fails to

corpus/krapavin2000-test/626956.txt
exceptions
speedups
blas
floating
eigenvectors
eigenvalues
routines
scaling
machines
solving
subroutines
exception handling
full speed
condition estimation
sticky flags
floating point
exception occurs
linear algebra
dec alpha
triangular system
basic linear
triangular solve
trap handling
numerical algorithms
triangular systems
lapack routine
fast exception
slow dec
using exception
solve calling
testing sticky
bisection algorithms
slower cc
inner loop
eigenvector computation
triangular matrices
tridiagonal eigenvalue
general complex
parallel prefix
via exception
computing eigenvectors
solve triangular
lapack library
point operations
linear systems
bisection algorithm
optimized blas
common case
singular value
point number
basic linear algebra
linear algebra subprograms
testing sticky flags
fast exception handling
solve calling strsv
floating point operations
tridiagonal eigenvalue problem
general complex matrices
tests and scalings
eigenvectors of general
via exception handling
nonsticky exception bits
symmetric tridiagonal eigenvalue
mathematical software toms
symmetric tridiagonal matrix
numerical linear algebra
arithmetic with denormalized
report performance results
computing eigenvectors of
unexceptional floating point
faster numerical algorithms
avoid all exceptions
conventional unexceptional floating

corpus/krapavin2000-test/626961.txt
stabilizing
diffusing
spanning
self
processes
resetting
self stabilizing
distributed reset
reset subsystem
diffusing computation
global state
process p
wave layer
spanning tree
root process
tree layer
distributed system
adjacency relation
application layer
arbitrary state
distributed computing
wave reaches
local appl
distributed resets
session number
module maintains
state satisfying
low atomicity
local wave
rooted spanning
stop failures
arbitrary distributed
leader election
self stabilize
global reset
adjacent processes
module appl
distributed systems
guaranteed to reach
processes and channels
reset is in
stop failures and
global state detection
failures and repairs

corpus/krapavin2000-test/626974.txt
caches
cache
uniprocessors
architectures
queues
zs
astronautics
decoupling
processors
studies
computers
effects
simulations
interleaving
capturing
rs
decoupled architectures
memory latency
decoupled architecture
execute processor
access processor
memory access
decoupled systems
decoupled system
access time
decoupled computers
latency effects
execution time
cache based
spatial locality
address calculation
access execute
main memory
data caches
livermore loops
decoupled access
memory bandwidth
architecture performance
bandwidth requirement
memory module
total bandwidth
slow memory
performed simulations
larger block
simulation study
total execution
execute architectures
certain latency
calculation instructions
cached uniprocessors
memory path
execute processors
wm architecture
memory system
data elements
interleaved memories
single processors
computer program
interleaved memory
grain parallelism
instruction caches
simulation results
bandwidth requirements
memory access time
memory latency effects
effects in decoupled
memory latency and
decoupled access execute
lawrence livermore loops
decoupled architectures with
decoupled architectures can
performance of decoupled
uniprocessors and decoupled
decoupled architecture performance
caches and decoupled
strong temporal locality
total execution time
memory latency sensitivity
address calculation instructions
access execute architectures
memory cycle time
instruction buffering techniques
total memory access
caches can reduce
different instruction streams
access related instructions

corpus/krapavin2000-test/626977.txt
faults
voting
modules
failures
retries
switching
inducing
checkpointing
recovers
purging
effects
estimating
costs
tasks
minimizing
recovering
tmr failure
tmr system
permanent faults
possible states
tmr failures
upon detection
task execution
unsuccessful rshw
system state
faulty module
modular redundancy
triple modular
system reconfiguration
execution time
expected cost
transition probabilities
tmr systems
spatial redundancy
retry policy
faulty modules
occurrence rate
tmr structure
frequent voting
adaptive method
fault parameters
nominal execution
transient faults
optimal recovery
state probabilities
unsuccessful rshws
module faults
x increases
optimal voting
failure increases
coincident faults
fault occurrence
processing modules
expected costs
upon detection of
nominal task execution
execution time x
expected cost of
triple modular redundancy
possible fault states
simplified markov chain
nominal execution time
number of spares
larger than that
multiple module faults
state model fs
tmr failure increases
modular tmr multiprocessor
p n s

corpus/krapavin2000-test/626980.txt
representations
branching
circuits
ordering
sentations
going
programs
working
boolean functions
boolean synthesis
binary decision
bit function
weighted bit
boolean manipulation
basic tasks
complete type
branching programs
variable ordering
boolean function
function hwb
binary boolean
synthesis steps
synthesis step
variable orderings
circuit design
obdd representations
us mention
important functions
integer multiplication
circuit verification
efficient manipulation
exponential size
efficient solutions
algebraical congruent
variable quantification
hidden weighted bit
weighted bit function
binary decision diagrams
bit function hwb
tasks of boolean
boolean synthesis steps
boolean synthesis step
ordered binary decision
functions in terms
binary boolean synthesis
efficiently in terms
number of ones
representations of boolean
binary boolean operation
based data structures
even exponentially more
single boolean synthesis

corpus/krapavin2000-test/627003.txt
banks
subbanks
buffering
streams
interconnection
ports
conflicts
processors
references
loading
writes
simulations
memories
queues
reads
multiprocessor
designs
cessors
handshaking
scaling
requests
logical bank
bank cycle
cycle time
logical banks
reference streams
bank model
cray y
queue size
interconnection network
successful reference
vector simulation
vector register
independent reference
scaling relationships
subbank cycle
return conflicts
e l
reference stream
mp architecture
bank level
physical bank
vector registers
without buffering
effective efficiency
reference rate
memory efficiency
random reference
memory systems
memory banks
physical banks
vector references
eight processors
interconnection costs
output buffering
moderate loading
memory operations
design parameters
simulation study
interconnection cost
memory bank
simulation model
maximal loading
vector simulations
stride distributions
additional lines
physical memory
analytical model
shared memory
bank cycle time
logical bank model
number of banks
cycle time and
independent reference streams
subbank cycle time
number of processors
logical bank cycle
logical banks is
buffering at the
number of attempts
reads and writes
logical bank register
vector memory operations
attempt to access
design is to
additional interconnection cost
logical bank design

corpus/krapavin2000-test/627005.txt
buffers
looping
references
queries
predictors
waiting
gains
policies
loads
allocating
accesses
formulas
predictions
ingres
patterns
workloads
adopting
decisions
buffer allocation
marginal gain
random reference
random references
marginal gains
looping reference
page faults
allocation algorithms
looping references
concurrent queries
adaptable algorithms
disk utilization
load control
waiting queue
sequential reference
optimal allocation
yao estimate
available buffers
buffer management
flexible buffer
adaptable buffer
many buffers
allocation policy
admission policy
effective disk
buffer manager
local replacement
allocation policies
allocated buffers
extra buffers
buffer utilization
simulation results
buffer pool
d e
relative throughput
relational database
access patterns
allocation algorithm
page hits
sequential references
dynamic workload
adaptable allocation
number of buffers
marginal gain values
buffer allocation algorithms
effective disk utilization
mix of queries
adaptable buffer allocation
flexible buffer allocation
x y algorithms
marginal gains and
availability of buffers
based on marginal
patterns of queries
many buffers to
buffer allocation algorithm
chou and dewitt
marginal gain value
formulas for computing
adaptable allocation algorithms
sub optimal allocations
local replacement policies
sequential reference s
marginal gains which
total marginal gain
relative throughput mix
adaptable algorithms running

corpus/krapavin2000-test/627029.txt
processors
arrays
primitives
references
accumulations
kernels
preprocessing
loops
optimizations
partitioning
ms
accesses
costs
procedures
copies
compilers
targeting
communications
messages
locations
mapping
compiling
translation table
distributed array
arf compiler
distributed translation
hash table
gather exchanger
array elements
local array
array references
local indices
distributed arrays
distributed memory
parti primitives
local index
processor data
loop iterations
unstructured meshes
processor p
translation tables
language extensions
processor assignments
irregular using
irregular array
parti procedures
processor elements
n proc
array partition
d block
exchanger using
runtime support
hash tables
receive calls
processor references
time primitives
processor loop
exchange primitives
local data
irregular patterns
irregular problems
d blocks
support irregular
array reference
distributed array elements
distributed translation table
processor distributed array
send and receive
distributed translation tables
distributed irregular using
using schedule s
irregularly distributed arrays
exchanger using schedule
distributed array element
run time primitives
blocked translation table
irregular array references
fortran d language
array references that
hashed gamma cache
local index assignments
orthogonal binary dissection
find processor assignments
patterns of distributed
support irregular patterns
translation table using
data and computational
irregularly distributed array

corpus/krapavin2000-test/627083.txt
slowdowns
locking
blocking
locks
committing
nonblocking
ana
executing
faults
executions
architectures
conflicting
processes
queues
cache
analyzing
trees
objects
non blocking
free algorithms
concurrency control
locking algorithms
non locking
execution time
structure algorithms
permanent slowdowns
concurrent data
blocking algorithm
permanent slowdown
blocking algorithms
optimistic concurrency
transient slowdowns
transaction model
transaction commits
transaction aborts
slow processors
shared memory
concurrent objects
shared object
transaction conflicts
dynamic broadcast
blocking queue
committing transactions
locking algorithm
numa architectures
execution times
f c
small slowdowns
line faults
dynamic concurrency
numa architecture
slow operations
operation execution
occur due
cache line
atomic snapshot
analytical models
shared data
locking protocols
transaction processing
r c
time distributions
context switch
ryu and thomasian
optimistic concurrency control
non blocking algorithm
non locking algorithms
data structure algorithms
non blocking algorithms
concurrent data structure
free algorithms are
per class utilizations
non blocking queue
dynamic concurrency control
cache line faults
slowdowns can occur
occur due to
memory and bus
committing transaction conflicts
architectures heterogeneous architectures
large object protocol
concurrent data structures
contention page faults
non blocking data
static concurrency control
operation execution time
due to cache

corpus/krapavin2000-test/627095.txt
polynomials
aliasing
faults
lfsrs
ras
pgs
factoring
procedures
bounds
circuits
finding
responses
es
hayes
sequences
registers
selecting
zero aliasing
primitive polynomials
degree j
primitive case
degree less
expected bounds
irreducible factors
primitive non
irreducible polynomials
good response
error polynomials
irreducible case
d h
specified degree
modeled faults
random polynomials
worst case
expected bound
exhaustive search
error sequences
test sequence
feedback polynomials
primitive feedback
primitive zero
log n
jhj polynomials
case bounds
polynomial division
practical test
degree l
least degree non
degree less than
primitive non factor
irreducible primitive polynomials
set of polynomials
feedback polynomial of
zero aliasing misr
number of faults
polynomial of degree
irreducible and primitive
primitive zero aliasing
zero aliasing lfsr
degree at most
worst case bounds
primitive feedback polynomial
number of polynomials

corpus/krapavin2000-test/627097.txt
events
timing
circuits
graphs
bounds
process graph
unfolded process
time separation
maximum separation
event occurrences
asynchronous circuits
delay ranges
asynchronous microprocessor
startup rules
cycle c
structural decomposition
graph algorithm
concurrent systems
initial startup
conditional behavior
pipeline choosing
possible bounds
initial occurrences
coupled pipelines
function relating
d c
unfolded graphs
arbitrary process
semi ring
fundamental problem
unfolded process graph
delta ff values
maximum ratio cycles
process graph corresponding
infinitely unfolded process
function relating m
arbitrary process graph
36th acm ieee
symbolic timing verification
caltech asynchronous microprocessor
tightest possible bounds
unspecified delay ranges
single function relating

corpus/krapavin2000-test/627126.txt
broadcasting
spanning
scattering
messages
trees
nodes
edges
dimensions
paths
controlling
processors
routing
networks
cycles
computers
node broadcasting
single node
disjoint spanning
spanning trees
fault tolerant
multiple edge
node scattering
star network
multinode broadcasting
broadcasting algorithm
message transmissions
node receives
fault tolerance
total exchange
node h
node wishes
tolerant algorithms
communication algorithms
port assumption
disjoint subtrees
parallel paths
communication assumption
interconnection network
port communication
shortest path
spanning tree
different edge
optimal communication
tolerant communication
lower bounds
m n
star interconnection
time step
d m
distinct messages
rotation operation
exchange problems
different dimensions
data communication
single node broadcasting
disjoint spanning trees
single node scattering
node broadcasting algorithm
node wishes to
fault tolerant algorithms
nodes adjacent to
fault tolerant multinode
tolerant multinode broadcasting
spanning trees structure
optimal single node
spanning trees on
node scattering and
port communication assumption
scattering and total
nodes of s
broadcast m messages
node scattering algorithm
node broadcasting d
fault tolerant communication
messages to each
wishes to transmit
different edge disjoint
tolerant communication algorithms

corpus/krapavin2000-test/627189.txt
conditionals
optimizations
transformations
bounds
programs
transformation
cons
paths
timing
languages
pipelining
depths
analyzing
binding
measuring
optimizing
structs
sorting
constructs
primitive cost
bound function
cost parameters
symbolic evaluation
bound functions
cost bounds
input size
bound analysis
time milliseconds
size parameters
input structures
heap space
insertion sort
measured worst
original program
loop bounds
execution paths
worst case
list reversal
selection sort
cost function
direct evaluation
set union
space bounds
merge sort
partial evaluation
cost parameter
cost analysis
variable reference
incremental computation
time analysis
closed forms
simplifying conditionals
lifting conditions
approximate time
cost functions
primitive operation
actual running
example programs
input structure
program analysis
function terminates
dierent operations
synthesizer generator
recursion depths
level languages
source level
language level
language implementation
complexity analysis
recursive function
algorithm analysis
analysis results
primitive cost parameters
partially known input
input size parameters
known input structures
calculated time milliseconds
garbage collection times
primitive cost parameter
accurate cost bound
worst case times
methods and techniques
measuring primitive cost
allocated for constructors
bounds or execution
loop bounds or
high level languages
dierent operations performed
execution paths automatically
accurate cost bounds
heap space allocated
paths automatically and
conservatively or approximately
known input structure
automatically and accurately
eciently and accurately
program analysis and
number of experiments

corpus/krapavin2000-test/627209.txt
os
blocks
cache
looping
caching
policies
detects
cs
executions
schemes
prefetching
patterns
media
reference pattern
backward distance
buffer cache
block attribute
response time
block reference
file caching
reference patterns
replacement policy
detection results
probabilistic reference
multiple application
replacement policies
sequential reference
average forward
block replacement
distinct blocks
different replacement
single application
looping reference
attribute types
appropriate replacement
level hints
application executions
buffer space
ordered lists
overall response
detection periods
detected reference
multiple applications
file system
frequency block
adaptive replacement
scheme reduces
smaller forward
attribute values
different applications
new buffer
cache size
reference behavior
scheme performs
lru replacement
buffer allocation
called dear
detection rule
number of sublists
controlled file caching
application controlled file
backward distance and
probabilistic reference pattern
average of 12
block attribute values
detection period is
sequential reference pattern
time by up
response time seconds
different replacement policies
block attribute types
overall response time
user level hints
block reference patterns
backward backward backward
appropriate replacement policy
detected reference pattern
os by up
single application executions
average of 8
replacement policies to
frequency block attribute
block reference pattern
proposed dear scheme
dear scheme performs
policies to different
current detection period
clustered reference pattern
scheme called dear
proposed scheme reduces

corpus/krapavin2000-test/627222.txt
subtasks
scheduling
processors
triggering
resources
allocations
overloads
decisions
incurs
executing
computers
determining
decreasing
situations
deadline ratio
resource allocation
missed deadline
benefit tasks
aggregate benefit
subtask response
subtask deadline
subtask arrival
higher benefit
adaptation functions
response time
amortized complexity
application benefit
arrival time
response times
rba _determinereplicasprocessors
underlying scheduling
proactive resource
scheduling algorithm
using application
procedure rba_analyzeresponse
task benefit
scheduling algorithms
arrival times
time window
ravindran using
higher aggregate
future time
n tasks
lower benefit
task deadline
rba_analyzeresponse procedure
task benefits
periodic task
scheduling events
anticipated workload
second replica
lower missed
single replica
benefit task
execution times
august 2002
effort real
current processor
task adaptation
maximize aggregate
missed deadline ratio
number of replicas
asynchronous real time
higher benefit tasks
proactive resource allocation
subtask response time
time distributed systems
aggregate benefit and
using application benefit
ravindran using application
higher aggregate benefit
timeliness of higher
underlying scheduling algorithm
subtask response times
response time analysis
benefit and minimize
subtask replicas and
future time window
const ramp workloads
benefit and lower
replicas and their
lower benefit tasks
lower missed deadline
decreasing order of
total available slack
ramp ramp workloads
subtask execution times
subsections that follow
aggregate missed deadline
triggering periodic task
time scheduling algorithms
minimize aggregate missed
replicas needed for
transactions on computers
real time scheduling

corpus/krapavin2000-test/627258.txt
deadlines
ring
arrivals
messages
burns
rotations
timing
ending
transmitting
findings
neighboring
communications
nodes
ps
schemes
studies
timed token
token protocol
token rotation
synchronous bandwidth
successive token
th arrival
elapse time
bound expression
time properties
generalized result
token mac
synchronous messages
successive visits
rotation time
synchronous message
mac protocol
downstream neighbor
message deadlines
token arrivals
n visits
asynchronous messages
token arrives
token rotations
message transmission
l th
various overheads
et al
tighter upper
token ring
timing properties
time communication
asynchronous transmission
token visits
particular node
synchronous transmission
time communications
new generalized
r remaining
subsequent arrival
previous findings
bandwidth allocation
previous results
timed token protocol
generalized upper bound
chen et al
upper bound expression
cycle time properties
timed token mac
token mac protocol
token rotation time
node i and
complete token rotation
derived by chen
zhang and burns
time possibly elapsed
successive token arrivals
tighter upper bound
real time communication
synchronous message deadlines
l th arrival
arrivals to a
real time communications
generalized result on
timed token ring
synchronous bandwidth allocation
immediately subsequent arrival
timing properties of
better than any

corpus/krapavin2000-test/627400.txt
rewriting
queries
databases
semantics
rules
constructs
predicates
languages
updates
bases
counting
optimizing
chaining
prototyping
binding
fact manager
intelligent backtracking
ldl compiler
bound arguments
set terms
recursive clique
ldl system
logic data
recursive cliques
recursive query
declarative semantics
generalized counting
complex terms
efficient execution
relational databases
recursive queries
rule rewriting
expressive power
logic programming
complex objects
database system
recursive rules
relational algebra
database systems
query optimization
horn clause
recursive rule
ldl queries
ldl implementation
rule transformation
predicate connection
compilation techniques
horn clauses
query language
intensive applications
relational dbmss
processing strategies
application language
ldl programs
various execution
based language
programming language
logic data language
lazy materialized execution
data and knowledge
data intensive applications
rule transformation techniques
non horn constructs
ramakrishnan divesh srivastava
divesh srivastava s
predicate connection graph
query processing strategies
recursive query processing
existential datalog queries

corpus/krapavin2000-test/627416.txt
actions
activities
processes
plans
settings
modeling
interactions
linking
relations
products
planning
querying
validating
software process
task performance
articulator meta
process models
query mechanism
process model
software processes
behavioral simulation
software development
task execution
software engineering
process modeling
performance skill
engineering processes
development activities
mary joe
behavioral simulator
symbolic execution
task decomposition
open systems
organizational settings
primary tasks
behavior simulator
organizational work
knowledge representation
data representation
unexpected events
problem solving
software process models
software process model
resources and situations
software process modeling
task performance skill
software engineering processes
process models and
knowledge acquisition manager
models and their
software development projects
individual task performance
software development process
meta model consists
agent software processes
software process researchers
new value agent
task performance skills
knowledge engineering environment

corpus/krapavin2000-test/627506.txt
learning
cooling
annealing
weights
networks
inputs
stochastic backpropagation
generalization problems
neural network
backpropagation algorithm
simulated annealing
learning algorithm
stationary distribution
current configuration
output pairs
control parameter
neural networks
weight space
optimal configurations
learning samples
boltzman machine
optimal weights
trained network
generalization problem
recognition problems
desired output
constructive function
new configuration
lower error
weight adjustments
learning algorithms
learning examples
conditional probabilities
training example
data collection
real numbers
backpropogation2epoch figure
backpropogation backpropogation2epoch
learning algorithm for
globally optimal configurations
algorithm for generalization
neural network simulator
simulated annealing in
globally optimal weights
stochastic backpropagation algorithm
constructive function learning
signal detection problem
convergence properties and
homogeneous markov chain
initial stochastic backpropogation
symbolic semantic network
backpropogation backpropogation2epoch figure
j c refers
alternative learning algorithms
stochastic backpropogation backpropogation2epoch
stochastic backpropagation learning
current configuration w

corpus/krapavin2000-test/627540.txt
pages
logging
checkpointing
mmdbs
records
flushing
locking
activities
memories
rs
redoing
paging
decoupling
databases
propagating
transactions
keeping
undoing
committing
recovering
enforcing
demands
bringing
principles
log records
stable memory
transaction processing
incremental restart
buffer manager
level recovery
fresh marking
main memory
memory database
operation logging
restart processing
database pages
committed transactions
secondary storage
restart procedure
recovery processing
database systems
recovery management
recovery techniques
backup database
crash transactions
resident database
single propagation
large main
restart algorithm
concurrency control
buffer management
crash transaction
standard restart
recovery activities
database page
recovery manager
consistent state
transaction execution
propagating updates
entire database
forward transaction
entry logging
checkpointing algorithms
normal transaction
transaction rates
stale marking
large buffer
main memory database
high level recovery
high level undo
high level log
post crash transactions
memory database systems
high level operations
incremental restart algorithm
operation consistent state
memory resident database
x stale holds
resident database system
operation logging and
fresh stale marking
transactions are processed
high transaction rates
steal buffer management
based on operation
large main memories
parallel with transaction
normal transaction processing
redo log records
buffer management policy
high level action
transaction processing systems
recovery processing and
level recovery management

corpus/krapavin2000-test/627561.txt
ldbs
multidatabase
subtransactions
tickets
mdbs
serializability
schedules
autonomy
conflicts
schedulers
participating
georgakopoulos
enforcing
orders
transactions
trans
locking
databases
mechanisms
interfaces
laboratories
multidatabases
updates
refinements
controlling
difficulties
preventing
scheduling
environments
ts
erations
global transactions
global serializability
commit state
serialization order
global transaction
multidatabase transactions
concurrency control
transaction management
relative serialization
multidatabase transaction
participating ldbss
serialization orders
local serialization
transaction g
take tickets
g j
global restarts
local transactions
local concurrency
database systems
corresponding ldbss
local serializability
analogous execution
multidatabase systems
distributed database
local systems
commitment order
ticket conflicts
sheth enforcing
ldbss ensure
ticket operations
local schedules
local transaction
local database
serialization graph
indirect conflicts
multidatabase environment
implicit tickets
implicit ticket
management mechanism
multidatabase system
execution order
serializable schedules
local autonomy
ticket operation
direct conflict
conservative ticket
trans action
relative serialization order
local serialization order
global transaction g
local concurrency control
analogous execution and
serializability of multidatabase
multidatabase transaction management
rusinkiewicz sheth enforcing
georgakopoulos rusinkiewicz sheth
transaction management mechanism
guarantees global serializability
local transaction t
enforce global serializability
conflicts can be
ensure local serializability
global transactions to
local database systems
database management systems
implicit ticket method
autonomy of the
enforcing global serializability
2pc agent method

corpus/krapavin2000-test/627595.txt
trees
matching
editing
children
queries
relabeling
retrieving
strings
string
mapping
typing
locating
comparing
searching
querying
extracting
edit operations
tree matching
editing distance
approximate tree
tree comparison
pattern tree
node contents
labeled trees
query language
atbe system
match retrieval
triangle inequality
string matching
information retrieval
approximate string
right order
dictionary definitions
inexact matching
extract information
allows users
edit operation
consecutive sequence
underlying algorithms
secondary structures
editing distance between
approximate tree matching
approximate string matching
natural language processing
allows users to
right order of
trees in which
inexact tree matching
nonprocedural programming languages

corpus/krapavin2000-test/627641.txt
eating
graphs
instructions
differences
mappings
concepts
traversing
storing
rules
taxonomy
searching
matching
mapping
compressing
classification
ordering
querying
conceptual graphs
generalization hierarchy
conceptual graph
formation rules
immediate predecessors
query graph
canonical formation
adjacent graphs
object pie
generalization space
immediate successors
canonical graphs
immediate generalizations
individual marker
topological search
conceptual relations
object entity
database graph
immediate specializations
concept c
first phase
individual markers
identical concepts
specialized cases
conceptual relation
compressed using
partial order
knowledge base
second phase
graph f
redundant data
performing matching
common computation
simple instructions
subgraph morphism
canonical formation rules
eat object pie
agent eat object
act object entity
conceptual graphs are
individual marker conforms
maximal common subtype
conceptual graph theory
girl sue eating
query graph u
immediate generalizations and
simple instructions which
processing between graphs
agent act object
traversing the hierarchy
minimal common supertype
acyclic graph representing
conceptual graphs a

corpus/krapavin2000-test/627645.txt
reasoning
structuring
plausible reasoning
expert systems
parallel parsing
important desiderata
sensible conclusions
similarity matching
marker passing
plausible inferences
evidence designing
useful inferences
neural networks
continuous domains
many important desiderata
reasoning incorporating rules
dependent representation ieee
parallel constraint satisfaction
connectionist knowledge bases
microfeature multilayer feedforward
logic marker passing
ind probabilistic reasoning
parsing fuzzy sets
neuronal models chunking
mixed similarity matching
robotic skill acquisition
parallel parsing fuzzy
discrete neural network
universal backpropagation learning
commonsense reasoning incorporating
echanical theorem proving
designing inference engines
evidence designing inference
context dependent representation

corpus/krapavin2000-test/627655.txt
recursions
cons
binding
predicates
generating
portions
chains
pushing
counting
rules
relations
splits
facilitates
databases
forms
split evaluation
chain generating
generating path
chain recursion
binding propagation
query evaluation
linear recursion
n chain
chain following
buffered values
recursive rule
functional predicate
evaluation techniques
partial evaluation
evaluation technique
logic programs
merged parents
compiled chain
propagation rules
chain recursions
deductive database
recursive query
evaluation plan
functional recursions
finiteness constraints
connected predicates
functional predicates
query binding
deductive databases
intermediate relations
functional recursion
finite evaluation
evaluable portion
following evaluation
construction function
regular chain
sets evaluation
recursive predicate
efficient query
based query
evaluable predicates
chain forms
list construction
chain generating path
evaluation should be
split evaluation should
buffered chain split
single chain recursion
y y s
level finite evaluability
two portions in
split evaluation techniques
recursive query evaluation
query evaluation technique
functional single chain
nested linear recursions
set of connected
list construction function
query evaluation plan
binding propagation rules
rule set f
ffb x xs
efficient query evaluation
evaluation is a
kinds of recursions
query binding propagation
chain following threshold
partition bbff xxs
immediately evaluable portion
query evaluation plans
function free linear
highly regular chain
split evaluation may

corpus/krapavin2000-test/627662.txt
learning
weights
rules
networks
integrating
cooperating
connections
discovering
tasks
explicit knowledge
automaton rules
speech recognition
automatic speech
information latching
recurrent networks
proposed model
isolated word
word recognition
recurrent network
example paradigm
connectionist models
uncertain information
state transition
neural networks
explicit rules
high transition
integrating explicit
automaton states
intelligent behavior
nondeterministic automaton
worth mentioning
linear programming
learning algorithm
perceptual tasks
neuron switching
connected recurrent
cooperating subnets
ordinary gradient
feedforward nets
continuous signal
tabula rasa
n p
unified approach
us consider
state transitions
transition occurs
local feedback
feedback multi
layered networks
learned rules
learning by example
knowledge and learning
automatic speech recognition
explicit knowledge and
isolated word recognition
problems of automatic
integrating explicit knowledge
approach for integrating
recurrent neural networks
unified approach for
injected into the
well when increasing
least for feedforward
two cooperating subnets
neuron switching rules
ordinary gradient descent
local feedback multi
conceived as a
italian word numa
information latching occurs
state transition occurs
c lee giles
rules can be

corpus/krapavin2000-test/627680.txt
dbms
formulas
ingres
rules
specification
transformations
constraints
optimizations
implementing
converting
checking
ordering
triggers
queries
saving
databases
languages
encoding
r ff
magic condition
auxiliary relations
auxiliary relation
active dbms
relational algebra
fol formula
temporal integrity
integrity constraints
transition tables
magic conditions
m r
auxiliary atoms
pasttl formula
temporal constraints
auxiliary atom
active rules
constraints using
rule systems
set transformation
toman implementing
evaluable property
sql statements
original formula
r fi
auxiliary tables
temporal logic
relation r
rule system
specification language
state n
free variables
optimization techniques
constraint checking
auxiliary transition
constraint enforcement
temporal constraint
constraint specification
original pasttl
evaluation property
safe evaluation
rule c
normal form
first order
ff oe
general architecture
constraint c
top level constraint
m r ff
temporal integrity constraints
integrity constraints using
implementing temporal integrity
using an active
constraints using an
auxiliary relation r
magic set transformation
relation r ff
algebra normal form
relational algebra normal
overall magic condition
auxiliary transition tables
converted to relational
safe evaluation property
relational algebra and
level constraint c
auxiliary atom r
past temporal logic
original pasttl formula
top level fol
constraint specification language

corpus/krapavin2000-test/627693.txt
critics
kbds
designs
ds
critiquing
experts
engineers
acquiring
heuristics
sys
refining
errors
assisting
checking
missing
rules
bring
methodologies
knowledge engineers
design system
knowledge base
knowledge acquisition
domain theory
network design
engineering design
expertise completion
decision points
problem description
alternative solution
proper knowledge
consistency checking
cost function
knowledge engineer
automatic redesign
independent system
cable network
sufficient knowledge
intelligent tutoring
expert critics
good designs
design generation
new design
alternative designs
domain experts
human experts
design b
cable routes
checking critics
telephone network
design experts
various designs
produce designs
better design
problem descriptions
based engineering
test cases
based systems
domain theories
set of critics
telecommunications network design
designs generated by
completion critic is
critics have been
used in critiquing
consistency checking critics
sub optimal parts
intelligent tutoring systems
based engineering design
critical decision points
design can be
design is a
inconsistent systemdesign sys
alternative solution critics
reorganize and generalize
implement the critics
knowledge base modification
knowledge engineer reorganize

corpus/krapavin2000-test/627698.txt
hypernodes
labels
updates
operators
defining
databases
dependencies
modelling
querying
formalisms
bases
hypernode model
based data
computable updates
data models
defining label
deterministic operators
computable update
hypernode database
relational model
primitive nodes
hnql program
update language
defining labels
whose defining
returned returns
n e
atomic values
system comprising
declarative querying
computable mapping
hypernode databases
current state
section ii
expressive power
database satisfying
object identifiers
database language
single underlying
basic set
functional dependencies
underlying data
complex objects
oriented data
universal relation
query language
based data models
based data model
query and update
based and set
defining label is
whose defining label
axiom system comprising
data models and
defining labels of
three components of
denote pairwise disjoint
declarative querying and

corpus/krapavin2000-test/627706.txt
overspending
tuples
fragments
dbms
selectivities
queries
relations
risks
transformations
operators
iterations
evaluating
estimators
controlling
specifies
choosing
deadlines
answers
fragment size
fragment selection
query evaluation
time quota
available time
fragment list
time cost
difference operator
risk factor
selection problem
query modification
fragment lists
relation fragmentation
operator queries
modification technique
evaluation step
modified query
natural join
iterative query
list f
relational algebra
risk fi
fragmentation chains
algebra queries
critical status
join operator
query q
set difference
input relations
f j
selection operator
ra query
cost formula
required fragment
output tuples
complement fragments
monotone queries
gamma ff
o p
time constraint
aggregate queries
risk control
modified versions
th step
heuristic approach
risk of overspending
number of tuples
fragment selection problem
query modification technique
query evaluation step
iterative query evaluation
relational algebra queries
fragment list f
time cost formula
complement fragment risk
set difference operator
used in the
relation involved in
multi operator queries
critical status furnaces
single operator queries
available time increases
real time databases
number of iterations
natural join operator
single user dbms

corpus/krapavin2000-test/627715.txt
serializability
preconditions
queries
conflicts
expressions
transactions
autonomy
checking
bounds
databases
import limit
result inconsistency
update transaction
inconsistency q
2committed cut
update transactions
account balance
current change
query q
epsilon serializability
update ets
import inconsistency
classic serializability
query ets
inconsistency limit
import limits
export limit
database state
transaction management
tp system
inconsistent data
state space
export inconsistency
checking account
monotonic functions
metric spaces
metric space
concurrent updates
invariant corresponding
et q
inconsistency limits
stronger invariant
inconsistency bounds
data values
transaction executions
application designer
import limit q
2committed cut q
final change t
current change t
current x import
import inconsistency q
current account balance
manner in which

corpus/krapavin2000-test/627724.txt
authorizations
authorization
instants
rules
intervals
semantics
recomputing
granting
specifying
capabilities
derivation rules
access control
temporal authorization
temporal authorizations
access mode
derivation rule
derived authorizations
authorization model
valid authorizations
negative authorizations
time interval
positive authorization
negative authorization
parametric derivation
administrative operations
administer privilege
positive authorizations
explicit authorizations
authorization base
administrative privileges
administrative authorizations
materialized authorizations
discretionary access
refer privilege
time instants
o m
materialization approach
administrative authorization
among authorizations
temporal capabilities
new authorizations
time intervals
evaluation order
access authorizations
temporal dependency
logic program
authorizations and derivation
authorizations and rules
interval associated with
temporal authorizations and
parametric derivation rules
authorizations can be
critical set detection
discretionary access control
ground derivation rules
access control model
derivation rules can
temporal authorization base
set of authorizations
parametric derivation rule
access control models
access control policies
set of derived
access control and
derivation rules where
authorization can be

corpus/krapavin2000-test/627737.txt
learning
networks
fitting
statistics
missing
probabilities
bayes
independencies
trees
clustering
developments
forecasting
bayesian networks
probabilistic networks
graphical models
probabilistic network
bayesian network
probability tables
bayesian methods
parameter fitting
model selection
large sample
expert systems
artificial intelligence
likelihood approach
latent variables
exponential family
network structures
neural networks
machine learning
conditional probability
hidden variables
complete data
data assumption
knowledge acquisition
bayesian approach
bayesian net
bayesian method
missing values
information theory
probability distribution
network structure
classification trees
discrete variables
small sample
computational learning
table ii
binary variables
intelligent systems
learning algorithm
missing data
probability models
probability table
hidden markov
maxwell chickering
equivalent probability
hypothesis space
greedy search
real values
data analysis
undirected arcs
informative priors
undirected networks
neural network
learning bayesian networks
maximum likelihood approach
networks from data
learning graphical models
bayesian networks is
learning probabilistic networks
complete data assumption
probabilistic networks is
conditional probability tables
computational learning theory
forward neural networks
probabilistic expert systems
maximum likelihood estimate
equivalent probability models
bayesian network structures
general probabilistic networks
large sample phase
bayesian net work
probabilistic networks are
manual knowledge acquisition
small sample medium
structure learn ing

corpus/krapavin2000-test/627752.txt
monitoring
sensors
attributes
objectives
operators
queries
activates
networks
sampling
links
managing
specifying
debugging
procedures
measurements
event variables
performance parameter
performance parameters
state variables
inference processor
object class
primitive sensors
deductive inference
statistical inference
sensor configuration
broadband networks
configuration database
activate sensors
measurement points
collected information
measurement strategy
primitive sensor
magnet ii
evaluation operators
statistical operators
sensor installation
integrated networks
based monitoring
relationship type
state var
query analysis
dynamic database
collect information
specific instance
status monitoring
various performance
traffic class
operator submitted
access points
data transformation
appropriate sensors
sensor operations
network monitoring
statistical abstraction
performance measures
objective driven monitoring
average time delay
deductive inference processor
installed in the
statistical inference processor
performance parameters and
driven measurement strategy
performance evaluation operators
order to monitor
query analysis specification
monitoring of distributed
selected performance parameters
real time data
operator submitted queries
approach to monitoring
processor is to
based monitoring of
various performance measures
real time traffic
variables that are

corpus/krapavin2000-test/627754.txt
joins
processors
heuristics
sequences
scheduling
pipelining
relations
queries
schemes
xprs
exploiting
joining
trees
dominating
parallelizing
allocates
mentioning
join sequence
processor allocation
bushy tree
join sequences
operator parallelism
execution time
general join
execution dependency
sequential join
synchronous execution
operational point
system fragmentation
sequence scheduling
join query
sequence efficiency
query graph
execution costs
sequence heuristics
resulting relation
query execution
multiprocessor system
join queries
point selection
bushy trees
next join
join operation
internal node
r r
merge join
r j
average execution
different join
parallel execution
simulation results
allocation heuristics
exploiting inter
h p
processor system
allocation efficiency
execution tree
single processor
scheduling schemes
execution sequence
p b
time resulting
query complexity
join operations
several heuristics
number of processors
synchronous execution time
join sequence scheduling
general join sequences
join sequence efficiency
query execution time
execution dependency and
sequential join sequence
general join sequence
operational point selection
sequence scheduling and
join sequence heuristics
scheduling and processor
sequential join sequences
minimal cost join
processors allocated to
optimal sequential join
multi join queries
single processor system
join sequences obtained
despite their simplicity
processor allocation efficiency
processor allocation heuristics
sequences obtained by
cumulative execution cost
cumulative execution costs
resulting relation of
several heuristics to
processors to execute
time resulting r
end time resulting
propose and evaluate
evaluated by simulation

corpus/krapavin2000-test/627765.txt
tahs
images
contours
features
contour
ur
relationships
operators
retrieving
objects
descriptors
ranking
queries
clustering
answering
matching
attributes
constructs
databases
extracting
semantics
lateral ventricle
spatial relationship
spatial relationships
target image
conceptual terms
image objects
value ranges
right protrusion
query processing
based query
semantic operators
object contours
shape features
similar images
image features
relationship operators
brain tumor
relationship features
tumor size
brain tumors
image retrieval
shape feature
query relaxation
selected features
query constraints
shape model
image semantics
retrieving images
type abstraction
feature values
frontal lobe
knowledge layer
value range
o c
clustering algorithm
large tumor
image representations
lateral ventricles
content matching
lower right
relationship model
shape descriptors
abstraction hierarchy
retrieve images
image feature
target data
image databases
appropriate tahs
composite feature
conceptual query
features and spatial
based query processing
semantic spatial relationship
spatial relationship operators
spatial relationship features
lesion lateral ventricle
spatial relationship model
set of features
based on the
select patientwithimage patient
left protrusion height
image semantics and
retrieving images by
type abstraction hierarchy
specified in the
spatial relationship predicates
available conceptual terms
image content interpretation
type abstraction hierarchies
feature description table
shape feature description
features and content
content interpretation knowledge
spatial image model
queries with semantic

corpus/krapavin2000-test/627767.txt
string
strings
spelling
searches
searching
tries
insertions
matching
checkers
yates
matches
substitutions
deletions
errors
letters
storing
distances
trie search
regular expression
approximate string
approximate match
exact match
string matching
trie methods
spelling checkers
secondary storage
approximate search
search time
o m
expression matching
dictionary search
search algorithm
approximate searches
target string
pattern string
edit operations
text searching
o n
d p
large texts
approximate regular
match algorithms
regular expressions
suffix tree
edit distance
text searches
dictionary searches
approximate string matching
regular expression matching
approximate regular expression
approximate search algorithm
expression matching and
retrieved character find
target string w
exact match algorithms
full regular expression
tries have been
limited approximate regular

corpus/krapavin2000-test/627771.txt
triggering
rules
actions
transitions
semantics
postgres
dbms
ordering
issuing
databases
enforcing
implementing
executing
debugging
features
manipulating
rule processing
rule system
starburst rule
rule execution
rule language
active database
triggering operations
transition table
transition tables
rule r
transaction rule
transaction x
process rules
triggered rules
database system
create rule
process rule
extensibility features
potential rules
rule conditions
rule condition
concurrency control
database rule
production rules
active rule
database systems
composite transition
deleted employees
execution semantics
rule management
alter rule
active rules
condition evaluation
starburst rules
table function
arbitrary database
action execution
database rules
updated tuples
rule actions
table functions
attachment procedures
rule triggering
almaden research
data modification
error handling
integrity constraints
rule creation
transition information
starburst rule system
starburst rule language
transaction rule processing
active database systems
conditions and actions
actions are executed
rule conditions and
concurrency control authorization
active database rules
features of starburst
ibm almaden research
active database rule
global rule information
process ruleset s
database state transitions
almaden research center
rule system can
transition table references
create rule command
arbitrary database state

corpus/krapavin2000-test/627784.txt
literals
atoms
semantics
answers
chaining
programs
alternating
os
backtracking
delaying
coincides
reasoning
deleting
queries
instances
facts
enumerating
stable models
stable model
founded semantics
valued stable
residual program
ground atoms
logic programs
ground program
query evaluation
reduce algorithm
ground atom
truth values
model computation
negative literals
program p
delayed literals
truth value
backward propagation
alternating fixpoint
negative loops
normal logic
ground programs
general logic
negative loop
fixpoint logic
total interpretation
undefined instances
conditional answers
partial model
m p
logic program
partial interpretation
conditional answer
computing stable
oriented query
following program
model semantics
prolog execution
ground literals
false according
data complexity
original program
literal l
valued stable models
stable model computation
finite ground program
assumed truth values
general logic programs
valued stable model
alternating fixpoint logic
stable models and
founded semantics is
sean ai diff
oriented query evaluation
normal logic programs
computing stable models
founded semantics and
stable model semantics
finite ground programs
time data complexity
assumed truth value
polynomial time data
normal logic program
founded semantics of

corpus/krapavin2000-test/627792.txt
multimedia
sessions
media
latencies
buffering
switching
timing
intermedia
scheduling
files
rates
recording
requirements
transfers
sweeping
streaming
timedia
subsys
organizations
differing
originating
multimedia sessions
disk bandwidth
file system
seek latency
r c
multimedia session
consumption rate
dependent multimedia
storage organization
buffer space
different media
consumption rates
multimedia tasks
task switching
bandwidth requirement
disk storage
disk latency
buffer requirements
lower bound
disk access
bandwidth utilization
bandwidth requirements
media objects
session switching
additional multimedia
intermedia synchronization
continuous media
physical data
optical disks
physical storage
seek latencies
robin scheduling
probabilistic model
multimedia applications
data organization
time tasks
buffer constraints
continuous retrieval
conventional rotating
system transfers
delivery requirements
required buffering
dependent multimedia data
file system must
multimedia file system
disk seek latency
organization for multimedia
physical data organization
round robin scheduling
real time tasks
real time requirements
sessions including bandwidth
physical storage organizations
seek latencies and
parallel disk array
multimedia data delivery
task switching latencies
file system transfers
additional disk bandwidth
compressed ntsc video
grouped sweeping scheme

corpus/krapavin2000-test/627797.txt
itemsets
mining
sites
pruning
partitions
databases
rules
items
hashing
broadcasting
rs
support counts
association rules
large itemsets
local pruning
local support
support count
count exchange
mining association
minimum support
heavy itemsets
data mining
global support
distributed database
apriori algorithm
association rule
polling sites
heavy k
distributed databases
distributed mining
message communication
parallel mining
gen function
parallel environment
th iteration
rule mining
direct application
set generation
set x
database mining
local support counts
mining of association
candidate sets in
mining association rules
candidate sets at
candidate sets and
globally large itemsets
support count exchange
rules in distributed
heavy k itemsets
number of sites
local support count
large k itemsets
minimum support threshold
remaining candidate sets
candidate set generation
global support counts
global support count
prune away some
association rule mining
o n messages

corpus/krapavin2000-test/627803.txt
itemsets
mining
processors
rules
pruning
partitioning
items
databases
repartitioning
discovering
counting
balancing
ling
bases
ning
association rules
frequent itemsets
distribution algorithm
candidate distribution
data mining
mining association
hash filter
count distribution
data distribution
candidate generation
local data
serial algorithm
aggregate memory
distribution algorithms
association rule
rule mining
parallel algorithms
apriori candidate
minimum support
parallel mining
support counts
knowledge discovery
parallel data
generating rules
support count
distributed mining
large databases
generation procedure
larger datasets
local candidate
first pass
large data
association mining
single pass
candidate itemsets
whose support
k using
mining association rules
count distribution algorithm
data distribution algorithm
candidate distribution algorithm
association rule mining
apriori candidate generation
three parallel algorithms
parallel data mining
mining of association
association rules data
candidate generation procedure
memory usage synchronization
computation communication memory
problem specific information
distributed association rule

corpus/krapavin2000-test/627813.txt
reprogramming
patterns
specifications
modifications
mechanisms
queries
promotes
classes
cooperating
programs
semantics
designers
avoiding
objects
specifying
enhancing
languages
raising
emphasizes
ling
dbms
propagation pattern
propagation patterns
class dictionary
dictionary graph
pattern refinement
behavioral refinement
schema modifications
schema modification
reuse mechanisms
schema evolution
polymorphic reuse
class vertex
oriented database
method annotations
application programs
propagation time
requirement changes
operational requirement
propagation constraints
schema changes
dictionary graphs
using propagation
code fragments
void print
document schema
propagation directives
demeter system
incremental design
behavioral abstraction
operational specifications
database specifications
suffix wrapper
propagation paths
target vertices
construction edges
operation propagation
database programs
alternation edges
path expressions
query specifications
class dictionary graph
propagation pattern refinement
propagation patterns and
propagation pattern ff
object oriented database
polymorphic reuse mechanisms
methods and queries
due to schema
propagation directive refinement
alternation reachable from
using propagation patterns
class dictionary graphs
refined propagation pattern
pattern refinement is
operation void print
avoiding or minimizing
reprogramming of methods
operational requirement changes
propagation patterns can
existing propagation patterns
patterns and propagation
queries due to
doc body components
printing trip itineraries
oriented database specifications
according to definition
oriented database system
incremental design and
propagation patterns to
behavioral refinement mechanism

corpus/krapavin2000-test/627818.txt
locking
serializability
restrictions
timing
interleaving
databases
objects
bounding
enforcing
updates
semantics
relaxing
scheduling
transactions
blocking
considerations
involving
constraints
semantic locking
compatibility function
semantic lock
temporal consistency
method invocation
locking technique
locking mechanism
concurrency control
logical consistency
speed attribute
return argument
control technique
return arguments
lock request
method invocations
import limit
object type
initial imprecision
epsilon serializability
imprecision amount
affected set
future method
bounded imprecision
rtsorac model
imprecision accumulation
imprecision procedure
data safety
priority queue
oriented database
general restrictions
export limit
lock requests
timing constraints
active lock
logical imprecision
consistency constraints
time concurrency
oriented databases
active locks
potential increase
introduce imprecision
simultaneous method
bound imprecision
affected sets
technique maintains
r using
metric space
correctness criterion
precise data
input arguments
semantic locking mechanism
semantic locking technique
concurrency control technique
method invocation request
semantic lock request
import limit r
future method invocation
real time object
object oriented database
initial imprecision procedure
write affected set
time concurrency control
data temporal consistency
inter object constraint
real time concurrency
temporal consistency constraints
locking technique maintains
two general restrictions
real time databases
based concurrency control
write affected sets
original r impamt
locking mechanism executes
maintain temporal consistency

corpus/krapavin2000-test/627837.txt
specifications
matching
analogies
matches
specification
reasoning
reusing
similarities
descriptions
projects
investigations
modifying
retrieving
relationships
facilitates
browsing
matching process
analogical matching
analogical matches
query specification
software reuse
software components
query spec
formal specifications
analogical match
matching algorithm
equivalence class
reusable software
analogical reasoning
modification process
partial matches
program modification
existing components
case matching
query specifications
input expressions
reusable components
software component
candidate specifications
reuse system
component specification
existing component
existing specification
automated reasoning
matching algorithms
process generates
commutative operators
method specification
formal methods
reasoning systems
determine software
analogical relationships
identical associations
doublelist modifies
e matching
candidate components
predicate connectives
method destroy
conceptual distance
computing similarity
sorted specifications
analogical matching process
based on analogy
tiered hierarchy of
matching process generates
reusable software components
components based on
components to satisfy
determine software reuse
based on analogies
domain specific information
method doublelist modifies
implementation query program
program that satisfies
order sorted specifications
specifications can be
incorporated into the
based on the
applied to the
program modification model

corpus/krapavin2000-test/627843.txt
tuples
partitioning
partitions
overflows
buckets
loading
gridfiles
files
blocks
sorting
aggregating
orders
sampling
seeks
creating
dp algorithm
bucket utilization
data sets
total overflow
cfd data
bulk loading
rectilinear partitioning
bucket utilizations
aggregation phase
grid directory
fixed partitioning
partitioning algorithm
o p
grid files
dynamic programming
aggregation algorithm
bucket capacity
unique attribute
physical partitioning
skewed data
phase bulk
logical partitioning
et al
distributed data
attribute values
number of partitions
number of tuples
li et al
cfd data sets
aggregation post aggregation
unique attribute values
uniformly distributed data
rectilinear partitioning algorithm
average bucket utilizations
tuple size increases
average bucket utilization
post aggregation partitions
two phase bulk
four orders of
dynamic programming solution
find the smallest
synthetic data sets

corpus/krapavin2000-test/627846.txt
queries
semantics
theories
tuples
troubleshooting
databases
languages
relations
rules
reasoning
deciding
melting
noncollapsing
malfunctioning
default logic
default theory
dql queries
query language
o query
expressive power
boolean dql
normal dql
database instance
boolean query
default rules
query languages
normal default
open defaults
default theories
default query
maximal trust
relational databases
o queries
background knowledge
boolean queries
intuitive meaning
polynomial time
database query
electric circuit
complexity class
database instances
credulous semantics
logic programming
minimal sets
skeptical semantics
logic programs
abductive diagnosis
strategic companies
relation instance
polynomial hierarchy
complexity classes
stable models
output relation
relevant facts
diagnostic problem
extensional relations
possible causes
data complexity
output relations
second order logic
produce all products
boolean dql queries
normal dql queries
database instance w
normal default theories
relational database query
based on default
default query language
credulous default semantics
deciding whether a
first order queries
database query languages
computable in polynomial
existential universal fragment
rst order formulas
polynomial time queries

corpus/krapavin2000-test/627861.txt
libraries
faults
bookkeeping
errors
databases
answering
regarding
processes
establishing
attributing
constitutes
failures
maintaining
suggesting
relevant words
functional testing
bookkeeping libraries
error data
functional changes
answering system
question answering
experimental databases
development processes
historical data
possible changes
library entries
microcode development
routine accesses
error tracking
possible change
computer systems
different development
development process
development cycle
entire development
development bookkeeping
database question
computer implementations
computer system
defined specifications
possible words
question answering system
ibm 4381 and
different development processes
error tracking libraries
database question answering
development bookkeeping library
possible change category
issues related to
given that the
error prediction models
development processes ffl

corpus/krapavin2000-test/627878.txt
servers
queries
descriptions
services
ranking
expressions
measures
similarities
searching
rs
users
ests
atomic descriptor
atomic descriptors
server descriptions
boolean expressions
similarity measures
boolean expression
resource discovery
relevant servers
distributive law
server description
boolean similarity
user query
similarity measure
confidence interval
user queries
boolean queries
binary trees
logical operators
query q
space complexity
internet resource
rank servers
original boolean
server model
similarity values
complicated boolean
n server
information retrieval
individual similarity
cluster representatives
n servers
retrieval systems
directory of services
compact atomic descriptor
reduced atomic descriptors
compact atomic descriptors
boolean similarity measures
number of descriptors
danzig boolean similarity
two boolean expressions
similarity measure s
reduced atomic descriptor
user query and
number of documents
determine relevant servers
boolean expressions to
internet resource discovery
original boolean expression
disjunctive normal form
similarity value s
n server descriptions
boolean expressions and

corpus/krapavin2000-test/627899.txt
literals
semantics
negations
pres
alternating
programs
deleting
conflicting
removing
fixpoints
pi r
justified wrt
partial model
wrt m
justified model
coherence semantics
revised program
revision semantics
assumption removal
coherence approach
negative justification
removal approach
assumed negations
argumentation semantics
pi n
extended program
program revision
alternating fixpoint
logic programs
complementary literals
belief revision
assume l
founded semantics
maximal fixpoint
normal alternating
valued interpretation
extended programs
semantical properties
maximal cj
partial models
credulous argumentation
justified models
literal l
logic programming
logic program
problematic assumptions
coherence theory
credulous coherence
classical negation
stable model
skeptical coherence
maximal justified
contradiction problem
justified literals
skeptical revision
extended logic
maximal consistent
regular model
justified wrt m
cj partial model
positively justified wrt
negatively justified wrt
assumption removal approach
founded model of
pair of complementary
skeptical partial model
normal alternating fixpoint
credulous argumentation semantics
alternating fixpoint of
credulous coherence semantics
logic program revision
approach to logic
coherence approach to
cumulativity negative justification
rel pi s
skeptical coherence semantics
skeptical and credulous
cannot be derived

corpus/krapavin2000-test/627906.txt
mining
references
sequences
patterns
hashing
ming
traveling
browsing
pruning
vir
shing
authoring
rules
databases
determining
users
environments
large reference
reference sequences
maximal forward
traversal patterns
reference sequence
internal nodes
algorithm mf
mining traversal
database scans
association rules
information providing
algorithm ss
data mining
algorithm fs
user access
selective scan
traversal path
d f
transaction database
frequent traversal
reference path
wide web
mining association
large k
log data
various parameters
path traversal
providing environment
candidate references
backward references
candidate reference
traversal pattern
meaningful user
sensitivity analysis
sequential patterns
large itemsets
international conference
pattern mining
access patterns
interactive access
original log
original sequence
access sequences
mining capability
involves mining
backward reference
pruning techniques
knowledge discovery
large reference sequences
maximal forward references
mining traversal patterns
determining large reference
maximal forward reference
large reference sequence
world wide web
mining association rules
hashing and pruning
providing environment where
determine large reference
meaningful user access
selective scan ss
frequent traversal patterns
information providing environment
path traversal patterns
forward references obtained
objects are linked
maximal reference sequences
large k references
environment where documents
facilitate interactive access
data mining capability
large k reference
documents or objects
full scan fs
information providing services
user access sequences
option of determining
database scans required
maximal reference sequence
new data mining
user access patterns
database size increases
improved with the

corpus/krapavin2000-test/627922.txt
documents
collections
os
multidatabase
attributes
joins
ds
ir
queries
storing
statistics
reviewers
automating
comparing
file entries
algorithm hhnl
algorithm hvnl
algorithm vvm
file entry
document collections
backward order
document collection
memory space
intermediate similarities
outer collection
textual attributes
real collections
inverted files
term numbers
simulation results
distinct terms
largest similarities
inner collection
similarity values
collection use
integrated algorithm
multidatabase system
available memory
much memory
consecutive retrieval
global schema
textual type
zero similarities
similar observations
whose corresponding
inverted file entries
number of documents
held in the
two document collections
inverted file on
theta theta vvs
intermediate similarity values
number of terms
also appears in
processing joins between
attributes of textual
using the inverted
inverted files on
likely to perform
inverted file is
documents in one
input document collections
ascending term numbers

corpus/krapavin2000-test/627933.txt
declustering
gis
polygons
processors
balancing
queries
partitioning
bounding
transferring
filtering
parallelizing
objects
alternatives
clipping
chains
segments
subsets
estimating
collections
achieving
allocating
issues
range query
range queries
spatial extent
declustering methods
similarity graph
query problem
static declustering
declustering method
load balancing
spatial objects
dynamic load
spatial data
dlb methods
declustering problem
idle processor
bounding box
extended objects
different processors
polygonal data
polygon data
processor idling
intersection computation
local load
intersection points
local data
load imbalance
main memory
different declustering
query operation
approximate filtering
total work
balancing methods
average speedups
good load
static part
static gives
dlb issues
systematic declustering
static execution
donor processor
gis operations
balancing techniques
p processors
local processing
bounding boxes
spatial object
geographic information
high performance
dynamic load balancing
extended spatial objects
extended spatial data
among different processors
static declustering methods
number of edges
issues in declustering
declustering methods for
good load balance
different declustering methods
local load balance
load balancing methods
improved by using
collections of extended
methods for parallelizing
real time terrain
static execution time
due to the
number of polygons
declustering method is

corpus/krapavin2000-test/627934.txt
instants
expressions
attributes
ins
languages
string
ensuring
databases
querying
multimedia
path expression
path expressions
temporal expression
time instants
temporal expressions
temporal object
e e
time intervals
mary dole
temporal path
first instant
static attribute
temporal value
temporal attributes
temporal context
query languages
e dom
last interval
correctness conditions
temporal interpretation
expression equality
current time
specific class
boolean expressions
oriented data
navigational approach
static attributes
temporal values
navigational accesses
last instant
temporal types
object belongs
attribute access
te n
expression denotes
temporal query
conditions ensuring
temporal data
query language
relational data
e ar
structured types
legal values
object denoting
temporal type
strong interpretation
oriented model
oriented database
boolean expression
oriented databases
terminal path expression
temporal path expression
path expression equality
temporal path expressions
oriented query languages
following are examples
object oriented database
first instant te
terminal path expressions
last instant te
conditions ensuring that

corpus/krapavin2000-test/627971.txt
images
multimedia
features
querying
descriptions
media
annotations
queries
attributes
databases
browsing
retrieving
bounding
image retrieval
visual features
video retrieval
based image
spatial relationships
wide web
retrieval system
color regions
structured descriptions
object recognition
retrieving images
retrieval systems
database systems
local features
bounding rectangles
minimum bounding
relational database
defined attributes
content modeling
significant colors
texture regions
video segmentation
relevant images
sketch retrieval
images similarity
brain tumors
retrieval methods
imaging systems
based image retrieval
world wide web
video retrieval systems
features such as
minimum bounding rectangles
dct transform coefficients
content modeling indexing
available for certain
images and video
significant color regions
video compression standard
attributes such as
relational database systems
whether they are

corpus/krapavin2000-test/627982.txt
generalizability
subdomains
learning
hypotheses
generalization
anomalies
ordering
measures
heuristics
concepts
routing
probabilities
chervonenkis
strategies
measuring
credit assignment
performance values
baseline hypothesis
across subdomains
median performance
test cases
symmetric improvement
generalizability measures
temporal credit
normalization methods
performance ordering
generalization strategies
based learning
intensive methods
domain knowledge
training examples
geometric mean
new parameter
different subdomains
negative examples
different ranges
genetic algorithms
concept learning
temperature finishing
different normalization
called probability
measuring generalizability
neural networks
performance measures
estimation error
performance value
classifier systems
generalization problem
parameter values
statistical methods
average performance
valid generalization
different ordering
learning and generalization
hypothesis is better
temporal credit assignment
placement and routing
symmetric improvement ratio
positive training examples
performance across subdomains
knowledge intensive methods
temperature finishing point
called probability of
symmetric improvement ratios
artificial neural networks
achieved generalizability measures
solutions in measuring

corpus/krapavin2000-test/628000.txt
iris
rules
extracts
premises
extracting
networks
pruning
combinations
decisions
architectures
learning
factors
refining
ordering
experts
mapping
extracted rules
rule extraction
breast cancer
input features
extract rules
trained network
extracted rule
neural networks
extraction techniques
neural network
extracts rules
extracting rules
input feature
rule evaluation
certainty factors
trained networks
discretization boundaries
output decisions
evaluation procedure
completeness measure
certainty factor
network architectures
re technique
data sets
output mapping
cancer data
extraction approaches
extraction approach
binary rules
final rules
original input
hybrid systems
domain knowledge
performance measures
available data
input patterns
connectionist architecture
rule ordering
weighted links
fuzzy rules
activation values
binary inputs
extraction algorithm
output decision
rule base
extraction technique
rules extracted by
rule extraction techniques
number of premises
extracting rules from
rules extracted from
iris and breast
rules from trained
extracted rules are
rule evaluation procedure
trained neural network
three performance measures
three rule extraction
breast cancer data
set of rules
rules from networks
rule extraction approaches
rule ordering algorithm
rules based on
trained neural networks
simple boolean expression
extracted rules a
rule extraction technique
original input features
rule extraction algorithm
rule extraction approach
sets extracted by
initial domain knowledge
breast cancer databases
partial re algorithm
hidden nodes activation

corpus/krapavin2000-test/628007.txt
leases
clients
invalidations
servers
messages
cache
polling
workloads
caching
volumes
protocols
periods
caches
objects
sending
amortizing
awards
accessing
maintaining
gifts
microsystems
volume leases
volume lease
object leases
stale data
invalidation messages
object lease
cache consistency
strong consistency
delayed invalidations
unreachable set
lease algorithms
lease expires
server state
lease algorithm
lease renewal
cached objects
consistency algorithms
client polling
volume algorithms
client reads
object invalidation
short leases
notify clients
valid leases
effort volume
callback algorithm
network failure
inactive clients
disconnected clients
short volume
cached data
weak consistency
cached copies
fewer messages
file systems
consistency protocols
delayed invalidation
leases with delayed
invalidation messages to
number of clients
best effort volume
see stale data
number of messages
whose volume leases
leases reduce the
volume lease algorithms
clients whose volume
objects are modified
object invalidation messages
hold valid object
effort volume leases
distributed file systems
cache consistency protocols
volume lease timeouts
randal c burns
robert m rees
valid object lease
delayed invalidations algorithm
volume lease expires
valid object leases
short volume leases
cache consistency algorithms
large scale systems

corpus/krapavin2000-test/628018.txt
colonies
activities
matrices
heuristics
ant system
quadratic assignment
assignment problem
ant colonies
local search
best solutions
good solutions
objective function
et al
system algorithm
partial assignment
lower bound
evolutionary heuristics
location h
complete permutation
potential goodness
metaheuristics computer
n locations
lower bounds
quadratic assignment problem
local search procedure
ant system algorithm
artificial life v
distributed heuristic algorithm
computer decision making
decision making kluwer
potential goodness ij

corpus/krapavin2000-test/628025.txt
interestingness
patterns
ranking
confirming
matching
mining
measures
uninteresting
finding
expectations
asking
databases
discovered patterns
unexpected patterns
actionable patterns
expected patterns
subjective interestingness
discovered pattern
conditional parts
knowledge discovery
expected pattern
data mining
patterns according
objective measures
interesting patterns
subjective measures
classification patterns
interestingness measures
fuzzy matching
semantic rule
action pattern
previous knowledge
action patterns
intuitive feelings
interestingness problem
higher w
domain knowledge
proposed method
user patterns
unexpected consequent
ranking results
finding unexpected patterns
finding actionable patterns
patterns according to
low matching values
according to their
set of patterns
specified action pattern
discovered patterns according
proposed technique is
fuzzy matching technique

corpus/krapavin2000-test/628028.txt
categorization
documents
categories
learning
collections
classifiers
stories
weighting
classifying
automatic categorization
parameter selection
hersh corpus
retrieval performance
text retrieval
selection process
categorization approach
training collection
text categorization
test collection
retrieval feedback
parameter combinations
categorization process
mesh categories
vocabulary differences
document collection
manual categorization
parameter values
document frequency
assigned categories
categorization performance
based learning
quality metrics
heart disease
categorization strategies
automatic text
term frequency
performance using
retrieval experiments
test query
medline test
appropriate categories
test collections
query representations
medline database
learned categories
perspective results
perspective hersh
parameter selection process
free text vector
advanced query design
category extraction process
category perspective metric
automatic categorization approach
automatic text categorization
automatic categorization strategies
decision perspective metric
mesh category vectors
inverse document frequency
performance compared with
retrieval performance compared
different parameter combinations
perspective hersh corpus
performance achieved using
free text portion
training document collection
using manual categorization
compared with no
retrieval performance achieved
point average precision
different automatic categorization
individual test query
based learning and
text categorization and

corpus/krapavin2000-test/628030.txt
copies
writes
clusters
disconnections
updates
ies
transactions
sites
networking
clients
reconciling
trans
semantics
modes
environments
protocols
users
barriers
databases
weak transactions
strict transactions
core copies
quasi copies
strict transaction
weak transaction
intracluster schedule
weak read
weak connectivity
weak operations
copy serializability
serial schedule
networking conditions
weak writes
among copies
serialization graph
response time
strict operations
weak write
bounded inconsistency
database state
consistency requirements
disconnected operation
read operation
connected sites
replication schema
mobile computing
different clusters
integrity constraints
available bandwidth
correctness criterion
divergent copies
disconnection intervals
coherency control
copy serial
d consistency
write operations
data contention
local quasi
write operation
strict consistency
weak and strict
number of messages
serial schedule s
weak transaction wt
intracluster schedule s
st j reads
transactions can be
transactions do not
transactions at different
strongly connected sites
read and write
data located at
local quasi copies
among copies located

corpus/krapavin2000-test/628040.txt
queries
accesses
trees
buffering
estimations
proposals
databases
distributions
multimedia
objects
grouping
l r
r l
join queries
r r
data sets
selection queries
node rectangles
range queries
node accesses
cost models
data properties
disk accesses
real data
spatial data
window q
using r
spatial queries
uniform data
average size
spatial joins
tree indexes
tree index
analytical formulae
relative error
access methods
average number
spatial query
uniformity assumption
analytical estimations
r n
experimental results
data distributions
spatial objects
dimensional data
analytical model
actual density
average extent
query processing
d r
cost model
cost estimation
query optimization
spatial databases
queries using
indexing methods
spatial selection
wide set
spatial join
tree structure
l r s
query window q
non uniform data
r tree indexes
average size s
real data sets
illustrated in figure
data properties only
node disk accesses
synthetic and real
queries using r
spatial query processing
relative error being
tree structure s

corpus/krapavin2000-test/628041.txt
rectangles
pinning
queries
accesses
trees
packing
buffering
theodoridis
levels
bounding
databases
nodes
ignoring
policies
studies
disk accesses
region queries
buffer model
point queries
loading algorithms
leaf level
region query
query performance
top levels
minimum bounding
top right
n queries
total area
packing algorithm
input rectangles
bounding rectangles
packing algorithms
new buffer
query model
many levels
level r
queries using
analytical model
cluster rectangles
fewer disk
tree packing
ignoring buffer
retrieved rectangles
structured trees
number of nodes
disk accesses required
minimum bounding rectangles
new buffer model
bounding rectangles of
buffer model to
r tree using
r tree packing
region query model

corpus/krapavin2000-test/628045.txt
deadlines
resources
levels
managers
policies
caching
principles
operating
fair
multimedia
os
softening
satis
requirements
moving
processes
mechanisms
execution levels
execution level
resource manager
resource managers
dynamic negotiation
time applications
resource management
object manager
network bandwidth
operating system
distributed object
resource allocation
location caching
missed deadlines
dm scheduling
resource availability
resource usage
directed caching
application knowledge
strong consistency
gryphon distributed
user satisfaction
uses execution
maximum amount
time systems
time application
deadline miss
operating systems
kernel pipe
resource requests
weather modeling
conventional thread
planning room
soft real time
real time applications
execution levels to
epa dm scheduling
distributed object manager
location strong consistency
gryphon distributed object
thread thread application
using execution levels
execution level abstraction
real time systems
real time application
available cpu cycles
set of principles
application execution levels
mechanism execution levels
virtual planning room
conventional thread thread
dynamic qos manager
real time support
real time scheduling
provide a mechanism
according to the

corpus/krapavin2000-test/628048.txt
learning
networks
backpropagation
annealing
linguists
sentences
architectures
turing
binding
languages
encoding
principles
neural networks
recurrent network
recurrent networks
elman network
finite state
neural network
natural language
simulated annealing
stochastic update
state automata
grammatical inference
rate schedule
word inputs
network architectures
elman networks
native speakers
training data
deterministic finite
local minima
turing equivalent
discriminatory power
rate schedules
quadratic cost
n p
training algorithm
stochastic updates
innate components
learned vs
grammar g
negative examples
second order
native speaker
formal grammars
recurrent neural networks
finite state automata
recurrent neural network
neural network architectures
error surface plots
quadratic cost function
deterministic finite state
learning rate schedules
w z networks
extraction of rules
able to learn
gradient descent based
introduction to formal
elman narendra parthasarathy
sentences as grammatical
relative entropy cost
grammatical or ungrammatical
principles and parameters
initial learning rate
natural language sentences
second order recurrent
neural network models
neural computation v

corpus/krapavin2000-test/628059.txt
inds
fds
anomalies
dependencies
schemas
insertions
keys
databases
forms
relations
enforcing
subclasses
normalization
concluding
database schema
schema r
entity integrity
chase procedure
implication problem
modification anomalies
proper circular
insertion anomalies
normal form
ind r
generalised entity
relation schema
database design
noncircular inds
update anomalies
relation r
inclusion dependency
current state
normal forms
single tuple
circular inds
nontrivial ind
attribute redundancy
let r
inclusion dependencies
inference rule
redundancy problems
pullback inference
y r
non interaction
relational database
fds and inds
set of fds
set of inds
database schema r
generalised entity integrity
fds and noncircular
inclusion dependency normal
f and i
database schema and
dependency normal form
codd normal form
free normal form
problem for fds
proper circular inds
schema is in
update anomalies and

corpus/krapavin2000-test/628066.txt
itemsets
mining
intersections
lattices
items
pruning
subsets
databases
enumerating
rules
covering
discovering
sublattices
sampling
customers
counting
nding
frequent itemsets
maximal clique
frequent itemset
maximal frequent
maximal cliques
new algorithms
association rules
equivalence relation
database scans
smaller classes
boolean lattice
minimum support
list intersections
frequent items
association mining
data mining
minimal infrequent
equivalence class
equivalence classes
min sup
top element
search space
horizontal database
maximal itemsets
vertical tid
maximal elements
previous level
mining association
support counting
lexicographic order
itemset search
maximal frequent itemsets
tid list intersections
number of transactions
reverse lexicographic order
locally frequent itemsets
clique maxeclat maxclique
association mining task
non maximal ones
vertical tid list
association graph increases
itemsets and their
within each sub

corpus/krapavin2000-test/628075.txt
diseases
probabilities
diagnostics
finding
statistics
reasoning
constructing
tables
networks
combinations
dealing
introducing
bayesian networks
conditional dependence
probability tables
conditional independence
bayesian net
partial statistics
conditional probability
probabilistic networks
joint probability
problem domain
medical diagnostics
overconfident diagnosis
unmodeled diseases
diagnostic systems
bayesian network
expert systems
posterior probabilities
probability distribution
knowledge engineering
specificity data
numeric information
conditional dependency
generative direction
bayesian subnetworks
diagnostic direction
several diseases
indirect statistics
pathophysiological states
reliable methods
belief updating
sensitivities and specificities
conditional probability tables
networks for medical
diseases to findings
unmodeled conditional dependence
local conditional probability
conditional probability distribution
bayesian networks and
proposed bayesian subnetworks
myocardial infarction mi
number of probabilities
resulting network represents

corpus/krapavin2000-test/628087.txt
triggers
sting
mining
updates
insertions
subtriggers
deletions
warehousing
clusters
ts
databases
queries
clustering
users
ins
evolving
leaf level
trigger condition
spatial data
data mining
level cells
composite event
trigger evaluation
statistical information
composite events
attribute condition
cellular phones
squared miles
active spatial
interior boundary
attribute values
cellular phone
hierarchical structure
query processing
mining triggers
defined triggers
active period
attribute conditions
defined trigger
update occurs
spatial databases
average number
higher levels
active data
spatial data mining
level sub triggers
expand sub triggers
density sub triggers
leaf level cell
leaf level cells
deletion sub triggers
insertion sub triggers
attribute sub triggers
shrink sub triggers
amount of updates
number of objects
intermediate level sub
accumulated amount of
active spatial data
categories of triggers
active data mining
trigger condition to
statistical information grid
trigger will be
n m s

corpus/krapavin2000-test/628088.txt
objects
querying
multimedia
queries
relationships
languages
databases
media
editing
constraints
relations
modeling
video data
generalized interval
generalized intervals
query language
video sequence
constraint query
order constraints
semantic objects
query languages
based query
querying video
video information
declarative rule
video database
video databases
set constraints
database systems
video sequences
inequality constraints
natural way
new sequences
constraint paradigms
infer relationships
atomic constraints
primitive constraint
virtual editing
new techniques
query answers
video applications
video data model
generalized interval objects
constraint query language
set order constraints
based query language
modeling and querying
querying video data
order inequality constraints
much more declarative
language that can
objects and constraints
interpreted function symbol
sad hacid farouk
generalized interval object
declarative and natural
build new sequences
constraint query languages
fix point semantics
primitive atomic constraints
framework presented here
models and query
hacid farouk toumani
ahmed k elmagarmid

corpus/krapavin2000-test/628095.txt
ts
semantics
reasoning
constraints
programs
encoding
scheduling
instances
expresses
gramming
weak constraints
stable model
delta p
stable models
strong constraints
brave reasoning
incompatible courses
weak constraint
disjunctive datalog
logic programming
model semantics
strong constraint
p sch
sigma p
c program
program lp
time slots
disjunctive logic
program p
true w
violated instances
datalog programs
literal q
rule r
logic programs
h p
knowledge representation
positive program
complexity results
c programs
complete problems
log n
polynomial hierarchy
different priorities
expressive power
lp satisfying
input deciding
optimization problems
graph theory
interpretation m
propositional case
disjunctive programs
abductive logic
ground instances
polynomial time
logic program
input facts
cardinality criterion
stable model semantics
datalog c programs
weak constraint w
assign x ts
semantics for disjunctive
instances of weak
strong constraint s
constraints do not
disjunctive logic programming
knowledge representation and
strongly incompatible courses
abductive logic programming
disjunctive logic pro
minimum cardinality criterion
semantics of disjunctive
program p sch

corpus/krapavin2000-test/628097.txt
channels
locking
actions
conflicting
aborting
violations
timing
transactions
scheduling
databases
requirements
requests
trans
covert channel
mutual information
miss percentage
covert channels
access class
concurrency control
level transaction
low transaction
deadline miss
high priority
locking protocol
secure concurrency
lower access
phase locking
low priority
high transaction
time database
higher access
control mechanism
channel analysis
secure real
virtual lock
delay security
feedback control
secure database
multilevel secure
priority transaction
transaction submits
time secure
time requirements
lock holding
data operation
lock holders
low level
database systems
value security
recovery security
earlier deadline
real lock
higher level
time databases
serialization order
security requirements
time concurrency
multiversion locking
greater priority
deadline miss percentage
two phase locking
secure concurrency control
phase locking protocol
low level transaction
real time database
high level transaction
covert channel analysis
desired miss percentage
real time requirements
low user aborts
real time secure
security and real
covert channels that
high level transactions
time secure concurrency
low transaction submits
high user sends
feedback control mechanism
high priority transaction
real time databases
time database systems
concurrency control mechanism
time concurrency control
real time concurrency
secure database systems
lock holding transaction
subject classification levels
mutual information to
multiversion locking protocol
time database system
resultant covert channel
concurrency control approaches

corpus/krapavin2000-test/628100.txt
approximations
joins
descriptions
transmitting
lis
gis
objects
databases
relations
trees
bounding
costs
saving
families
os
strategies
varying
sweeping
mapping
locational keys
spatial descriptions
r tree
spatial join
final join
transmission cost
spatial semijoin
false drops
based algorithms
join processing
spatial joins
join algorithms
local processing
spatial databases
spatial description
dimensional approximations
spatial relations
spatial objects
join strategies
object mapping
semijoin algorithms
r trees
spatial database
data sets
semijoin operator
distributed join
spatial relationships
join operation
minimum bounding
tree index
key algorithms
merge join
dimensional approximation
different relation
query processing
spatial data
dimensional object
spatial query
spatial indexes
approximation functions
conventional semijoin
total processing
land information
distributed spatial join
distributed spatial databases
spatial join processing
spatial join algorithms
key based algorithms
local processing cost
total time comm
approximations obtained from
large spatial descriptions
communication bandwidth varies
transmission cost and
two families of
multi dimensional approximation
spatial database system
small spatial descriptions
different relation sizes
single dimensional object
locational key algorithms
dimensional object mapping
total time sec
spatial semijoin operator
dimensional approximations obtained
based spatial join
several spatial join
dimensional locational keys
local processing costs
spatial join strategies
total processing cost
lists of locational
locational key values
families of algorithms

corpus/krapavin2000-test/628111.txt
hashing
mining
pruning
candidates
pairs
rules
running
items
filtering
documents
clustering
hash values
false negatives
false positives
min hashing
column c
hash value
c j
running time
total running
column pair
association rules
similar columns
priori algorithm
sec running
low support
hashing scheme
high confidence
similar pairs
high support
support requirement
similar column
candidate generation
sensitive hashing
high similarity
data mining
news articles
synthetic data
main memory
h c
candidate pairs
support pruning
second phase
association rule
real data
collaborative filtering
min hash values
total running time
sec running time
min hashing scheme
time sec running
total time sec
k min hashing
similar column pairs
k mh algorithms
column c j

corpus/krapavin2000-test/628118.txt
encoding
weights
inputs
networks
scaling
growing
units
machines
strategies
tures
discrete state
state tree
state rnn
neural networks
exclusive encoding
sigmoid rnn
activation function
tree automata
rnn using
analog unit
output function
deterministic nite
threshold linear
neural network
hot encoding
linear unit
analog rnn
activation functions
scaling factor
lower saturation
growing activation
possible rank
neural nets
state units
dierent schemes
state function
weight values
computational power
function g
binary input
adaptive processing
binary inputs
constructive proof
input vectors
state machines
stable encoding
smaller weight
state vectors
state splitting
unit using
neural architectures
theoretical formalizations
alternate encoding
saturation level
discrete state rnn
recursive neural networks
recursive neural network
order moore rnn
encoding of the
recurrent neural networks
discrete time recurrent
time recurrent neural
rnn using tlu
strategies to encode
threshold linear unit
nite state machines
recursive neural nets
next state function
next state functions
sigmoid recursive neural
discrete state units
state rnn using
state tree automata
deterministic nite state
scaling factor for
minimum h satisfying
deterministic nite automata
rnn using discrete
bounded real inputs
binary input vector
second order discrete

corpus/krapavin2000-test/628121.txt
folding
shattering
learning
trees
inputs
networks
generalization
bounds
encoding
dynamics
dealing
architectures
decoding
mapping
generalizes
concerning
folding networks
empirical error
fat shattering
shattering dimension
function class
learning algorithm
initial context
folding architecture
real error
activation function
valid generalization
distribution independent
concrete learning
activation functions
vc dimension
forward part
high trees
folding network
context y
input trees
r l
input tree
derive bounds
structured data
recursive part
underlying regularity
folding architectures
theoretical learnability
neural networks
generalization error
input space
fat ffl
processing dynamics
combinatorial quantity
connectionistic methods
sigmoidal function
context neurons
unlimited size
recursive nature
explicit bounds
function classes
distributed representation
r m
fat shattering dimension
small empirical error
number of examples
feed forward networks
maximum input height
us to derive
information theoretical learnability
initial context y
independent uced property
empirical error and
concrete learning algorithm
valued function class
guarantee valid generalization
folding networks a
shattering dimension of
learnability of folding
recurrent neural networks
real vector space
learning algorithm is
derive explicit bounds
concrete training set
feed forward architectures
tree structured inputs
time series prediction

corpus/krapavin2000-test/628123.txt
pulsing
constituents
ssns
sentences
parsing
generalisations
learning
outputs
relationships
grammars
parsers
outputting
occurring
networks
representations
binding
entities
architectures
encoding
experiments
degrades
non pulsing
pulsing units
occurring text
parse tree
natural language
structural relationships
output units
synchrony networks
simple synchrony
noun phrase
o n
child relationships
structural constituents
term memory
pulsing inputs
basic ssn
tsvb networks
ssn architectures
structured output
syntactic parsing
output activation
output representations
ssn architecture
generalisation ability
connectionist network
current word
output unit
connectionist architecture
correct constituents
statistical parsers
constituent structure
stm mechanism
standard connectionist
temporal synchrony
noun phrases
distributed representation
input unit
output representation
syntactic structures
connectionist networks
statistical language
simple recurrent
parse trees
structure representing
form constituents
language parsing
standard task
naturally occurring text
non pulsing units
simple synchrony networks
corpus of naturally
short term memory
parent child relationships
number of words
word tag s
learning to parse
average precision recall
number of constituents
sentences drawn from
synchrony networks ssns
non pulsing unit
basic ssn architecture
non pulsing input
hierarchical structure representing
connectionist language learning
statistical language learning
g p s
natural language parsing
synchrony variable binding
current word tag
parent child relationship
english sentences drawn
ssn architecture to
input output representation
non pulsing pulsing
structured output representations
natural language sentences

corpus/krapavin2000-test/628124.txt
triplets
vectors
learning
matrices
concepts
embedding
representations
relations
maximizing
multiplying
missing
family tree
number problem
tree problem
modular number
goodness function
relational embedding
r c
concept vectors
principal components
semantic features
distributed representations
correct answer
english people
tree task
correct answers
third term
person belongs
using gradient
binary relations
line connects
vector endpoints
discriminative goodness
distributed encoding
obtained optimizing
dynamical systems
consecutive numbers
new concepts
generalization performance
family tree problem
modular number problem
linear relational embedding
concepts and relations
randomly chosen out
triplets randomly chosen
distributed representations of
family tree task
complete all the
used for training
omitted from the
representations of concepts
solid line connects
modied goodness function
principal components number
correctly complete all
new concepts and
using lre on
discriminative goodness function
representing consecutive numbers
learned distributed encoding
squared distance between
minimize the squared
learning distributed representations
principal components analysis
latent semantic analysis

corpus/krapavin2000-test/628132.txt
images
meaning
databases
interfaces
semantics
media
feature space
display space
query space
visual concept
el nin
image databases
distance function
visual concepts
emergent semantics
similarity measure
image data
vector quantization
user interaction
whole database
dimensional display
image space
image database
function f
current database
traditional databases
f f
interaction involving
meaning of an
feature space f
set of images
number of coecients
dimensional feature space
moving images around

corpus/krapavin2000-test/628133.txt
segments
keywords
transcripts
items
clustering
newscasts
belonging
raising
matching
relationships
scripts
composing
unstructured metadata
transitive search
news item
news items
video data
video segments
structural metadata
structured metadata
annotated metadata
content metadata
related segments
similarity distance
video composition
union operation
retrieval technique
binary relationship
automatic composition
segment weighting
process diagram
structured objects
digital video
composition system
potential news
time relationships
increase recall
retrieval techniques
search technique
query matching
proposed hybrid
query processing
hybrid approach
hybrid metadata
broadcast news
caption data
transitive retrieval
related segment
segment transcripts
retrieved segments
initial segment weighting
among the segments
query q s
belonging to a
within video data
creation time relationships
hybrid retrieval technique
number of keywords
video composition system
news video data
retrieve corresponding semi
transitive search technique
closed caption metadata
closed caption data
step hybrid approach
potential news items
segments related to
single news item
introduction field scene
different retrieval techniques
matched object ids
free form text
theta max s
step hybrid retrieval

corpus/krapavin2000-test/628140.txt
subtransactions
subtransaction
hddbs
compensating
serializability
aborts
ls
commits
switching
transactions
scheduling
trans
blocking
avoids
ds
effects
enforcing
alternatives
autonomy
databases
maintains
fails
ensures
flexible transaction
flexible transactions
serialization point
global transaction
local site
global transactions
concurrency control
local transactions
cascading aborts
compensating subtransaction
local database
compensating subtransactions
global serializability
serialization order
data items
global schedule
site ls
serializable schedules
global concurrency
database state
database consistency
distributed database
transaction model
global subtransactions
local sites
invalid subtransactions
global database
control criterion
cascading compensations
global subtransaction
scheduling protocol
consistent database
heterogeneous distributed
local transaction
local databases
surplus transactions
integrity constraints
database systems
global consistency
value dependencies
semantic atomicity
transaction management
committed subtransactions
flexible trans
retriable subtransactions
serialization points
avoid cascading
compensatable subtransaction
compensating transaction
flexible transaction t
local site ls
global concurrency control
global schedule s
avoiding cascading aborts
flexible and local
heterogeneous distributed database
consistent database state
concurrency control criterion
globally serializable schedules
subtransactions which are
flexible transaction may
transaction t i
global database consistency
global transaction manager
serialized between a
flexible transaction model
concurrency control protocol
local database systems
global transaction g
submitted to the
transactions t i
partial order t
entire flexible transaction

corpus/krapavin2000-test/628151.txt
disks
layouts
streams
striping
designs
reconstruction
declustering
servers
organizations
calculations
arrays
accesses
ms
failures
buffering
multimedia
streaming
reading cycle
per stream
dispersal factor
video server
sid data
data layouts
disk failure
video servers
data organization
information dispersal
storage capacity
segmented information
sid designs
single disk
check data
degraded mode
video stream
disk arrays
slice size
redundancy ratio
redundant data
data organizations
video data
surviving disks
disk failures
grain striping
video slice
buffer space
bit rate
round robin
rotational latencies
buffer starvation
tolerant video
single failure
raid 5 and
raid 5 or
segmented information dispersal
raid 5 data
number of streams
single disk failure
5 data layout
data layout and
fault free performance
video server designs
fault free operation
single video stream
sid data organization
disk array declustering
raid 3 or

corpus/krapavin2000-test/628163.txt
patching
clients
tapping
streams
streaming
requests
merging
rates
media
multimedia
piggybacking
receiving
server bandwidth
client request
play rate
dynamic skyscraper
receive bandwidth
file play
stream tapping
request rate
immediate service
multicast stream
delivery techniques
delivery technique
optimized stream
stream merging
hierarchical multicast
request arrival
client requests
buffer space
provide immediate
skyscraper technique
transmission cluster
request rates
grace patching
skyscraper delivery
lower bound
controlled multicast
time service
poisson arrivals
practical delivery
multicast delivery
high client
client b
skyscraper system
broadcast techniques
request arrivals
interactive functions
real time
static broadcast
patch streams
multicast technique
average server
optimized patching
bandwidth savings
greater server
n r
new stream
total server
time delivery
request arrives
new client
network bandwidth
constant factor
required server bandwidth
client receive bandwidth
file play rate
client request rate
optimized stream tapping
stream tapping patching
immediate service to
immediate real time
client buffer space
multicast stream merging
hierarchical multicast stream
bandwidth equal to
bound on required
receive bandwidth equal
partitioned dynamic skyscraper
client request rates
provide immediate service
dynamic skyscraper technique
client request arrival
dynamic skyscraper delivery
technique that provides
real time service
stream tapping grace
service to clients
lower bound on
time service to
new practical delivery
mary k vernon
minimum required server
server bandwidth that
optimized dynamic skyscraper
high client request
dynamic skyscraper system
provides immediate service
dynamic skyscraper method
average server bandwidth
static broadcast techniques
original dynamic skyscraper
stream merging hmsm
server bandwidth to
delivery techniques that
client request arrivals
delivery technique that
real time delivery
controlled multicast technique
server bandwidth used
satellite or cable
greater server bandwidth
client request arrives
given client request
total server bandwidth
limited client buffer
request arrival rate
bandwidth used to
interactive client requests
skyscraper delivery technique
provide immediate real

corpus/krapavin2000-test/628166.txt
stratification
semantics
programs
databases
aggregates
queries
reasoning
arguments
mining
relations
ordering
constructs
answering
stable model
stable models
iterated fixpoint
choice construct
datalog program
deductive databases
stratified programs
topological sort
model semantics
stable version
recursive cliques
stratified negation
fixpoint procedure
temporal argument
stage arguments
h p
temporal reasoning
temporal arguments
stratified program
forgetful fixpoint
optimization techniques
nonmonotonic reasoning
syntactic restriction
assigned using
recursive predicates
iterative procedure
declarative semantics
nondeterministic choice
relation r
stable model semantics
major st area
iterated fixpoint procedure
iterated fixpoint semantics

corpus/krapavin2000-test/628189.txt
instantiations
attributes
confidences
pruning
mining
rules
disjunctions
supports
overlapping
satisfying
decreasing
exploring
permitting
tiations
discovering
optimized set
optimized confidence
association rules
optimized association
uninstantiated attributes
numeric attributes
graph search
association rule
overlapping instantiations
search space
high confidences
numeric attribute
optimized sets
search algorithms
either categorical
c satisfying
naive algorithm
minimum support
categorical attributes
search algorithm
non overlapping
uninstantiated conditions
stop extending
instantiated rules
contain disjunctions
confidence problem
decreasing order
first algorithm
optimal instantiations
confidence rule
uninstantiated attribute
atomic conditions
admissible regions
instantiated conditions
next instantiation
optimized confidence set
optimized association rules
number of instantiations
optimized confidence sets
optimized association rule
number of uninstantiated
graph search algorithm
categorical and numeric
non overlapping instantiations
either categorical or
computing optimized confidence
c satisfying constraint
association rules to
decreasing order of
supports and confidences
stop extending curset
optimized confidence problem
categorical or numeric
optimized support set
graph search algorithms
rules are permitted
number of tuples
attributes can be
mining optimized association
uninstantiated conditions of
uninstantiated attributes can

corpus/krapavin2000-test/628191.txt
representatives
items
clusters
clustering
correlations
associations
segments
discovering
men
attributes
transactions
databases
lowering
finding
groups
assigning
cluster representatives
random sample
aggregate data
categorical data
cluster representative
output clusters
clustering algorithm
basket data
market basket
association rules
k clusters
meta transactions
localized correlations
localized associations
target marketing
large databases
clustering method
aggregate analysis
common neighbors
overall dimensionality
clustering methods
among items
entire data
empirical results
transaction data
nearest neighbors
categorical attributes
significant percentage
find associations
localized segments
full database
final partitioning
number of clusters
market basket data
number of representatives
nearest neighbor lists
number of transactions
potentially large itemsets
pairs of items
clustering categorical data
cannot be found
finding cluster representatives
conclusions and summary
finding localized associations
useful for target

corpus/krapavin2000-test/628197.txt
sectors
qualifying
disks
tracks
cylinders
technologies
ms
devices
lying
capacities
striping
unifying
velocities
recording
multimedia
products
workloads
cs
modeling
retrieving
estimating
offs
rates
characteristics
insights
servers
proximal window
qualifying sectors
head switch
zcav disk
rotational delay
optical disks
magnetic disks
qualifying cylinders
angular velocity
cav disk
successive qualifying
qualifying tracks
total average
clv disk
track capacity
qualifying sector
disk technologies
comprehensive model
transfer rate
read sector
zcav disks
storage capacities
missed qualifying
seek operation
cav disks
forward access
window access
sector time
storage devices
radial line
performance behavior
concentric tracks
clv disks
spiral track
existing disk
disk products
disk technology
rotational delays
admission controller
optical disk
storage capacity
transfer rates
rotational speed
magnetic cav
disk head
two successive
performance model
linear velocities
random workloads
j qualifying
window accesses
disk surface
device technologies
number of sectors
proximal window cost
read sector time
proximal window access
successive qualifying cylinders
magnetic disks and
single spiral track
constant or variable
proximal window size
average rotational delay
average seek cost
successive qualifying sectors
first qualifying sector
pick n sectors
clv cav disks
proximal window accesses
average proximal window
expected retrieval cost
magnetic cav and
total average cost
mass storage systems
possible future technologies
constant angular velocity

corpus/krapavin2000-test/628198.txt
joins
dimensions
splitting
bounding
subsequences
neighboring
norms
dimen
images
screening
stocks
nodes
sequences
emerging
laboratories
mining
overlapping
databases
trees
finding
branches
scales
multimedia
kdb tree
r tree
dimensional points
ffl distance
bounding regions
similarity join
bounding rectangles
neighboring leaf
build time
dimensional similarity
tree family
within ffl
performance gap
join test
index structure
dimensional space
current indices
traversal cost
gap increasing
join algorithm
d b
spatial similarity
extended bounding
bounding rectangle
join time
l1 norms
internal node
internal nodes
merge join
emerging data
similar sub
dimensional data
skewed data
similar time
d tree
new index
mining applications
minimum bounding
number of dimensions
high dimensional points
within ffl distance
high dimensional similarity
dimensional similarity joins
neighboring leaf nodes
number of neighboring
performance gap increasing
faster than the
increasing with the
similarity joins on
first k dimensions
multi dimensional space
similar time sequences
emerging data mining
new index structure
considered for the
data mining applications
synthetic and real
better than the

corpus/krapavin2000-test/628213.txt
argumentation
semantics
washing
ps
actions
rules
computations
reasoning
compiling
leading
occurring
understanding
meaning
viewing
satisfying
argumen
production systems
production system
computation c
machine powder
classical production
general production
stratied gps
complete computation
stratied production
production rule
production rules
argumentation systems
r l
rule r
possible computations
possible computation
stable semantics
complete computations
stratied ps
logic programming
hand wash
away negation
sound implementation
classical negation
complete implementation
grounded semantics
real life
argumentation system
empty computations
output semantics
l r
underlying assumptions
life problems
active database
declarative semantics
computation starting
possible course
hand washing
current state
literal l
r r
course of actions
stratied production systems
number of atoms
classical production systems
production systems where
production system p
general production systems
classical production system
complete computation c
real life problems
general production rules
general production rule
classical production rule
compiling away negation
priorities between rules
neighbor is in
sound and complete
active database systems
grounded preferred stable

corpus/krapavin2000-test/628215.txt
mvds
fds
attributes
hiking
schemes
forms
trees
turing
generalizing
ts
preserving
databases
nesting
satisfies
relations
generates
scheme tree
nested relation
relation scheme
relation schemes
database scheme
acyclic database
database schemes
normal forms
free sets
scheme trees
redundant data
mvd x
data values
join dependency
given set
join tree
nested relations
normal form
free set
total unnesting
reducing redundant
scheme r
dependency preserving
nested database
intersection property
violates condition
generalizing 4nf
d implies
design flexibility
satisfies condition
gamma xy
fundamental keys
jane skiing
set of mvds
set of attributes
mvds and fds
nested relation scheme
nested relation schemes
sets of mvds
redundant data values
scheme tree t
given set of
acyclic database schemes
set of fds
acyclic database scheme
reducing redundant data
matriculation student interest
single node scheme
d be a
relation scheme is
d is equivalent
nested normal forms
d of mvds
4nf and bcnf
mvds is conflict
nested database schemes
generalizing 4nf and

corpus/krapavin2000-test/628217.txt
adns
requests
policies
dns
servers
dispatching
capacities
scheduling
domains
dispatcher
schemes
overloading
alarms
coming
strategies
routing
gateways
reaching
mapping
nodes
caching
levels
sites
sharing
controls
scenarios
arriving
ttl value
web server
server system
adaptive ttl
constant ttl
name servers
ttl schemes
distributed web
ttl values
ttl algorithms
node heterogeneity
address mapping
hit rates
variable ttl
address resolution
client requests
node capacities
address request
probabilistic routing
overloaded nodes
adns control
heterogeneity levels
adns scheduling
hot domains
server systems
ttl policies
heterogeneous nodes
global scheduling
node capacity
node selection
client request
name server
heterogeneous web
cooperative name
feedback alarm
address caching
resolution request
address requests
page request
algorithms heterogeneity
average ttl
scheduling algorithms
load sharing
limited control
homogeneous web
system capacity
avoid overloading
client domain
exponential mean
mapping requests
dispatching algorithms
normal domains
probabilistic versions
client domains
scheduling policies
web server system
distributed web server
domain hit rate
adaptive ttl schemes
hidden load weight
adaptive ttl algorithms
web server systems
domain hit rates
cumulative frequency system
constant ttl algorithms
heterogeneous web server
name servers and
cooperative name servers
homogeneous web server
address resolution request
web page requests
hit service time
popular web sites
domain name server
adns scheduling algorithms
adaptive ttl policies
pure zipf s
controls only a
address mapping requests
dynamic ttl schemes
overloaded level figure
deterministic ttl s

corpus/krapavin2000-test/628247.txt
ios
clusters
clustering
images
spaces
objects
neighbors
blocks
schemes
ms
datasets
retrieving
queries
searches
reclustering
hashing
dimensions
forming
periments
king
returning
structures
learning
similarity search
cf algorithm
outlier cluster
golden results
approximate similarity
nearest neighbors
dimensional spaces
nearest neighbor
clustering algorithm
index structure
tree structures
approximate nearest
image retrieval
neighbor search
io efficiency
index structures
feature vector
like structures
based image
high recall
sequential file
clustering algorithms
control parameters
block size
query time
higher recall
sequential ios
traditional index
feature vectors
query point
good clustering
tree structure
search space
dimensional space
disk blocks
approximate similarity search
number of objects
nearest neighbor search
number of clusters
approximate nearest neighbor
relative distance errors
based image retrieval
high dimensional space
good clustering algorithm
different cluster sizes
cf clustering algorithm
query object is
traditional index structures

corpus/krapavin2000-test/628254.txt
oids
hashing
buckets
pages
evolving
rehashing
queries
updating
tsotras
searching
answering
objects
intervals
deleting
overlapping
locating
clustering
databases
changes
schemes
trees
hashing scheme
linear hashing
persistent hashing
oid k
useful page
alive oids
snapshot index
query performance
useful pages
temporal membership
membership query
alive records
dynamic hashing
ephemeral hashing
membership queries
first overflow
object additions
alive objects
temporal hashing
time instants
new bucket
usefulness parameter
ephemeral linear
given oid
n b
temporal environment
appropriate bucket
hashing problem
multiversion b
overflow occurs
query time
time proceeds
temporal indexes
real changes
partially persistent hashing
alh pph s
hashing scheme is
linear hashing scheme
ephemeral linear hashing
temporal membership queries
temporal membership query
usefulness parameter u
number of changes
first useful page
dynamic hashing scheme
ephemeral hashing scheme
set s and
external dynamic hashing
ephemeral dynamic hashing
real oid additions
temporal hashing problem
real object additions
page becomes non

corpus/krapavin2000-test/628284.txt
pages
chasing
views
navigating
queries
ses
databases
querying
rewriting
expressions
accesses
joining
documents
constraints
navigational algebra
external relation
pointer join
query optimization
relational views
inclusion constraints
cost model
pointer chasing
pointer chase
link constraints
web sites
access structures
network accesses
external relations
science department
araneus data
relational view
oriented query
execution plans
external view
oriented databases
rewriting rules
relational databases
declarative queries
vldb conferences
department page
access paths
virtual views
materialized views
network access
computer science
computer science department
araneus data model
sessionlistpage piseslist toses
candidate execution plans
navigational algebra and
deptlistpage pideptlist todept
many web sites
optimizing path expressions
different navigation paths
access support relations
deptpage dname profpage
restrict network access
gamma sessionpage picourselist

corpus/krapavin2000-test/628293.txt
documents
engines
weights
representatives
similarities
queries
databases
king
thresholds
estimating
ranking
searching
users
incorporating
identifying
search engine
search engines
database representative
estimation method
high correlation
single term
normalized weights
average weight
metasearch engine
term weights
similarity function
standard deviation
useful documents
similar documents
documents containing
database representatives
term queries
basic method
given query
estimation methods
distinct terms
metasearch engines
query term
useful search
global similarity
first subrange
query q
statistical method
text databases
different estimation
experimental results
second subrange
cosine function
document having
information retrieval
internet queries
estimated probability
local search
maximum normalized weight
number of documents
normalized term weight
maximum normalized weights
search engines to
single term queries
term weight is
maximum normalized term
different estimation methods
global similarity function
useful search engines
d2 and d3
high correlation case
estimation method is
statistical method to
m distinct terms
set of documents
documents containing t
single term query
local similarity function
high correlation approach
based estimation method

corpus/krapavin2000-test/628383.txt
regions
frames
discontinuities
moving
boundaries
measurements
growing
undergoing
objects
tracking
projections
partitioning
segmenting
relating
minimizing
optical flow
epipolar constraint
fundamental matrix
affine flow
motion parameters
weak perspective
epipolar geometry
image coordinates
scene structure
region growing
moving objects
image plane
affine camera
motion segmentation
rigid motion
constraint line
scene partitioning
statistical test
rigid objects
segmentation algorithm
kalman filter
least squares
affine epipolar
separate regions
squares solution
moving object
growing algorithm
perspective effects
distinct regions
depth map
filter approach
constraint exists
separate objects
0degrees rotation
special form
rigid object
flow vectors
second frame
descriptive language
visual scene
based region
relative depth
three dimensional
squared distances
optical flow field
scene partitioning problem
region growing algorithm
independently moving object
perspective effects are
epipolar constraint equation
fundamental matrix can
kalman filter approach
epipolar constraint line
region growing method
weak perspective camera
based region growing
motion segmentation using
independently moving objects
weak perspective projection
projected point x

corpus/krapavin2000-test/628464.txt
tracking
images
mapping
equations
sampling
moving
sensing
advantages
optical flow
polar mapping
retinal plane
ccd sensor
radial component
cortical plane
retinal sensor
radial coordinate
rotational angles
polar transformation
retinal velocity
tracking egomotion
retinal image
partial derivatives
motion equations
optical axis
general motion
visual navigation
cartesian coordinate
fixation point
visual field
visual sensor
retinal ccd
polar images
coordinate system
tracking motion
data reduction
rotational velocity
cortical projection
flow equations
active tracking
sensitive elements
variant sampling
angular component
logarithmic mapping
translational flow
conventional raster
translational component
image velocity
image plane
least squares
high resolution
conformal mapping
object motion
log polar mapping
polar and log
cartesian coordinate system
retinal ccd sensor
optical flow are
log polar images
polar or log
optical flow equations
related to the
f oe cos
abundance of equations

corpus/krapavin2000-test/628513.txt
shapes
matching
graphics
images
distances
comparing
minimizing
measuring
hausdorff distance
directed hausdorff
distance transform
partial distance
voronoi surface
computer vision
rigid motion
minimum hausdorff
nearest point
pattern recognition
binary correlation
model pixels
vice versa
nonzero pixels
voronoi surfaces
rasterized approximation
recognition using
minimum value
triangle inequality
distance transforms
upper envelope
possible translations
current translation
binary image
relative positions
computational geometry
metric properties
directed hausdorff distance
th ranked value
minimum hausdorff distance
pattern recognition letters
nonzero model pixels
possible relative positions
computer vision and
object recognition using
computational geometry p

corpus/krapavin2000-test/628552.txt
filters
behaviour
neighbourhoods
deformations
disparities
perturbations
views
bandwidths
signals
matching
images
singularities
variations
measurements
instabilities
differences
approximations
concerns
crossing
shadows
level contours
phase stability
amplitude spectra
singularity neighbourhoods
spatial position
instantaneous frequency
phase difference
gabor filters
phase contours
scale perturbations
phase information
imaginary parts
mean phase
image velocity
gabor kernels
filter response
phase differences
phase linearity
space expansion
binocular disparity
natural images
gaussian noise
gabor scale
phase singularities
input signal
pass filters
based matching
optical flow
gabor filter
different views
small scale
geometric deformations
space framework
local phase
low frequencies
spatial extent
geometric deformation
phase matching
input scale
phase structure
correlation techniques
flow techniques
phase values
complex plane
fourier transforms
image matching
scale variation
quantitative approximations
phase behaviour in
band pass filters
small scale perturbations
behaviour of phase
phase correlation techniques
mean phase behaviour
phase stability and
optical flow techniques
left and right
mean phase difference
filtered versions of
quadrature pair filters
local phase information
translations and dilations
residual term r

corpus/krapavin2000-test/628676.txt
motions
estimates
maps
occluding
ds
layers
surfaces
images
estimating
chunks
representations
thresholding
grouping
features
boundaries
residual error
support map
robust estimation
image sequence
based segmentation
description length
initial set
initial hypotheses
minimum description
initial support
robust estimator
selected hypotheses
initial hypothesis
computer vision
complicated occlusion
estimation framework
local maxima
estimation process
single object
least squares
real object
body motion
region grouping
disconnected regions
cooperative update
single support
single robust
estimation methods
basis functions
outlier points
robust estimators
body motions
disjoint regions
d model
initial conditions
multiple objects
entire image
recursive structure
length principle
model parameters
minimum description length
initial hypothesis set
support maps to
single support map
least squares estimate
rigid body motion
cooperative update rule
linear basis functions
objects or surfaces
parameters are estimated
corresponding to the
thresholding the residual
multi layer representations
order polynomial surfaces
maps to represent
cooperative support update
transparent flickering random
high order discontinuity

corpus/krapavin2000-test/628679.txt
frames
images
trajectories
coordinates
matching
ping
sequences
combinations
basis points
weak perspective
invariant representation
affine shape
good basis
shape matrix
gramian g
unfamiliar views
shape representation
invariant shape
similarity transformations
reference system
affine transformations
gramian matrix
model acquisition
perspective projection
image measurements
affine transformation
image sequences
linear combination
column pivoting
image trajectories
similarity invariance
new images
computation using
linear combinations
dimensional coordinates
model matching
camera calibration
affine shape matrix
singular value decomposition
similarity invariant shape
depth computation using
sequence of images
invariant shape representation
selected basis points
ground truth data
centered image measurements
new orthonormal basis
coordinates of points
model matching measure
large perspective distortions
centered image measurement
wide lens camera

corpus/krapavin2000-test/628687.txt
correspondences
deformations
eigenmodes
modes
shapes
correspondence
contour
matching
airplanes
wing
deforming
images
descriptions
morphing
features
sampling
tools
mations
objects
describing
tracking
graphics
feature points
finite element
modal matching
similar shapes
modal deformations
modal displacements
stiffness matrices
canonical descriptions
hand tools
coordinate system
nonrigid modes
feature point
object recognition
feature correspondences
higher frequency
interpolation functions
element model
feature data
stiffness matrix
modal deformation
shape vectors
feature locations
shape description
material properties
lower resolution
high frequency
higher resolution
different views
large rotations
feature connectivity
silhouette correspondences
intermediate deformations
tree shapes
rigid body modes
align the two
low order modes
energy needed to
mode shape vector
frequency modes describe
terms of modal
different hand tools
mode shape vectors
object recognition and
us to recognize
ordered by increasing
finite element nodes
correspondence and recognition
allows us to
closed form solution

corpus/krapavin2000-test/628688.txt
discontinuities
smoothing
regularizers
aifs
oversmoothing
priors
regularizing
derivatives
slopes
continuities
neighboring
string
annealing
weighting
dis
preserving
solutions
da model
euler equation
lp model
line process
da solution
solution f
smoothness priors
potential function
anisotropic diffusion
adaptive smoothness
quadratic regularizer
process variables
neighboring points
regularization models
interaction function
energy function
adaptive interaction
regularization model
computer vision
mean field
posed problems
corresponding energy
interaction functions
bounded slopes
necessary condition
machine intelligence
potential functions
continuous nature
continuous domain
pattern analysis
markov random
field theory
robust statistics
e f
adaptive smoothness priors
discontinuity adaptive smoothness
line process variables
interaction between neighboring
interaction functions aifs
adaptive interaction functions
stable to changes
large but bounded
potential function g
changes in parameters
adaptive to discontinuities
smoothing at discontinuities
pattern analysis and
arbitrarily large but
mean field theory
priori smoothness constraint
process potential function
simulated component defects

corpus/krapavin2000-test/628710.txt
views
coefficients
recovering
invariants
occlusions
ignoring
corresponding points
trilinear functions
epipolar intersection
model views
epipolar geometry
linear solution
reference views
perspective views
orthographic views
fundamental matrices
linear combination
third view
image coordinates
visual recognition
eight points
least squares
algebraic functions
seven corresponding
relative affine
trilinear form
fundamental matrix
minimal configuration
affine structure
parallel projection
projection using
3d reconstruction
minimal number
two orthographic
perspective view
camera transformation
self occlusions
eight corresponding
via alignment
bilinear functions
four corresponding
squares solution
corresponding points across
across the three
two reference views
epipolar intersection method
number of corresponding
two model views
corresponding points are
linear combination method
re projection using
number of points
eight corresponding points
average re projection
maximal re projection
epipolar intersection and
two orthographic views
presence of errors
projective space p
linear combination methods
relative affine invariant
intelligence laboratory and

corpus/krapavin2000-test/628731.txt
scores
classifiers
identification
images
subsystems
features
people
outputs
rejecting
matching
interacting
mapping
lying
distributions
face recognition
speaker recognition
measurement level
identification system
recognition systems
acoustic features
normalized scores
hyperbf network
multiple classifier
reference database
interocular distance
person identification
recognition system
multiple classifiers
real interactions
multiple cues
system performance
single feature
database entries
vector quantization
reported experiments
visual features
standard deviation
hybrid rank
test sessions
dynamic codebooks
identification systems
score list
score distributions
utterance length
matching scores
verification system
rank information
acoustic analysis
person recognition
different classifiers
integrated system
different features
learning task
acoustic and visual
face recognition systems
pattern recognition letters
hybrid rank measurement
identification system based
based on vector
system based on
mapping from the
using a weighted
applied to the
derived from the
signal processing v
robust statistical techniques
template matching process
person identification using

corpus/krapavin2000-test/628733.txt
operators
responses
curves
discontinuities
ending
edges
images
orientations
detectors
rising
smoothing
profiles
singularities
lines
l l
l operators
l operator
logical linear
image curves
linear operator
linear operators
contrast line
l combinators
line ending
negative contrast
positive responses
line operator
step edge
positive contrast
dimensional operator
image operators
operator responses
contrast lines
normal condition
linear reduction
local continuity
tangential operator
edge operators
curve types
dimensional operators
positive response
linear convolution
differential structure
spatial support
receptive field
early vision
image structure
l image
normal conditions
visual system
noise sensitivity
l edge
structural preconditions
line drawing
line detectors
curve ff
zero crossing
structural conditions
measurement operators
minimal polynomials
additive gaussian
l l operators
l l combinators
lines and edges
positive contrast line
contrast line operator
negative contrast line
negative contrast lines
image curves is
dimensional l l
logical linear combinators
logical linear operators
logical linear l
confusion between lines
positive operator responses
minimal polynomial p

corpus/krapavin2000-test/628753.txt
symmetries
folding
shapes
images
grasping
objects
evaluating
faces
measuring
finding
reconstructing
metries
symmetry distance
mirror symmetry
symmetry transform
symmetric shape
symmetry group
symmetric regions
occluded shape
angular selection
symmetric configuration
continuous symmetry
symmetry axis
3d object
n points
continuous feature
original shape
symmetry detection
3d mirror
mirror axis
g symmetry
shape using
symmetry groups
order n
original image
measured points
section iii
symmetric shapes
symmetry c
equal distances
occluded shapes
folded points
n radians
rotational symmetry
sd values
single shape
finding locally
circular symmetry
mirror symmetries
rotational symmetries
face orientation
angular intervals
symmetric region
symmetry measure
local symmetries
folded measurements
different symmetries
symmetry distance value
locally symmetric regions
symmetry distance values
shape using angular
3d mirror symmetry
symmetry group g
original image b
symmetric shape using
regions in images
frontal vertical view
probable symmetric shape
cn symmetric configuration
finding locally symmetric
different shapes and

corpus/krapavin2000-test/628768.txt
invariants
features
physics
conics
images
objects
ratios
shading
thermophysical properties
imaged object
invariant features
object recognition
scene conditions
lwir image
elemental volume
thermophysical model
thermal capacitance
invariant feature
lwir imagery
n points
erroneous hypotheses
real imagery
material properties
measurement vectors
image measurements
object identity
thermal image
scene parameters
driving conditions
different material
correct hypotheses
thermophysical feature
thermophysical invariants
thermophysical approach
standard deviations
formed using
algebraic invariants
geometric invariants
object properties
consistency constraint
physical properties
thermal and visual
object centered reference
null space vectors
identity and pose
described in section
features that are
correct hypothesis hypothesis

corpus/krapavin2000-test/628779.txt
cients
invariants
curves
conics
missing
polynomials
centering
descriptors
ts
deformations
transformations
superquadrics
representations
iterations
discriminating
preceding
pose estimation
complex representation
algebraic curve
polynomial coe
missing data
algebraic curves
shape recognition
complete set
standard deviation
euclidean transformation
cient vector
euclidean transformations
standard deviations
invariant recognition
degree polynomials
rotation estimation
2d curves
independent shape
polynomial curves
curve data
intrinsic center
careful comparison
shape data
euclidean center
degree n
fourier descriptors
invariant shape
coordinate system
random starting
complex polynomial
3d surfaces
relative angles
complex basis
invariant object
noise missing
independent recognition
d l
dimensional subspaces
translation estimation
single computation
independent invariants
linear functions
imaginary parts
2d shape
object recognition
computer vision
relative orientation
polynomial coe cients
pose estimation and
th degree polynomials
set of invariants
fast accurate pose
independent shape recognition
followed by rotation
ip coe cients
random starting points
recognition based on
based on all
curves and 3d
pose independent recognition
2d curves and
similar std dev
invariant shape recognition
shape recognition and
real and imaginary
degree ip curves
proposed pose estimation
polynomial coe cient
polynomial f n

corpus/krapavin2000-test/628780.txt
occlusions
images
matching
neighboring
maps
sing
regions
assumptions
match values
disparity map
local support
support area
disparity values
disparity space
stereo matching
stereo algorithm
d c
match value
initial match
adaptive window
based stereo
detected occlusions
stereo image
uniqueness assumption
stereo algorithms
real stereo
stereo vision
y r
image pairs
true occlusions
occluded areas
cooperative algorithm
image pair
occluded pixels
squared differences
occlusion detection
camera masking
processing constraints
stereo images
neighboring match
intensity values
similar lines
global constraints
dense depth
among neighboring
quantitative comparison
disparity discontinuities
cooperative stereo
multiview image
unique match
local support area
ground truth data
initial match values
smooth and detailed
stereo matching and
3d local support
adaptive window method
neighboring match values
values have converged
matching and occlusion
real stereo image
different local support
stereo image pairs
synthetic and real
map using multi
high match values
real stereo images
several synthetic and
detailed with occlusions
3d disparity space
detailed disparity map

corpus/krapavin2000-test/628789.txt
images
predictions
tsbns
segmentations
entropies
coding
scenes
probabilities
labelling
scaling
trees
ls
correlations
passing
rees
regions
modelling
networks
independences
nding
label images
x l
pixelwise predictions
mobile object
marginal entropies
trained tsbn
neural networks
road marking
tsbn model
marginal likelihood
conditional probability
belief network
conditional maximum
node x
probability propagation
likelihood training
message passing
em algorithm
test images
gaussian mixture
image segmentation
class labels
posterior marginals
label image
passing schemes
local predictions
road markings
belief networks
image coding
neural network
likelihood p
training data
generative model
graphical models
image analysis
passing scheme
smaller trees
range correlations
bayesian image
tsbn using
pixelwise classication
image modelling
posterior marginal entropies
scaled likelihood method
building street furniture
conditional maximum likelihood
maximum likelihood training
road marking road
message passing schemes
compensated mlp pixelwise
non causal mrfs
gaussian mixture models
message passing scheme
perez et al
compensated gmm pixelwise
mobile object vegetation
marginal likelihood p
conditional probability p
hidden markov models
structured belief network
probability tables cpts
corresponding label images
ground truth labelling

corpus/krapavin2000-test/628814.txt
distances
targets
quantizers
hypotheses
imaging
bounds
distributions
expressions
involving
measures
classification
approximations
ds
p e
target recognition
nuisance parameters
likelihood ratio
detection problem
leibler distances
hypothesis testing
target detection
sensor data
asymptotic approximation
d p
recognition performance
compressed data
likelihood ratios
composite hypothesis
silvey distances
recognition problems
asymptotic expressions
image data
nuisance parameter
testing problem
p f
detection performance
known target
detection problems
l c
hypothesis test
hypothesis h
scalar quantizers
ary hypothesis
binary detection
involving nuisance
gaussian sensor
silvey distance
binary hypothesis
asymptotic expression
performance measures
performance bounds
theoretic bounds
mixture distribution
statistical models
system parameters
detection algorithm
carlo simulations
gaussian noise
possible targets
gaussian data
upper bounds
lower bounds
d h
compression algorithm
prior distribution
convex function
kullback leibler distances
ali silvey distances
composite hypothesis testing
hypothesis testing problem
transform coe cients
log likelihood ratio
parameters such as
involving nuisance parameters
target recognition performance
target recognition problems
noisy sensor data
gaussian sensor noise
binary detection problem
central limit theorem
lower bounds on
provide upper bounds
optimal lrt detector

corpus/krapavin2000-test/628823.txt
clusters
clustering
samples
tendencies
annealing
ms
reinders
neighboring
varying
dencies
growing
leading
variance constraint
expansion candidates
j e
maximum variance
constraint parameter
cluster tendency
cluster tendencies
rank list
statistical results
error criterion
cluster c
image segmentation
significant plateau
real structure
variance cluster
cluster algorithm
simulated annealing
partitional cluster
curve resulting
cluster algorithms
discover cluster
joint variance
cluster variance
gaussian mixtures
gaussian distributions
cluster models
individual clusters
fuzzy clustering
cluster sample
cluster model
hypothesized clusters
neighbor ranking
number of clusters
variance constraint parameter
m time ms
maximum variance constraint
maximum variance cluster
discover cluster tendencies
gaussian mixtures modeling
d gaussian distributions
cluster tendency assessment
squared error criterion
clusters that are
constraint instead of
symbolic time series

corpus/krapavin2000-test/628848.txt
epipoles
frames
displacements
views
estimating
reference plane
planar parallax
shape recovery
3d structure
scene structure
3d scene
parallax displacements
estimation process
residual parallax
aperture problem
parallax motion
image brightness
scene points
camera epipoles
parallax displacement
residual image
correspondence estimation
squares minimization
motion parameters
camera motion
uncalibrated views
frame case
dense planar
estimation algorithm
across multiple
image displacements
structure parameter
calibration parameters
direct estimation
brightness measurements
g estimating
homography estimation
local correspondence
brightness variations
direct recovery
multiple uncalibrated
residual image motion
planar parallax displacements
across multiple frames
3d scene structure
directly from image
direct estimation algorithm
relative to the
structure parameter fl
plane parallax representation
unknown calibration parameters
multiple uncalibrated views
image brightness variations
plane parallax decomposition
e g estimating
local correspondence estimation
residual planar parallax

corpus/krapavin2000-test/628884.txt
lighting
harmonics
images
normals
belhumeur
shadows
faces
brdfs
graphics
projecting
recognizing
enforcing
objects
integrating
inverting
varying
basis images
harmonic images
reflectance function
linear subspace
lighting conditions
order approximation
spherical harmonics
negative lighting
surface normals
reflectance functions
harmonic basis
delta functions
lambertian kernel
lighting function
dimensional linear
delta function
9d space
harmonic reflectances
order harmonic
first order
cosine function
lambertian reflectance
negative light
order harmonics
lambertian object
harmonic transform
space coordinates
linear space
face recognition
low order
9d linear
illumination cone
bidirectional reflection
dz n
recognition algorithms
analytic description
linear combination
van doorn
dimensional space
order n
harmonic light
4d linear
attached shadows
lambertian objects
negative least
set of images
low dimensional linear
non negative combination
harmonic basis images
images produced by
belhumeur and kriegman
spanned by the
first order approximation
dimensional linear subspace
order harmonic images
low dimensional space
first few harmonics
pose and lighting
dimensional linear space
bidirectional reflection distribution
first order harmonic
negative least squares
negative lighting function
second order approximation

corpus/krapavin2000-test/628975.txt
subscripts
references
dimensions
parallelization
bounds
solutions
inequalities
parallelizing
difficulties
arrays
checking
equalities
examining
compilers
dependence directions
array references
f l
loop bounds
coupled subscripts
dependence analysis
dimensional array
dependence direction
integer solutions
loop indices
numerical methods
y line
coupled dimensions
linear combination
l m
r m
dependence test
common solutions
equation corresponds
r n
f equations
dimensional arrays
subscript expressions
iteration dependences
consistency checking
program parallelization
new algorithm
linear programming
practical cases
single dimension
real programs
fourier motzkin
parallelization restructurer
valued solution
common loops
dimensional array references
data dependence analysis
multi dimensional array
l plane intersects
inequality consistency checking
coupled subscripts in
cross iteration dependences
real valued solutions

corpus/krapavin2000-test/629004.txt
subscripts
references
supercomputing
coefficients
loops
parallelizing
programs
eferences
cripts
scheduling
partitioning
transformations
compilers
effects
trans
coupled subscripts
array references
dependence direction
dependence distance
dependence test
user assertions
dependence analysis
nonlinear subscripts
reference pairs
symbolic terms
direction vector
dimensional array
array reference
dependence distances
linear subscripts
data dependences
test algorithms
dependence directions
single dimension
independence detection
reference pair
constant propagation
dependence exists
direction vectors
nonzero coefficients
loop nesting
interprocedural constant
loop indices
unknown variables
parallel execution
loop index
array subscripts
dimension tests
loop partitioning
different passes
test methods
parallelizing compiler
real programs
constant distances
data synchronization
library routines
interprocedural analysis
array reference pairs
dependence direction vector
data dependence analysis
data dependence test
dimensional array references
partially linear subscripts
dependence analysis and
university of illinois
data dependence exists
interprocedural constant propagation
dependence test methods
dependence direction vectors
dependence test algorithms
dimensional array reference
either 1 or
single dimension tests
ith coupled subscripts
real valued solutions
5th international conference
total array references
data dependence distance
large multiprocessor systems
w nonlinear subscripts
current data dependence

corpus/krapavin2000-test/629046.txt
dependences
transformations
parallelization
editing
transformation
ir
supercomputing
programs
tools
codes
machines
parallelizing
optimizing
debugging
enhancing
supports
directives
abilities
overcomes
dependence analysis
dependence graph
parallel programming
parascope editor
interprocedural analysis
programming environment
dependence information
program transformations
ir n
event synchronization
control flow
carried dependences
dependence analyzer
dependence testing
statement dependence
interactive parallel
constant propagation
array references
reordering transformations
structured transformations
variable classification
control dependence
side effects
assignment statement
private variables
n programming
user selects
loop skewing
level parallelism
program changes
symbolic analysis
program analysis
conservative dependences
assist users
imprecise dependence
useful parallelism
miscellaneous transformations
parallel programs
fortran programs
optimizing transformations
false dependences
interactive program
transformation algorithms
parallel form
nested loops
section analysis
race conditions
regular section
automatic tools
interactive parallelization
interprocedural constant
scientific programs
parallel machines
parallel programming environment
dependence graph and
statement dependence graph
interactive parallel programming
interprocedural analysis and
loop level parallelism
ir n programming
n programming environment
scalar dataflow analysis
imprecise dependence analysis
interactive program transformations
incremental dependence analysis
distributed memory machines
regular section analysis
static single assignment
data dependence analysis
practical dependence testing
analysis of dependences
dependence breaking transformations
wait event synchronization
variable classification dialog
programming tool proceedings
structured program transformations
last k iterations

corpus/krapavin2000-test/629048.txt
dependences
effects
benchmarks
optimizing
compilers
rs
translating
programs
keeping
bounds
procedures
regular sections
regular section
section analysis
interprocedural analysis
dependence analysis
side effects
value numbers
call sites
parallel programming
actual parameter
formal parameter
interprocedural side
interprocedural propagation
constant propagation
induction variables
dataflow analysis
interprocedural summary
global value
local analysis
symbolic analysis
programming style
summary information
array side
call graph
subscript expressions
meet operations
rice compiler
compiler evaluation
interprocedural constant
dependence testing
automatic parallelization
modular programming
algebra subroutines
access descriptors
inline expansion
complete applications
side effect
actual parameters
evaluation program
bounds information
summary sections
section subscripts
programming support
compilation dependences
subscript lattice
summary section
scientific disciplines
cache performance
international conference
interactive parallel
interprocedural array
invariant expressions
linpack library
recursive programs
regular section analysis
interprocedural constant propagation
modular programming style
global value numbers
bounded regular sections
rice compiler evaluation
loop induction variables
data access descriptors
interprocedural analysis and
interprocedural side effects
linear algebra subroutines
restricted regular sections
evaluation program suite
summary regular sections
compiler evaluation program
interprocedural side effect
interactive parallel programming
david k lowenthal
memory machines proceedings
array side effects
written in an
interprocedural dependence analysis
8th international conference
programs written in
liao monica s
fast execution time
interprocedural analysis alone
regular section subscripts
good programming practice
ambitious optimizing compiler

corpus/krapavin2000-test/629058.txt
arrays
partitions
partitioning
loops
compilers
compiling
multicomputers
transformations
machines
decompositions
optimizing
references
processors
parallelizing
multiprocessors
ping
decomposition
deriving
transformation
computers
consuming
minimizing
passing
free partitioning
distributed memory
interprocessor communication
constant offsets
parallel loops
free partitions
memory machines
local memory
linear references
dimensional arrays
data distribution
data partition
complex memory
shared memory
compatible partitions
process partitioning
loop transformations
array accesses
parallelizing compilers
data decomposition
storage patterns
matrix notation
iterated parallel
index domain
minimizing communication
distributed systems
fortran programs
allocation problem
memory systems
array elements
data allocation
array access
discuss techniques
current day
automatic process
loop interchanging
deriving heuristics
communication free partitioning
fully parallel loops
partitioning of arrays
distributed memory machines
allocation of arrays
partitions are not
sequentially iterated parallel
iterated parallel loops
consider the following
techniques for data
shared memory machines
data distribution and
paid to the
huang chih ping
pingali access normalization
non trivial solution

corpus/krapavin2000-test/629077.txt
arrays
processors
partitioning
multicomputers
parallelizing
references
multiprocessors
programs
costs
distributions
constraints
compilers
decisions
appearing
machines
regarding
considerations
determining
quality measures
data partitioning
array dimensions
data distribution
cyclic distribution
array dimension
distributed memory
execution time
quality measure
automatic data
communication constraints
distribution function
communication costs
various arrays
distribution functions
partitioning scheme
various constraints
parallelization constraints
interprocessor communication
d arrays
block size
program segment
program segments
parallelizable loops
parallelizing compiler
parallelizing compilers
memory multiprocessors
memory machines
real programs
shared memory
final distribution
aligned dimensions
various loops
contiguous distribution
distribution schemes
small arrays
assignment statement
alignment problem
various dimensions
reference patterns
explicit communication
communication time
parallel program
smaller arrays
various array
parallelizable loop
memory parallel
parallel loops
number of processors
automatic data partitioning
data partitioning scheme
distribution of arrays
data distribution scheme
distributed memory multicomputers
relative block sizes
notion of constraints
component alignment problem
measures of constraints
second distribution function
corresponding grid dimension
scientific application programs
various array dimensions
corresponding to the
data partitioning on
choudhary j ramanujam
iterated parallel loops
overall execution time
partitioning of arrays
distributed memory machines
number of elements
techniques for parallelizing

corpus/krapavin2000-test/629113.txt
coteries
quorums
protocols
voting
nodes
returns
assignments
determining
ies
join algorithm
composite coterie
nondominated coteries
tree coteries
quorum agreements
replica control
intersection property
input coteries
quorum agreement
write quorums
mutual exclusion
coterie join
coterie c
containment test
nonempty coteries
generate quorum
nondominated coterie
el abbadi
tree protocol
tree coterie
given set
binary tree
control protocols
distributed systems
exclusion problem
tree c
takes nonempty
vote assignments
larger coterie
set of nodes
join algorithm may
may be used
algorithm may be
coteries are nondominated
quorum containment test
binary tree protocol
replica control protocols
nodes such that
coteries may be
nodes contains a
given set of
join algorithm to
introduced by agrawal
mutual exclusion problem
read and write

corpus/krapavin2000-test/629124.txt
migrations
policies
predictions
bouncing
multiprocessors
multiprocessor
freezing
operating
migrating
errors
decisions
factors
os
architectures
effects
tuning
aging
ms
differences
varying
questions
addressing
page placement
ideal policy
workload model
static policy
dynamic page
coherency fault
copy page
numa memory
memory management
sp pages
analytic model
page bouncing
error policy
page migration
input parameters
memory reference
rm pages
dynamic multiple
static page
operating system
dynamic policy
analytic predictions
dynamic placement
page classes
shared memory
coherency faults
numa problem
placement activity
fault pairs
model predictions
experimental data
virtual memory
mean time
system kernel
synthetic program
memory references
interprocess reference
rc migrations
policy decisions
phase transitions
remote architectures
reference history
placement policy
local memory
r c
shared data
remote reference
memory request
predicted data
window parameter
reference granularity
numa multiprocessor
mod parameter
dunx operating
incorrect policy
dunx kernel
sp page
local frame
value analysis
page faults
parameter settings
placement policies
dynamic page placement
copy page placement
numa memory management
static page placement
dynamic multiple copy
coherency fault pairs
operating system kernel
page placement policy
local remote architectures
freeze window parameter
dunx operating system
recent mod parameter
page placement policies
page placement activity
uma dynamic combination
w ss values
dynamic policy points
interprocess reference granularity
dynamic placement activity
approximate ideal policy
numa static combination
performance dynamic policy
numa shared memory
w sp values
single copy policies
page migration and

corpus/krapavin2000-test/629154.txt
packets
routing
destinations
processors
queues
sorting
neighboring
rotations
computers
meshes
messages
algorithm route
routing steps
even transposition
routing problem
packet p
packet routing
n mesh
size queues
permutation routing
column destination
total distance
routing problems
random routing
theta n
permutation problem
permutation packet
n packets
buffer area
constant size
maximum distance
routing algorithm
correct column
n routing
optimal routing
first row
good experimental
experimental behavior
theta n mesh
even transposition method
packet routing problem
permutation routing problem
constant size queues
packet has to
random routing problems
mesh of processors
permutation packet routing
reach their destinations
packet routing on
routing on a
n routing steps
number of routing
routing problems that
packet that initially
efficient heuristic for
steps that is
route the packets

corpus/krapavin2000-test/629166.txt
backtracking
processors
queens
instances
ordering
solutions
heuristics
anomalies
formulations
pruning
trees
visiting
nodes
circuits
multiprocessors
balancing
searching
slicing
parallel dfs
sequential dfs
superlinear speedup
simple backtracking
parallel search
dfs algorithms
space tree
search space
average speedup
first search
backtrack search
sequential search
parallel formulations
different processors
parallel formulation
heuristic backtracking
linear speedup
probabilistic algorithms
space search
solution density
heuristic information
ordered dfs
search tree
parallel algorithm
experimental results
search algorithms
average number
speedup anomalies
heuristic makes
superlinear speedups
n processors
sequential and parallel
distribution of solutions
searched by different
density of solutions
number of nodes
number of processors
parallel dfs algorithms
nodes expanded by
backtrack search algorithms
one solution in
test pattern generation
nodes searched by
sequential dfs and
average case behavior
simd parallel computers
automatic test pattern
ordered backtrack search

corpus/krapavin2000-test/629185.txt
synchronization
races
programmers
conflicting
unifies
processors
ordering
cache
programs
implementations
designers
multiprocessor
optimizations
ensures
dependencies
retaining
retains
returns
detecting
disadvantages
release consistency
weak ordering
sequential consistency
synchronization operations
memory operations
program order
memory model
data operations
vax model
data races
cache coherence
data operation
synchronization operation
hardware designer
requirement conditions
hardware designers
implementation proposal
memory models
labeled programs
incomplete operations
critical section
conflicting operations
free program
free programs
coherence protocol
consistent hardware
read returns
consistent execution
formal interface
special operations
paired release
release operation
incomplete data
weak ordering release
weak ordering and
1 memory model
prefer to reason
unifies the four
synchronization operations and
sequentially consistent to
programmers prefer to
cache coherence protocol
appear sequentially consistent
sequentially consistent hardware
sequentially consistent execution
operations are distinguished
1 unifies the
special buffer empties
memory consistency models
appears sequentially consistent
ensures sequential consistency
consistent special operations
implementation of data
unpaired synchronization operations
special buffer message
programs that are
detecting data races

corpus/krapavin2000-test/629269.txt
predicates
snapshots
debugging
processes
messages
detecting
ks
events
checking
programs
global sequence
local predicates
checker process
distributed program
conjunctive predicates
global state
global predicates
distributed programs
local predicate
global predicate
conjunctive predicate
unstable predicates
global sequences
distributed run
distributed debugger
predicate detection
global states
stable predicates
different processes
boolean expression
local pred
predicates detection
repeated snapshots
program message
local actions
program messages
unstable predicate
disjunctive predicates
mutual exclusion
atomic sequences
partial order
message complexity
following holds
weak conjunctive predicates
predicates in distributed
weak conjunctive predicate
predicate is true
number of comparisons
non checker processes
sequences of predicates
global state g
detect even unstable
many total orders
g f semantics
predicates proposed by
checker process which
algorithms detect even
concurrent regular expressions

corpus/krapavin2000-test/629280.txt
binding
naming
services
actions
objects
functioning
invocations
modules
invoking
failures
structuring
supporting
facilities
managing
activating
permitting
locking
operating
aborting
implementing
interfaces
replicating
messages
atomic action
object store
persistent object
object support
atomic actions
action module
binding service
rpc module
persistent objects
support module
active replication
object servers
object server
application program
passive replication
binding services
abort operation
stable storage
transparency mechanisms
concurrency control
programming system
object storage
distributed system
state changes
location information
distributed programming
remote procedure
commit processing
remote objects
persistent state
available replicas
arjuna system
invoking operations
server processes
volatile storage
volatile store
object b
replicated objects
application programs
application level
server process
passive object
object stores
system structuring
procedure call
window system
activated objects
server managing
activated object
system implementing
system services
concurrent invocations
serialisability property
replication transparency
operating system
persistent object support
atomic action module
object support module
naming and binding
state changes to
provided by the
distributed programming system
object is responsible
remote procedure call
services provided by
local rpc module
services can also
object support modules
concerned mainly with
managed through appropriate
consistency protocols to
heterogeneous computer systems

corpus/krapavin2000-test/629283.txt
processors
tasks
series
assignments
allocating
scheduling
partitioning
architectures
computations
mapping
maximizing
pipelining
chitectures
response time
time function
time functions
parallel task
optimal response
response times
throughput problem
task structures
processor assignment
time problem
parallel tasks
task structure
minimal response
log p
individual tasks
data sets
elemental tasks
series composition
throughput requirement
f p
optimal assignment
task system
parallel precedence
execution signature
throughput constraints
pipeline computations
feasible assignments
pipeline computation
assigning processors
processor system
parallel architectures
p processors
dynamic programming
parallel components
optimal processor
individual task
task systems
processor allocation
problem arises
composite task
constraint using
monotone nondecreasing
maximal throughput
minimum response
minimize response
response time function
response time functions
optimal response time
number of processors
response time constraint
minimal response time
time function f
throughput subject to
sequence of data
minimum response time
multiple processors to
multitasked parallel architectures
parallel task systems
parallel task system
optimal processor assignment
maximizing throughput subject
minimal mesh embeddings
pipelined image processing
task structures and
minimize response time

corpus/krapavin2000-test/629334.txt
delays
synchronizers
processors
embedding
nets
distributions
topologies
networks
queueing
incoming
ps
probabilities
graphs
coming
ending
bounds
transmissiondelays
processing times
processor v
transmission delays
computational step
stochastic petri
random variables
petri nets
marked graphs
negligible delays
complete graph
r v
asynchronous network
computation rate
potential rate
negligible transmission
processing state
regular degree
ergodic theory
arbitrary topology
distributed networks
n g
computational steps
different topologies
deterministic case
complete network
probability distributions
r g
different networks
global clock
exact computations
general distributions
degree network
marked graph
stochastic marked
general probability
lower bounds
deterministic processing
combinatorial approach
constant factor
stochastic petri nets
processing times and
negligible transmission delays
message m k
exponentially distributed with
number of processors
random processing times
deterministic processing times
corresponding processing times
non negligible transmission
subadditive ergodic theory
distributed processing times
general probability distributions
lower bounds on
message transmission delays
distributed with mean
networks with different

corpus/krapavin2000-test/629351.txt
processors
machines
balancing
scheduling
architectures
supercomputers
addressing
dynamics
growing
sys
computers
atomic computation
p kernel
atomic computations
asynchronous problems
simd machines
simd machine
queen problem
computation selection
synchronous problems
runtime support
support system
application problems
user program
gromos program
oriented approach
molecular dynamics
indirect addressing
chare kernel
execution time
simd architectures
load balancing
every processor
region growing
instruction multiple
flat ghc
maspar mp
reactive kernel
simd hardware
active processors
different processors
central control
adaptive algorithm
computation phase
different problem
runtime support system
loosely synchronous problems
atomic computation types
loosely synchronous and
number of processors
system oriented approach
application oriented approach
different processors can
atomic computation type
central control unit
utilization efficiency depends
process atomic computation
kernel is able
computation selection algorithms
processors can execute

corpus/krapavin2000-test/629361.txt
embedding
multicomputer
toruses
embeddings
ring
distances
multicomputers
meshes
hypercubes
links
interconnection
neighbors
dimensions
processes
topologies
waiting
communication
executing
cubes
nodes
numbering
processors
focuses
mapping
minimizing
sorting
xor embedding
standard embedding
cube algorithm
constant distances
dimensional torus
cube algorithms
d n
average distance
n j
links dilation
dilation spectrum
d c
byweight embedding
xor embeddings
communication topology
every process
average load
waiting intervals
execution time
interconnection topology
total dilation
communication tasks
called xor
target multicomputer
onto toruses
torus multicomputers
dimensional meshes
dimensional mesh
hypercube communication
parallel algorithms
interconnection topologies
embedding with constant
xor embedding is
2 d nodes
embedding is optimal
embeddings with constant
standard and the
optimal for meshes
called xor embedding
hypercube communication topology
hypercubes onto toruses
different performance metrics

corpus/krapavin2000-test/629396.txt
processors
ring
speedups
machines
computers
puters
solving
floating
causes
cessing
generalized speedup
traditional speedup
problem size
virtual memory
asymptotic speed
scaled speedup
superlinear speedup
bounded speedup
sequential processing
sequential speed
parallel processing
relative speedup
single processor
average speed
scaled problem
local memory
memory machines
parallel computers
access time
multiple processors
execution time
parallel computer
size speedup
square ksr
processors increases
virtual address
sequential algorithm
p processors
large problem
machine combination
profile shifting
unitary speedup
reasonable measurement
large problems
memory machine
sequential execution
scientific application
analytic model
parallel execution
performance metrics
parallel algorithm
generalized speedup is
shared virtual memory
number of processors
virtual memory machines
time generalized speedup
generalized speedup and
speedup is a
1 parallel computer
regularized least squares
speedup can be
kendall square ksr
scaled speedup is
defined as parallel
causes of superlinear
problem size increases
c p s
algorithm machine combination
virtual memory machine
local ring ring
virtual address space
simple analytic model
superlinear speedup are
sequential execution time
parallel execution time
message passing model
shared memory model
existing performance metrics
scientific application has

corpus/krapavin2000-test/629399.txt
broadcasting
buses
meshes
supporting
processors
architectures
computations
computers
enhancing
involves
multiple broadcasting
upper hulls
row buses
hull algorithm
right neighbors
semigroup computations
log n
sorted points
n points
rectangular meshes
local communications
l schwing
supporting lines
stephan olariu
processor holding
computational geometry
theta n
convexity guarantees
optimal convex
size n
size p
hull problem
hull algorithms
mesh architecture
square meshes
lower hull
increasing x
multiple broadcasting of
broadcasting of size
meshes with multiple
convex hull algorithm
new upper hull
performed in o
sorted points in
optimal convex hull
convex hull problem
convex hull is
massively parallel architectures
n sorted points

corpus/krapavin2000-test/629409.txt
crowns
ordering
orders
databases
decisions
timestamping
partial order
communication structure
partial orders
ordering decisions
multilevel security
hierarchical databases
communication structures
ordered property
event ordering
concurrency control
secure databases
consistent ordering
free property
transaction processing
control algorithms
security classifications
global synchronization
dominated classes
timestamping algorithm
global consistent
directional communication
planar lattice
distributed environment
e p
maximal element
directed graphs
planar lattices
unique greatest
consistent orderings
timestamp generation
acyclic communication
local order
execution histories
corresponding timestamps
ordering decisions are
concurrency control algorithms
replicated secure databases
free partial orders
multilevel replicated secure
communication structures that
partial orders to
partial order s
consistent ordering decisions
additional synchronization information
directional communication structure
global consistent order
local ordering decisions
global p states
describe communication structures
unique greatest lower

corpus/krapavin2000-test/629420.txt
blocking
terminating
synchronization
shooting
deadlocks
processes
nets
blocks
semaphores
programs
terminates
locking
paths
constraint line
initial point
non terminating
possible tets
terminating programs
line instance
non blocking
final point
constraint lines
diagonal ray
line segments
l f
n th
progress graph
ray shooting
time units
performance properties
cartesian graph
petri net
line segment
continuous path
program execution
consumer program
terminating program
petri nets
synchronization operation
program state
g c
periodic behavior
synchronization points
graph model
horizontal ray
synchronization point
model corresponding
execution trajectory
constraint line instance
non terminating programs
timed progress graph
initial point g
computational geometric algorithms
computational geometric problem
graph model corresponding
non blocking tets
another constraint line
geometric performance analysis
exclusive resource access

corpus/krapavin2000-test/629425.txt
keys
sorting
batcher
sequences
networks
merging
dimensions
routing
products
sorters
trees
running
sorts
grids
graphs
hypercubes
embedding
nodes
instances
ting
product networks
snake order
dimensional product
sorting algorithm
n r
r keys
sorted sequence
product network
sorted sequences
homogeneous product
de bruijn
merge sorting
merge algorithm
running time
sorting n
merge process
asymptotic complexity
sort n
even transposition
connected trees
batcher algorithm
permutation routing
sorting network
sorting networks
factor graph
node r
bruijn networks
initial situation
petersen graphs
petersen graph
product graph
sorting algorithms
exchange networks
merge operation
time complexity
graph g
exchange network
bruijn network
unit hamming
recursive call
n r keys
complexity of sorting
r dimensional product
sort n r
merge sorting algorithm
n sorted sequences
number of dimensions
homogeneous product networks
single sorted sequence
sequence of keys
ary gray code
sorting algorithm on
sorting algorithm for
de bruijn networks
factor graph g
multiway merge sorting
sorted sequences into
gray code sequences
even merge sorting
shuffle exchange networks
running time of
running time is
de bruijn or
de bruijn network
dimensional product network
merge sorting network
dimensional product graph
unit hamming distance
homogeneous product network

corpus/krapavin2000-test/629430.txt
retiming
unfolding
scheduling
preprocessing
trans
schedules
graphs
hms
ules
unfolding factor
r f
g r
legal retiming
g f
unfolded graph
factor f
minimum iteration
delay count
time dfg
f c
r v
static schedule
graph g
period c
original dfg
d p
retiming algorithm
trans production
dot ab
delay counts
time o
given unfolding
flow graphs
via retiming
d e
f v
scheduling data
time dfgs
unfolding factors
f copies
computation time
o f
d f
shortest path
original graph
flow graph
sha scheduling
f g
path algorithms
f r
d l
preprocessing algorithm
d r
e f
retiming algorithms
retiming and unfolding
legal retiming r
minimum iteration period
cycle period c
minimum cycle period
library trans production
f library trans
given unfolding factor
via retiming and
graphs via retiming
unfolded graph g
original graph g
negative delay counts
sha scheduling data
unit time dfgs
shortest path algorithms
u v s
optimal schedule can

corpus/krapavin2000-test/629432.txt
nurbs
splines
curves
surfaces
graphics
normals
calculating
patches
weights
cycles
conics
blending
workstations
architectures
vectors
vertices
timing
rendering
modeling
primitives
basis function
control points
basis functions
knot vector
rational b
virtual control
spline curves
useful basis
control point
function values
spline curve
active control
parametric value
clock cycles
function computation
function evaluation
unified architecture
uniform b
l v
systolic architecture
function value
normal vectors
vlsi architecture
geometric modeling
linear structure
first term
parametric values
nurbs surfaces
modeling applications
compute nurbs
function generation
clock cycle
particular value
second term
end workstations
standard graphics
nurbs curves
functional units
computer graphics
basis function values
curves and surfaces
virtual control points
rational b spline
control points and
useful basis functions
spline curves and
active control points
basis function computation
uniform rational b
basis function evaluation
rational b splines
order basis functions
function evaluation array
basis functions and
computation of nurbs
parametric value u
basis function value
order basis function
weighted control points
useful basis function
first order basis
basis function curves
two clock cycles
every two clock
k basis functions
basis function generation
compute nurbs surfaces
highly suitable for
standard graphics pipeline
virtual control point
suitable for integration
curve control points
computation of uniform

corpus/krapavin2000-test/629437.txt
balancing
tasks
computers
processors
transfers
vectors
phases
transferring
simulations
communication
workstations
mapping
exceeds
neighboring
strategies
balances
cur
communicating
multicomputers
load balancing
transfer vectors
transfer vector
load balance
dynamic load
task selection
vector algorithms
total load
diffusion algorithm
balancing framework
communication locality
total work
imbalance exists
grid cells
overall efficiency
task mapping
c l
load distribution
dimensional exchange
balancing system
global load
hierarchical balancing
communicating tasks
gather scatter
balancing strategies
local load
dynamic load balancing
transfer vector algorithms
load balancing framework
load balancing algorithm
total work transfer
scalable concurrent programming
load imbalance exists
work transfer vectors
load balancing to
load balancing problem
achieve load balance
one computer to
tasks to computers
mapping of tasks
load balancing system
various transfer vector
set of computers
number of particles
applied to two
load balancing strategies

corpus/krapavin2000-test/629439.txt
packings
packing
hypercubes
embedding
embeddings
dimensions
ratios
dings
graphs
connecting
mapping
ranging
ding
sorting
cubes
dilation embeddings
sized packings
star graph
sized packing
average dilation
dilation embedding
disjoint union
expansion ratios
star graphs
packing techniques
template packings
d avr
asymmetric packings
small expansion
embedding techniques
dimension links
dilation vector
discarded submeshes
th dimension
dimensional star
symmetric packings
packing hypercubes
low expansion
node allocation
embedded hypercubes
embedding hypercubes
many copies
dimensional hypercube
embed dings
produce dilation
asymmetric template
variable dilation embeddings
variable dilation embedding
embedded into s
dilation embedding of
dilation d base
odd sized dimensions
dilation embedding techniques
hypercubes into s
embedding hypercubes into
average dilation d
dimensional star graph
packings and embeddings
dimension b links
devised for the

corpus/krapavin2000-test/629443.txt
scheduling
tasks
deadlines
multiprocessor
processors
studies
multiprocessors
requirements
conflicting
executing
achieving
res
task scheduling
parallelizable task
scheduling algorithm
myopic algorithm
dynamic scheduling
feasible schedule
resource requirements
time systems
simulation studies
time tasks
multiprocessor systems
computation time
case computation
split tasks
resource constraints
scheduling algorithms
multiprocessor real
resource reclaiming
preemptive algorithm
always higher
computation times
time task
available time
among tasks
ready time
current task
current schedule
scheduling problem
proposed algorithm
exclusive mode
task model
new tasks
different values
time scheduling
lower values
constrained tasks
meeting deadlines
higher scheduling
high schedulability
parallelizable task scheduling
feasibility check window
task scheduling algorithm
scheduling algorithm for
real time systems
dynamic scheduling algorithm
real time tasks
worst case computation
case computation time
always higher than
meet their deadlines
real time task
earliest available time
parallelism in tasks
constraints among tasks
time multiprocessor systems
proposed algorithm is
real time multiprocessor
real time scheduling
extensive simulation studies
satisfy such requirements
robot arm dynamics
dynamically arriving real
myopic scheduling algorithm
tasks are less
achieving high resource
intermediate solution which
higher scheduling overhead
myopic algorithm fig
overhead parallelizable task
times of tasks
first k tasks
resource utilization are

corpus/krapavin2000-test/629444.txt
supernodes
hyperplanes
tiling
transformation
partitioning
lengths
loops
processors
running
iterations
discusses
cutting
grouping
planes
dencies
minimizing
dependencies
supernode size
supernode transformation
total running
grain size
optimal supernode
linear schedule
index space
running time
optimal grain
length vector
side lengths
iteration index
relative side
dependence matrix
dependence vectors
different supernode
parameter model
relative length
parameter communication
optimal linear
partitioning hyperplanes
supernode transformations
parallelepiped supernode
communication model
communication time
communication phases
nested loops
side length
matrix h
closed form
supernode partitioning
r g
n partitioning
memory parallel
communication phase
iteration space
consider algorithm
optimal shape
dimensional algorithm
distributed memory
single processor
form expression
computation time
loop nests
affine function
normal vectors
nested loop
athanasaki aristidis
parallelepiped supernodes
athanasaki nectarios
square containing
extreme vectors
algorithm problems
total running time
optimal grain size
optimal supernode size
iteration index space
grain size and
supernode size and
optimal linear schedule
parameter communication model
relative length vector
side length vector
relative side length
length vector r
different supernode sizes
one parameter model
optimal relative length
grain size g
one parameter communication
communication cost is
relative side lengths
index space and
supernode relative side
distributed memory parallel
two parameter model
constant bounded loop
discusses how to
optimal supernode shape
optimal supernode relative
closed form expression
memory parallel computer
bounded loop iteration
supernode size changes
also provided for
n partitioning hyperplanes
supernode relative length

corpus/krapavin2000-test/629452.txt
routing
neighbors
networks
metrics
neighboring
networking
transmissions
protocols
routes
nodes
forwarding
ts
positioning
routing algorithm
routing algorithms
ad hoc
power consumption
wireless networks
efficient routing
hoc networks
sensor networks
localized routing
hoc wireless
energy consumption
path algorithm
routing task
cost routing
direct transmission
mobile ad
neighboring nodes
routing protocols
hop count
routing decisions
transmission power
power savings
delivery rates
aware routing
compass routing
neighboring node
hoc networking
routing tasks
total power
aware metrics
unit graphs
power saving
based routing
localized algorithms
control messages
total energy
shortest path
proposed localized
increased energy
delivery rate
adjusted transmissions
previous node
dir routing
efficient routing algorithm
routing algorithm is
ad hoc networks
shortest weighted path
ad hoc wireless
hoc wireless networks
mobile ad hoc
routing in wireless
wireless sensor networks
wireless ad hoc
weighted path algorithm
ad hoc networking
location update scheme
cost routing algorithms
cost efficient routing
routing algorithms are
localized power efficient
power needed to
r tv s
per routing task
localized routing algorithm
localized routing algorithms
power aware routing
power adjusted transmissions
neighbors and destination
increased energy consumption
random progress method
aware routing algorithm

corpus/krapavin2000-test/629472.txt
messages
hypercubes
protocols
failures
topologies
nodes
gossiping
ms
ring
connections
simulations
routing
superimposing
detecting
sending
percubes
cubes
stability detection
logical hypercube
detection protocols
sequence number
info message
reliable multicast
incomplete hypercube
stability information
detection protocol
message stability
coord protocol
hypercube structure
incomplete hypercubes
o n
network topology
first node
fulldist protocol
last message
current round
group communication
physical topology
stability messages
coordinator receives
stability message
node sends
logical neighbors
physical network
info messages
logical hypercubes
current iteration
network topologies
stability detection protocols
stability detection protocol
number of nodes
cubefulldist coord fulldist
logical hypercube structure
average network load
number p s
o n messages
messages are sent
info message containing
logical hypercube approach
randomly generated network

corpus/krapavin2000-test/629492.txt
tiling
cutting
supernodes
hyperplanes
lengths
directions
transformation
loops
iterations
partitioning
processors
dependencies
perplanes
transformations
running
rections
minimizing
cies
passing
gorithms
linear schedule
supernode transformation
index space
tiling cone
hyperplane direction
projection vectors
direction matrix
iteration index
relative side
cutting hyperplane
schedule vector
supernode size
maximal projection
supernode shape
side lengths
optimal supernode
total running
dependence vectors
matrix h
column vectors
optimal linear
side length
communication startup
running time
hyperplane directions
supernode index
dimensional algorithms
dependence cone
supernode partitioning
equal components
length vector
jacobi algorithm
optimal cutting
supernode transformations
uniform dependencies
available processors
extreme points
relative supernode
sufficient condition
vector r
nested loops
nested loop
computation time
stronger result
athanasaki nectarios
parallelepiped supernodes
continuous space
partitioning hyperplanes
multidimensional iteration
negative components
diagonal matrix
iteration index space
hyperplane direction matrix
linear schedule length
linear schedule vector
relative side lengths
total running time
maximal projection vectors
optimal linear schedule
cutting hyperplane direction
extreme projection vectors
optimal relative side
supernode index space
optimal supernode shape
supernode relative side
relative side length
cutting hyperplane directions
side length vector
extreme dependence vectors
original iteration index
time optimal supernode
running time is
number of iterations
maximal projection vector
extreme index points
optimal hyperplane direction
space and should
relative supernode side
optimal cutting hyperplane
new maximal projection
continuous space and
derived in continuous
optimal orthogonal tiling
results are derived
multidimensional iteration spaces

corpus/krapavin2000-test/630534.txt
mining
pruning
features
classification
classifiers
sequences
bayes
domains
traces
criteria
patterns
attributes
primitives
rules
predicting
classification algorithms
frequent sequences
feature f
pruning rules
training examples
data mining
value pairs
naive bayes
feature mining
featuremine algorithm
pruning rule
classification accuracy
boolean features
sequential domains
standard classification
mining techniques
selecting features
execution traces
sequence mining
decision lists
sequence data
mining algorithm
potential features
sequential features
improve classification
training data
new examples
boolean feature
possible features
frequent sequence
redundant features
mining algorithms
sequential data
large space
class labels
features produced by
feature value pairs
data mining techniques
number of features
standard classification algorithms
mining techniques to
sensitive spelling correction
data mining algorithms
web usage data
feature set f
plan execution traces
primitives for describing
reduce classification accuracy
classify new examples
different min freq
first pruning rule
scalable feature mining
significantly correlated with

corpus/krapavin2000-test/630575.txt
interestingness
rules
conforming
mining
ranking
specifications
metaqueries
analyzing
measures
discovering
association rules
discovered rules
unexpected rules
interesting rules
existing knowledge
conforming rules
discovered rule
unexpected condition
consequent parts
unexpected consequent
association rule
generalized association
rule mining
consequent rules
condition rules
discovered association
subjective interestingness
visualization system
data mining
interestingness analysis
objective interestingness
specification language
rules using
analysis system
purpose ranking
unexpected patterns
unexpected association
various types
interesting association
interestingness measures
consequent part
user identify
interesting ones
objective measures
mining algorithm
unexpected consequent rules
unexpected condition rules
side unexpected rules
association rule mining
discovered association rules
generalized association rules
number of rules
interestingness analysis system
generalized association rule
rules using the
existing knowledge about
association rules using
rule mining process
identify those potentially
potentially interesting rules
unexpected association rules
discovered rules according
unexpected consequent match
set of rules
interesting association rules
interestingness match values
unexpected consequent rule

corpus/krapavin2000-test/631019.txt
sys
quantifying
probabilities
rejecting
computers
reliability growth
software reliability
ultrareliable region
failure rate
test time
p sys
growth model
moderate reliability
growth models
life testing
independence assumption
tolerant software
fault tolerance
replacement case
test specimens
system failure
feasible amounts
system reliability
software failure
fi errors
ultrareliable systems
fi error
reliability region
critical applications
test duration
reliability models
binomial process
physical failures
digital computers
low reliability
hour mission
failure times
software bugs
exponential process
design flaws
test specimen
separate programming
failure process
subjective arguments
ultrareliable system
different versions
critical software
key assumption
reliability modeling
system fails
reliability model
software fault tolerance
reliability growth models
expected time on
fault tolerant software
reliability growth model
tolerant software reliability
expected test duration
moderate reliability region
software reliability modeling
used in life
software engineering notes
real time execution
desired levels of
finished when r
tester chooses values
smaller the statistical

corpus/krapavin2000-test/631027.txt
ecs
cs
clients
dbms
workstations
architectures
caching
delis
rates
configurations
locking
workloads
queuing
streams
participating
multiprogramming
roussopoulos
qualifying
submitting
databases
resources
stations
utilizing
loads
server dbms
cached data
dbms architectures
throughput rates
server disk
concurrency control
main memory
update rates
enhanced client
server database
update rate
server relation
simulation packages
unify type
light update
update jobs
client cache
server architecture
cs configuration
cont caching
cache memory
shared database
closed queuing
cache consistency
page accesses
database system
new data
server relations
page instructions
incremental access
differential files
client server dbms
w orkload generator
number of clients
enhanced client server
number of workstations
server dbms architecture
zero update curves
concurrency control manager
server disk accesses
cont caching perc
almost proportional to
server dbms architectures
queuing network models
ecs over cs
workstation server architectures
number of participating
maintaining consistency of
high throughput rates
enhanced workstation server
queue workload generator
server database architectures
simple database operations

corpus/krapavin2000-test/631036.txt
subdomains
criteria
partitions
detecting
subsumes
faults
strategies
covering
measures
relations
arising
belonging
selecting
relationships
program p
properly partitions
fault detecting
detecting ability
input domain
test cases
criterion c
test case
uses criterion
failure causing
covers relation
testing criteria
flow testing
narrows relation
partition testing
subdomain consists
detecting faults
test data
based criteria
edges criterion
variable v
testing strategies
partitions relation
test suites
applicable analogs
requires selection
random testing
branch testing
testing techniques
repetitive statement
specification pair
subdomains arising
subsumes relation
software testing
clear path
probabilistic measures
data selection
selection strategies
c 1 properly
fault detecting ability
properly partitions c
p specification s
1 properly covers
1 is better
failure causing inputs
data flow testing
detecting ability of
c 2 does
better at detecting
sdc p s
detecting faults than
universally applicable analogs
testing ieee transactions
flow testing criteria
covers and properly
software engineering notes
test data selection
2 does not
n test cases

corpus/krapavin2000-test/631040.txt
lemur
versions
subversions
rcs
files
graphics
string
programmers
versioning
controlling
families
meaning
programs
configurations
environments
fast version
version control
relevant version
version language
complete system
structure principle
version v
vanilla version
variant structure
version space
possible world
software configuration
different versions
software development
complete systems
refinement relation
configuration manager
variant substructure
appropriate version
substructure principle
join versions
numeric versions
relevant versions
software configurations
c programs
software engineering
different components
different programmers
russian bulgarian
possible versions
software databases
system modelling
local significance
configuration systems
intensional logic
version algebra
dictionary order
variant structure principle
least upper bound
variant substructure principle
software system modelling
approach to version
notion of versions
infinite precision arithmetic
configuration management systems
software configuration systems
engineering software configurations
system modelling facility
integrating noninterfering versions
extensible software environments

corpus/krapavin2000-test/631068.txt
subjects
exposing
criteria
edges
associations
exposes
detecting
programs
questions
studies
comparing
misleading
test sets
adequate test
adequacy criteria
null criterion
adequacy criterion
subject programs
software engineering
subject program
test generation
detecting ability
test data
use associations
test case
flow testing
test cases
logistic regression
software testing
executable duas
nine subjects
fault detecting
testing criteria
error detecting
generation strategy
error exposing
random testing
edges criterion
exposing ability
testing techniques
uses criterion
increased effectiveness
prob exposing
set exposes
hypothesis testing
executable edges
software test
larger test
branch testing
satisfy criterion
criterion c
random test
error increases
path testing
set satisfies
adequate test sets
test sets that
test set size
adequate test set
definition use associations
data flow testing
detecting ability of
extent to which
test generation strategy
uses adequate test
generated test sets
error detecting ability
comparison of criteria
four of the
likely to detect
error exposing ability
test set sizes
fault detecting ability
test data adequacy
larger test sets
test set exposes
data adequacy criteria
randomly generated test
software engineering notes
flow testing criteria
effective than c2
associations or edges
test set satisfies
sparse matrix package
test generation techniques
edges adequate test
likely to expose

corpus/krapavin2000-test/631072.txt
exceptions
handlers
languages
effecting
notations
constructs
semantics
shielding
raising
incorporating
res
ceptions
grams
treating
exception handling
resume exceptions
shielded objects
functional languages
resume exception
exception e
strict functions
functional forms
shielded object
terminate exception
handler functions
handler function
exception handlers
terminate exceptions
primitive functions
defined exceptions
deterministic behavior
exception objects
activation point
fp functions
handler h
referential transparency
strict semantics
handling constructs
new constructs
algebraic properties
exception values
incorporating exception
fundamental conflict
algebraic laws
functional programming
standard ml
handling construct
conventional view
functional lan
treat exceptions
properties of functional
means of effecting
exception handling constructs
exceptions can be
functional or applicative
expression oriented language
incorporating exception handlers
view of treating
system defined exception
deterministic program behavior
conventional control flow
completely shielded objects

corpus/krapavin2000-test/631084.txt
subdomains
covers
criteria
suites
subsumes
detecting
faults
causing
covering
duplicates
strategies
programs
selecting
distributions
measures
relations
branch testing
test case
failure causing
test suites
mutation testing
test cases
fault detecting
detecting ability
testing criteria
test selection
program p
causing inputs
criterion c
cover c
detecting faults
coverage criterion
input domain
software testing
covers relation
test data
covers decision
flow testing
adequacy criteria
partition testing
tuples criterion
testing strategies
paths criterion
subdomain consisting
coverage according
relative fault
selection strategies
data selection
expression controlling
universally properly covers
universally properly cover
properly covers c
ordered context coverage
minimized decision condition
fault detecting ability
1 properly covers
failure causing inputs
c 1 properly
properly cover c
detecting ability of
one test case
c 2 for
failure causing input
data flow testing
1 universally properly
properly covers relation
sdc p s
limited mutation testing
subsumes but does
detecting faults than
guaranteed to be
likely to detect
better at detecting
c 1 to
set of subdomains
simple oi paths
test data adequacy
flow testing criteria
test data selection
condition coverage criterion
relative fault detecting
least as likely
selecting test cases
test suite t
boolean expression controlling

corpus/krapavin2000-test/631115.txt
specifications
rewriting
axioms
lemmas
proofs
annotations
arguments
strategies
equations
proving
units
reasoning
tasks
hints
designing
implementations
programs
concepts
languages
attempts
power function
sufficient completeness
term rewriting
design strategies
type stack
power functions
defined operations
rewrite system
program units
equational reasoning
subprogram parameters
abstract data
data types
inductive hypothesis
abstract properties
inductive variables
rewrite systems
generic program
proving theorems
syntactic properties
manipulate objects
program components
verification tasks
recursive constructors
crucial properties
critical pairs
representation mapping
verification problems
inductive arguments
algebraic specifications
program correctness
type parameters
formal proofs
equational specification
actual parameters
algebraic specification
verification techniques
abstract data types
generic program units
abstract base classes
recursive reduction strategies
generic formal subprogram
generic subprogram parameters

corpus/krapavin2000-test/631132.txt
certification
profiles
probabilities
modelling
developing
ring
measures
concerning
ures
ponents
usage model
software components
behaviour level
usage models
hypothesis certification
certification model
shy model
usage profiles
reliability measure
failure data
component certification
usage modelling
user types
test cases
user type
new usage
reliability measures
usage testing
reusable components
external user
different usage
structural usage
state hierarchy
software systems
external view
system configurations
reliability level
service usage
future reliability
model parts
external users
new profile
actual usage
new certification
certification of software
usage model and
hypothesis certification model
certification of components
user type level
usage profile can
different usage profiles
usage model must
new usage profile
developing for and
makes it possible
concluded that the
actual usage profile
software components proceedings
modelling of software
different system configurations
software reuse emerging
specific reliability level
cases and collection
software components system
reuse emerging technology

corpus/krapavin2000-test/631135.txt
firing
spns
marking
nets
transitions
dspns
distributions
entries
underlying
scaling
cesses
enabling
processes
stochas
stochastic petri
firing time
petri nets
distributed firing
regeneration points
state solution
firing times
stochastic process
petri net
probability vector
transient analysis
conversion factors
timed transitions
immediate transitions
process underlying
regenerative spns
markov regenerative
discrete time
timed petri
transition probability
numerical solution
regenerative transition
extended dspns
time distributions
state probabilities
regeneration point
execution policies
regenerative transitions
markov spns
firing distributions
average firing
subordinated processes
activity networks
continuous time
generalized timed
time distribution
analytical solution
transition firing
markov chain
software engineering
stochastic activity
exponential transitions
spn classes
constant firing
immediate transition
supplementary variables
generalized semi
tangible marking
markov process
geometric distribution
stochastic petri nets
steady state solution
stochastic petri net
exponentially distributed firing
transition probability matrix
distributed firing times
stochastic process underlying
process underlying a
state probability vector
step transition probability
steady state analysis
underlying stochastic process
steady state probability
underlying a stochastic
regenerative stochastic petri
firing time distributions
deterministic and stochastic
timed petri nets
distributed firing time
generalized stochastic petri
generalized timed petri
semi markov spns
embedded markov chain
generalized semi markov
increasingly efficient solution
constant firing times
transient state probabilities
average firing time
stochastic activity networks

corpus/krapavin2000-test/631150.txt
copies
processes
processors
failures
sampling
serving
controlling
quirements
warm standby
hot standby
control process
standby copies
batch reactor
primary copy
cold standby
partial copy
control processes
logical communication
processing power
level processes
reactor system
partial copies
control programs
sensor sampling
optimal temperature
chemical batch
control hierarchy
hierarchical control
stop processors
control program
full copies
seniority function
simulation evaluation
consecutive reactions
control information
processor failures
hardware failures
mean square
square error
standby using
active copies
unmaintainable systems
temperature changes
warm standby copies
warm standby scheme
hot standby copies
process control programs
chemical batch reactor
batch reactor system
temperature profile is
logical communication links
upper level processes
logical communication link
hot standby copy
mean square error
jacket temperature profiles
triple processor failures

corpus/krapavin2000-test/631158.txt
jobs
sites
queuing
sharing
balancing
designers
expressions
interpretations
insights
measures
load sharing
sharable jobs
j c
traffic intensity
queue size
job sharing
sharing coefficient
queuing models
underloaded sites
probability distribution
mean number
overloaded sites
conditional random
independent instances
general formula
distributed system
load balancing
across sites
random variables
job arrival
system parameters
queuing model
n l
exact expressions
system performance
overall system
important queuing
particular queuing
total underload
transferred jobs
various combinations
distributed computing
system designers
probability distributions
service time
arrival rate
exact expression
number of jobs
jobs that can
job sharing coefficient
sharable jobs is
load balancing success
sharing coefficient is
overall system performance
load sharing is
across sites in
transferred across sites
important queuing models
including a general
overload and underload
load sharing in
j c vs
transferred from s
sharing in distributed
balancing success plbs
job arrival rate
distributed computing system
distributed computing systems

corpus/krapavin2000-test/631167.txt
periods
tasks
timing
constraints
scheduling
channels
sampling
requirements
ingredients
avionics
blocking
guaranteeing
solutions
imposing
deriving
restricting
task graph
end constraints
intermediate constraints
separation constraints
freshness constraints
correlated inputs
end requirements
timing constraints
correlation constraints
restructuring tool
period variables
time systems
external inputs
assignment algorithm
variable elimination
different rates
parent pruning
asynchronous task
child pruning
static priority
correlated data
task periods
execution time
timing parameters
solution strategy
virtual sequence
harmonicity constraints
deadline variables
chain merging
intermediate tasks
free variables
following ingredients
simple fact
cpu utilization
small example
algorithm fails
time tasks
time scheduling
offsets and deadlines
real time systems
asynchronous task graph
gcd parent pruning
set of constraints
harmonic chain merging
maximum execution time
reads and writes
non linear constraints
real time tasks
real time scheduling
much as possible
intermediate constraint assignment
straightforward priority assignment
real time designs
original task graph
real time producer
producer consumer pairs
sampler task s

corpus/krapavin2000-test/631169.txt
timing
cache
processors
pruning
succeeding
preceding
calculating
tasks
surrounding
scheduling
pipelining
programs
effects
analyzing
ignoring
predictions
bounds
program construct
first reference
case execution
timing information
timing schema
timing analysis
execution path
pipelined execution
last reference
execution time
worst case
wcet bounds
cache memory
risc processors
time systems
basic block
memory block
cache miss
original timing
execution scenario
case timing
program constructs
timing effects
preceding program
extended timing
wcet analysis
succeeding program
instruction cache
pipelined processors
basic blocks
timing variation
revised timing
loop timing
simple time
execution paths
preemptive scheduling
analysis technique
instruction references
instruction caches
cache hits
timing behavior
cache partitioning
pipelining effects
schema approach
pipelined processor
timing variations
differ depending
worst case execution
case execution path
pipelined execution and
real time systems
timing analysis of
case execution scenario
pipeline cache timing
original timing schema
worst case timing
timing information of
timing effects of
extended timing schema
effects of pipelined
succeeding program construct
case execution time
sequence of instructions
loop timing analysis
analysis of pipelined
execution path that
timing information associated
preceding program construct
wcets of tasks
case timing analysis
information associated with
instruction block references
within a maximum
history sensitive nature
instruction block addresses
maximum of about
case timing abstraction
worst case scenario

corpus/krapavin2000-test/631174.txt
units
conversions
checking
quantities
factors
languages
converting
tables
constants
procedures
dividing
measurements
conversion factor
unit conversion
conversion factors
dimensional analysis
base units
source unit
si system
unit conversions
numeric conversion
generic procedures
integer encoding
programming languages
dimension checking
include units
kilogram meter
composite unit
unit checking
si units
convert units
numeric constant
equivalent combination
conversion algorithms
conversion of units
system of units
combination of units
conversion factor and
numeric conversion factor
per unit for
conversion factor f
conversion is legitimate
combinations of units
quantities and units

corpus/krapavin2000-test/631185.txt
diagrams
formulas
actions
specifications
proofs
aspects
satisfying
describing
agrams
dia
meaning
las
string
action diagram
tla formula
action diagrams
state function
fairness condition
transition diagrams
state satisfying
initial nodes
complete specification
fairness conditions
tla specifications
complementary views
provide complementary
describe aspects
temporal logic
possible state
formula asserts
predicate action diagrams
state transition diagrams
hai v steps
one that increments
infinitely many steps
hx yi steps
diagrams can be
logic of actions

corpus/krapavin2000-test/631204.txt
views
correspondences
procedures
equations
languages
storing
representations
units
interfaces
viewing
versions
checking
ls
basis variables
abstract type
application data
application type
generic procedures
generic algorithms
software reuse
abstract data
view type
glisp compiler
generic procedure
symbolic algebra
solved variables
specialized versions
data types
graphical interface
data translation
independence properties
using views
graphical user
specialized version
user interface
data representations
generic algorithm
abstract types
transformational programming
line compilation
user obtains
ordinary programming
specialized versions of
abstract data type
application data structure
views from correspondences
2d deleting eqn
application data and
basis variable v
views can be
graphical user interface
data representations and
object oriented programming
application data type
versions of generic
described in this
abstract data types
procedure that is
directly on the
data can be
pipe can be
circle can be
ordinary programming language

corpus/krapavin2000-test/631218.txt
interactions
reconfiguration
abstractions
sharing
actions
expressing
constructs
reasoning
services
participants
semantics
hosts
appending
executing
synchronizing
agents
underlying
failures
mobile unity
standard unity
reactive statements
reactive statement
mobile computing
interactions section
assignment statements
software engineering
transient sharing
mobile components
proof logic
state satisfying
compositional programming
programming abstractions
new statements
reactive propagation
ed b
program composition
current location
program variables
earlier example
shared variables
wireless communication
hand sides
variable bit
coordination constructs
fair interleaving
unity programs
true reacts
mobile setting
underlying variables
synchronization relationships
abstractions for mobile
state satisfying p
compositional programming abstractions
roman compositional programming
mobile computing systems
left hand variables
f true reacts
f false reacts
driver ha s
decoupled and context
among mobile components
mobile unity can
capable of expressing

corpus/krapavin2000-test/631246.txt
breakers
objectives
controllers
closing
opening
concerns
requirements
solutions
circuit breakers
transformer station
control objectives
power transformer
signal program
order relation
controller synthesis
station controller
signal language
dynamical system
physical fault
initial states
departure level
discrete event
synthesis methodology
verification objectives
controller c
double fault
different circuit
link circuit
event systems
different cells
state variables
dynamical systems
polynomial relation
departure circuit
controller insuring
signal programs
controller using
system evolves
logical abstraction
next instant
departure cells
closing requests
physical model
local controllers
primitive operators
polynomial equations
order relations
optimal control
power transformer station
transformer station controller
polynomial dynamical system
polynomial dynamical systems
discrete event systems
different circuit breakers
transformer station network
controller synthesis methodology
upstream circuit breakers
station controller using
terms of polynomial
controlled system sc
control verification objectives
traditional control objectives

corpus/krapavin2000-test/631250.txt
faults
modules
metrics
hypotheses
predictors
failures
releases
relating
benchmarking
predicting
studies
misleading
warnings
fault density
release faults
prone modules
complexity metrics
cyclomatic complexity
software engineering
operational faults
fault densities
higher incidence
hypotheses relating
size metrics
release testing
pareto principle
fault data
good predictors
module size
small proportion
failure prone
small number
system size
strong evidence
fault prediction
engineering hypotheses
design metrics
failure data
software system
testing phases
later fault
normalised data
major releases
absolute number
software development
testing effort
good predictor
fault prone modules
post release faults
number of modules
hypotheses relating to
pre release faults
number of faults
failure prone modules
simply because those
distribution of faults
modules which are
early fault data
software engineering hypotheses
predict later fault
testing and operational
subsequent major releases
cyclomatic complexity figure
two releases of
systems produced in
corresponding phases of
popular complexity metrics
metrics based on
similar fault densities
broadly similar fault
densities at similar

corpus/krapavin2000-test/631253.txt
telecommunication
configurations
queueing
modelling
waiting
proposes
patterns
bottlenecks
alternatives
weaknesses
transformations
running
bridging
exposes
processes
lqn model
architectural patterns
software architecture
performance models
telecommunication system
performance attributes
requesthandler replications
software performance
asynchronous message
upstreamfilter downstreamfilter
replications utilization
performance modelling
critical section
performance engineering
passive object
performance analysis
software components
performance model
different processor
synchronous message
server systems
excessive serialization
included services
software bottleneck
architectural pattern
upstrmfilter downstrmfilter
queueing network
performance limitations
model parameters
active objects
execution times
building performance
lqn models
distributed software
early performance
processing power
critical sections
systematic approach
service requests
different software
system request
hardware devices
architectural connection
performance characteristics
different configurations
pipeline and filters
different processor nodes
requesthandler replications utilization
approach to building
high level architecture
upstreamfilter downstreamfilter buffer
due to excessive
buffer upstrmfilter downstrmfilter
buffer upstreamfilter downstreamfilter
client server systems
critical section accessor
building performance models
software performance engineering
processor database requesthandler
processor configuration base
maximum achievable throughput
3rd international workshop
execution time demands
database requesthandler figure

corpus/krapavin2000-test/633045.txt
streaming
joining
protocols
media
ms
paths
topologies
trees
metrics
networks
groups
multicasting
layer multicast
application layer
end hosts
nice protocol
multicast group
cluster leader
multicast protocols
multicast protocol
overlay topology
delivery path
level hops
link stress
control overheads
group size
cluster leaders
average member
average control
failure recovery
direct unicast
member departures
bandwidth data
multicast using
group members
cumulative distribution
large receiver
stream applications
area implementation
join procedure
international workshop
multicast data
member h
different members
application layer multicast
layer multicast protocols
application level hops
layer multicast protocol
data delivery path
data stream applications
wide area implementation
ieee acm transactions
average link stress
14th international workshop
average control overhead
stevenson washington usa
low bandwidth data
acm international conference
new host joins
scalable application layer
average path length
worst case control

corpus/krapavin2000-test/633055.txt
flows
packets
traces
limiting
rates
connections
limits
links
dynamics
peering
factors
statistics
routing
characteristics
causes
rate limiting
packet traces
flow rates
delayed acknowledgments
bottleneck link
acknowledgment packets
summary flow
limiting factors
acknowledgment stream
rate limit
cumulative fraction
limiting factor
successive flights
flow rate
internet flow
tcp connections
access links
link bandwidth
transmit data
periodic determinations
consecutive flights
trip time
flow size
packet trace
flow characteristics
rate distribution
single direction
window limits
flow level
flow statistics
complementary distribution
total bytes
limit determination
rate limiting factor
rate limiting factors
without delayed acknowledgments
fraction of bytes
8 packet traces
rate limiting behavior
flow rates and
cumulative fraction flow
internet flow rates
round trip time
number of packets
internet measurement october
flows transmit data
summary flow data
delayed ac knowledgments
rate limit determination
percentage of bytes
rate limiting behaviors
congestion limited transport
receiver limited figure
fraction of flows
dominant rate limiting
application limited congestion
flow level statistics
transport limited receiver

corpus/krapavin2000-test/633558.txt
communication
bits
protocols
las
coding
bounds
teleporting
turing
communication complexity
quantum communication
classical communication
lower bounds
quantum circuit
classical bits
unitary transformation
quantum algorithms
quantum computation
d f
error protocols
basis state
n qubits
error quantum
lower bound
quantum query
superdense coding
private coin
quantum protocols
input x
hadamard transform
quantum information
elementary gates
quantum algorithm
query complexity
bob receives
dense coding
total f
classical world
alice receives
joint state
inner product
total functions
quantum state
m f
quantum communication complexity
classical communication complexity
lower bounds on
bounded error protocols
communication complexity quantum
bounded error quantum
query quantum algorithm
unlimited prior entanglement
good lower bound
exact quantum protocols
quantum information theory
deterministic communication complexity
non deterministic communication
send n bits
deterministic quantum query
first n qubits
common random bits
complexity quantum entanglement

corpus/krapavin2000-test/633565.txt
institutions
rewriting
specifications
theories
protecting
foundations
paradigms
semantics
ins
methodologies
structuring
flattening
constructs
embedding
concepts
prototyping
trans
giving
cafeobj institution
behavioural specification
theory morphisms
rewriting logic
grothendieck institutions
algebraic specification
grothendieck institution
module imports
basic specification
signature morphism
hidden algebra
hidden sorts
grothendieck construction
module system
logical foundations
important r
module import
model homomorphism
cafeobj module
hosrwl institution
cube institutions
module composition
institution embeddings
behavioural coherence
cafeobj specification
behavioural operations
behavioural rewriting
basic specifications
structured specification
index morphism
equational logic
multiple parameters
behavioural equivalence
logical semantics
r r
mathematical foundations
behavioural specifications
parameter instantiation
observational logic
grothendieck category
specification paradigm
multiple imports
behavioural equation
h v s
extra theory morphisms
important r ole
specification and programming
specification and verification
behavioural specification paradigm
user defined transitions
cafeobj module system
index morphism u
satisfaction condition holds

corpus/krapavin2000-test/633574.txt
ns
rates
classes
bounds
ts
lim sup
individual lower
regression function
n g
lower rate
function estimation
lower rates
lower bounds
positive sequence
bayes decision
nonparametric pattern
n l
sequence tending
exist rules
metric entropy
distribution class
regression functions
pattern recognition
r r
taking values
distribution classes
function estimates
exist regression
convergence results
g n
minimax theory
regression function estimation
c er ns
sup r ns
minimax lower bounds
lower bounds for
nonparametric pattern recognition
second term c
positive sequence fa
exist individual lower
arbitrary positive sequence

corpus/krapavin2000-test/633577.txt
leveraging
arcing
boosting
hypotheses
bagging
learning
predictions
iterations
flipping
bounds
multiplying
weak learner
master hypothesis
leveraging algorithm
potential function
margin vector
leveraging algorithms
hypothesis h
weak hypothesis
arcing algorithms
sample error
margin space
weak learning
feasible direction
gradient descent
potential functions
margin vectors
master hypotheses
geolev algorithm
arcing algorithm
weak hypotheses
negative components
new master
boosting algorithms
confidence predictions
generalization error
training error
learning algorithms
zero sample
class classification
leveraging process
weak learners
boosting property
weak learner s
master hypothesis h
low confidence predictions
new master hypothesis
weak hypothesis h
weak learning algorithm
hypotheses produced by
given to the
sample given to
new weak hypothesis
feasible direction gradient
pac learning algorithms
natural potential function
confidence rated predictions
decision theoretic generalization
correct and equally
weak learning method
first t iterations
weak learner produces
many low confidence
leveraging algorithm based
steepest descent can

corpus/krapavin2000-test/633623.txt
parking
cars
excursions
places
probing
hashing
converges
blocks
owing
statistics
sizes
subordinators
schemes
processes
proves
concerning
car c
parking schemes
additive coalescent
n places
brownian excursion
parking scheme
empty place
block containing
brownian bridge
linear probing
h n
n cars
conditional law
empirical process
conned parking
fragmentation process
empirical processes
standard gaussian
random graph
multiplicative coalescent
e n
random permutation
random variables
n m
remaining cars
k cars
mathematical statistics
brownian motion
f n
marckert chassaing
excursion e
order statistics
k places
n e
n n
size biased permutation
proof of theorem
standard additive coalescent
block containing car
sizes of blocks
uniform random variables
uniformly distributed on
normalized brownian excursion
converges weakly to
independent uniform random
processes of mathematical
stochastic additive coalescent
almost sure convergence
brownian excursion e
distributed as t
block of cars

corpus/krapavin2000-test/633709.txt
nns
performances
classification
derivatives
retraining
stopping
obs
learning
networks
bootstrapping
estimates
floating
heuristics
modelling
statistics
selecting
feature selection
variable selection
selection methods
selected variables
mutual information
neural networks
choice criterion
weight pruning
stop criterion
generalization error
backward search
non linear
feature evaluation
variable set
pattern recognition
selection method
variable subset
evaluation criterion
parametric methods
neural network
r p
fisher test
stepwise methods
variable relevance
linear models
input variables
several authors
remaining variables
final prediction
prediction error
best performances
f c
several methods
optimal search
computed using
model selection
search methods
p variables
representative methods
variable selection methods
different variable selection
feature selection methods
feature selection method
methods which have
may be used
take into account
non linear models
families of methods
simple backward search
partial correlation coefficient
zero order methods

corpus/krapavin2000-test/634719.txt
polynomials
coefficients
equating
solutions
bring
equations
families
ren
substituting
cients
recurrence equation
orthogonal polynomials
polynomial solutions
difference equation
classical discrete
classical q
term recurrence
polynomial solution
nonlinear system
differential equation
p n
linear transformation
solution exists
given holonomic
maple implementation
c n
linear transformations
d e
x n
polynomial form
given recurrence
lowest terms
obner bases
polynomial system
polynomial identities
linear transform
e f
e c
e according
normal forms
see e
solution vectors
common denominators
step according
equating coefficients
equation p
chebyshev polynomials
rational functions
orthogonal polynomial solutions
classical orthogonal polynomial
classical discrete orthogonal
term recurrence equation
orthogonal polynomials are
orthogonal polynomial solution
polynomial solution exists
discrete orthogonal polynomial
classical orthogonal polynomials
discrete orthogonal polynomials
equation has classical
obner bases methods
given holonomic three
therefore in polynomial
gr obner bases
recurrence equation p
polynomials are given

corpus/krapavin2000-test/634745.txt
determiners
students
quantification
plurals
sentences
benthem
quantifiers
predicates
denotations
fitting
collections
counting
arguments
lifting
men
sing
meaning
semantics
cons
whole glass
monotonicity properties
exactly five
atom determiner
set determiner
left argument
collective predicates
collective quantification
type shifting
collective determiners
n operator
plural determiners
atomic entities
determiner fitting
van benthem
natural language
e operator
downward monotone
existential requirement
standard gqt
collective predicate
left monotonicity
rich students
second argument
bounded composition
atom determiners
conservative atom
first argument
monotonicity loss
generalized quantifier
set determiners
negative polarity
fitting operator
distributive predicates
domain e
generalized quantifiers
composition operator
truth value
monotonicity property
students drank a
dalrymple et al
determiners that are
properties of determiners
sentences such as
determiners such as
determiner d is
conservative atom atom
atom atom determiners
et al s
determiner fitting operator
bounded composition operator
classes of determiners

corpus/krapavin2000-test/634756.txt
overlapping
scaling
drawing
constraints
ordering
stopping
labels
busting
pleasing
updating
preserving
nodes
removing
graphs
solving
positions
nding
lapping
layout adjustment
node overlapping
adjustment problem
constrained optimization
orthogonal ordering
egenet solver
local search
continuous constrained
overlap constraints
original egenet
mental map
uniform scaling
quadratic programming
augmented cost
optimization problem
satisfaction problems
graph drawing
remove node
adjustment problems
cost function
original graph
optimization problems
optimization function
y direction
multiplier methods
constraint satisfaction
objective function
scaling factors
local minimum
egenet approach
removing node
egenet model
domain sampling
quadratic solver
local minima
search methods
overlapping nodes
overlapping constraints
y directions
lagrangian multiplier
lagrangian method
scan algorithm
node labels
node label
label overlap
layout adjustment problem
constrained optimization problem
augmented cost function
continuous constrained optimization
layout adjustment problems
remove node overlapping
constrained optimization problems
local search methods
node overlapping in
removing node overlapping
misue et al
domain sampling size
constraint satisfaction problems
force scan algorithm
egenet solver can
modied egenet solver
node overlapping constraints
lagrangian multiplier methods
node overlapping while
overlapping while preserving
original egenet solver
uniform scaling approach
local search method
normalized optimization function
pseudo lagrangian method
orthogonal ordering constraints
overlapping in graph
original egenet model

corpus/krapavin2000-test/634941.txt
drs
hyperbolicity
saturations
permeabilities
eigenvectors
laws
waves
reservoir
reservoirs
regions
hypotheses
media
phases
equations
satisfying
concerning
strict hyperbolicity
saturation triangle
conservation laws
capillary pressure
phase flow
elliptic region
instability region
r f
capillary pressures
hyperbolic region
drs points
g e
open neighborhood
component system
ow models
linear stability
porous medium
drs bifurcation
porous media
stability condition
model satisfying
continuous line
umbilic points
riemann problems
riemann solutions
characteristic speeds
convective form
diusion matrix
right eigenvectors
elliptic regions
umbilic point
ow functions
elliptic boundary
quadratic stone s
model satisfying assumptions
strictly hyperbolic region
pego stability condition
continuous line eld
near the boundary
capillary pressure jacobian
purely convective form
fractional ow functions
leverett capillary pressures
det r s
open neighborhood v
hyperbolic conservation laws

corpus/krapavin2000-test/634972.txt
certifying
annotations
carrying
checking
languages
policies
ms
compilers
elf
programs
checks
proving
safety policy
computing base
trusted computing
certifying compiler
carrying code
intermediate languages
logical framework
type annotations
object code
logical assertions
mobile code
verification condition
safety policies
type system
explicit proofs
level languages
certified code
safety properties
memory safety
safety certificates
dependent types
high level
safe mobile
certifying compilers
verification conditions
return address
logical frameworks
type checker
source language
type theory
theorem proving
formal representation
theorem provers
type safety
fault isolation
trusted computing base
typed assembly language
typed intermediate languages
lf logical framework
high level languages
safe mobile code
provably safe mobile
run time checking
safety policy and
proof that the
low level languages
automatic theorem proving

corpus/krapavin2000-test/635014.txt
semiring
csps
semirings
galois
scsps
abstracting
solutions
bring
insertions
formalizations
nding
ordering
constraints
multiplying
combining
semir
obtaining
proposals
order preserving
concrete problem
scsp problem
soft constraint
galois insertion
abstract problem
optimal solution
constraint satisfaction
semiring values
optimal solutions
concrete semiring
semiring value
soft constraints
classical csps
abstraction scheme
constraint problems
f p
abstraction function
concretization function
abstract problems
abstract semiring
satisfaction problems
local consistency
concrete problems
constraint problem
abstract domain
semiring element
concrete side
concrete scsp
fuzzy semiring
multiplicative operation
scsp p
partial order
abstract interpretation
fuzzy csps
abstract side
galois insertions
c semiring
local correctness
concrete lattice
bring back
concrete domain
see theorem
fuzzy csp
soft csps
negative reals
given an scsp
scsp problem p
concrete and the
order preserving property
soft constraint problem
soft constraint problems
constraint satisfaction problems
easier to solve
local consistency algorithm
order preserving abstraction

corpus/krapavin2000-test/635238.txt
cutting
instances
pieces
patterns
investigations
families
packing
concluding
heuristics
ir
decreasing
irup instances
cutting stock
instance e
stock problem
z c
cutting patterns
divisible case
dimensional cutting
integer round
continuous relaxation
irup instance
stock material
feasible pattern
e p
less pattern
maximal pattern
equivalent instances
stock problems
modified integer
negative integer
theoretical investigations
dominant cutting
feasible patterns
dimensional csp
exact solution
e pattern
solution approach
maximal patterns
non irup instances
cutting stock problem
dimensional cutting stock
feasible with respect
total trim loss
maximal cutting pattern
since the gaps
cutting stock problems
modified integer round
exact solution approaches
cutting and packing
dominant cutting patterns

corpus/krapavin2000-test/635239.txt
matroids
orderings
ordering
consisting
greedy algorithm
weight function
k greedy
gale order
admissible weight
symplectic matroids
optimization problem
linear orderings
function f
admissible functions
coxeter matroids
cyclic group
admissible function
total weight
element subsets
linear orders
linear order
f b
single orbit
weight functions
optimization problems
nite set
linear ordering
p consisting
partial orderings
set l
group acting
edge e
combinatorial optimization
matroid case
root systems
matroid theory
g acting
lie algebra
ordered set
weight function f
k greedy set
correctly solves the
orderings of s
algorithm correctly solves
greedy algorithm correctly
admissible weight function
nite set s
greedy algorithm chooses
v x attains
greedy set l
lie algebra root
subset l s
set l s

corpus/krapavin2000-test/635251.txt
crossings
crossing
vertices
heuristics
drawing
graphs
edges
pages
embedding
stacks
networks
nding
architectures
ordering
sorting
solutions
crossing number
node line
test graphs
planar crossing
linear crossing
exact algorithm
neural network
dynamic programming
hypercubic networks
link edges
page drawing
graph drawing
book crossing
complete graphs
initial upper
random graphs
hamiltonian cycle
optimal solution
vertex ordering
crossing minimization
regular figure
test graph
book embeddings
maximal planar
network model
layout problems
layout problem
bound algorithm
optimal solutions
smaller subgraphs
book thickness
network graphs
lower page
sequential simulator
hamiltonian order
parallel computation
optimal vertex
greedy heuristics
heuristic based
graph size
interconnection networks
theoretical bounds
vlsi design
planar graphs
number of crossings
crossing number of
dynamic programming heuristic
planar crossing number
linear crossing number
initial upper bound
book crossing number
neural network heuristic
graphs with up
neural network model
heuristic based on
xed linear crossing
optimal vertex ordering
bisect neural figure
graph drawing and
several heuristics and
networks proposed as

corpus/krapavin2000-test/635468.txt
wrapping
advancing
series
enclosing
nding
validating
reducing
bounds
solutions
taylor series
direct method
interval vector
interval methods
truncation error
interval hermite
y j
true solution
interval taylor
interval vectors
validated methods
rigorous bounds
ordinary di
initial value
value problems
new perspective
local truncation
computed bounds
iho methods
standard functions
validated solutions
wrapping effect
tight enclosure
order taylor
arithmetic operations
point methods
unique solution
recent advances
wrapping e
arithmetic evaluation
ivps for odes
methods for ivps
reducing the wrapping
taylor coe cients
computing rigorous bounds
interval hermite obreschko
high order taylor
scheme for advancing
problem of reducing
initial value problems
order taylor series
interval taylor series
local truncation error
initial value problem
taylor series expansions
methods for initial
nding a more
computing tight enclosures
standard numerical methods

corpus/krapavin2000-test/635471.txt
daes
subspaces
projectors
decoupling
leading
equations
spaces
mathematics
treating
inherent regular
regular ode
leading term
algebraic equations
decoupling commute
stated leading
stepsize restrictions
quadratic control
initial condition
matrix functions
kutta methods
algebraic systems
formulated leading
dierential equation
adjoint equation
stepsize restriction
value problem
hilbert spaces
circuit simulation
numerical integration
x n
control problems
nite dimensional
constant subspaces
leading terms
dae decoupling
inherent regular ode
numerically well formulated
differential algebraic equations
properly stated leading
regular dierential equation
linear quadratic control
differential algebraic systems
inherent regular dierential
exive generalized inverse
properly formulated leading
runge kutta methods
numerical integration methods
method applied to
regular explicit ode
quadratic control problem
dierential algebraic equations
quadratic control problems
euler backward method
stated leading terms

corpus/krapavin2000-test/635794.txt
discretisations
nonconforming
stokes
discretisation
smoothing
spaces
solvers
smoother
conforming
smoothers
grids
equations
mapping
arising
nite element
v l
q l
order discretisations
order nonconforming
element spaces
transfer operator
element discretisations
nodal functionals
level solvers
smoothing steps
stokes equations
nonconforming nite
higher order
smoothing property
general transfer
finite element
element space
mixed problems
grid methods
level solver
basis functions
l p
grid method
standard multi
basic iteration
pre smoothing
nite elements
low order
navier stokes
discrete problem
grid solvers
dierent discretisations
piecewise linear
bilinear form
velocity spaces
grid level
additional projection
level approach
nite element spaces
higher order discretisations
multi level solvers
averaged error reduction
spaces v l
error reduction rates
nite element space
local nodal functionals
nite element discretisations
finite element discretisations
general transfer operator
order nonconforming discretisations
nonconforming nite element
piecewise constant functions
saddle point problems
low order nonconforming
present numerical results
nonconforming nite elements
independent constant c
grid methods for
piecewise linear functions
low order discretisations
additional projection step
level method and
grid solvers for
conforming and nonconforming

corpus/krapavin2000-test/635802.txt
lcs
descriptions
homomorphisms
individuals
approximations
sublanguages
restrictions
relationships
concepts
occurring
logics
engineers
approximating
characterizing
imations
bases
mations
allowing
concept description
concept descriptions
description graph
description tree
instance relationships
g c
description trees
existential restrictions
specic concepts
atomic completion
atomic completions
common subsumers
algorithm computing
description logic
individual b
msc exists
value restrictions
process engineering
r r
number restrictions
common subsumer
characterizing instance
cyclic concept
existential restriction
knowledge base
description logics
el description trees
least common subsumers
concept description c
msc can be
always exists and
least concept description
least common subsumer
l concept description
computing k approximations
cyclic concept descriptions
l concept descriptions
concept descriptions can
double exponential time

corpus/krapavin2000-test/635905.txt
meshes
partitioning
triangulations
unknowns
estimates
shape functions
boundary concentrated
concentrated fem
stiness matrix
linear degree
geometric meshes
geometric mesh
cholesky factorization
degree vector
polynomial degree
shape function
sparsity pattern
boundary mesh
degree vectors
boundary conditions
node numbering
binary space
element method
space partitioning
cholesky factor
nite element
logarithmic complexity
bdy starting
direct solver
storage requirement
positive denite
problem size
boundary point
n log
boundary concentrated fem
linear degree vector
boundary mesh size
geometric meshes and
linear degree vectors
shape functions associated
binary space partitioning
internal shape functions
meshes and linear
nested dissection algorithm
side shape functions
functions associated with
symmetric positive denite
linear logarithmic complexity
nested dissection v
edge shape functions
cholesky factorization scheme
v bdy starting
mixed boundary conditions
finite element method

corpus/krapavin2000-test/636260.txt
unfolding
rescaling
equations
nding
forms
transformations
ing
nonlinear transformation
normal form
form theory
perturbation parameters
normal forms
order equations
zero singularity
order terms
algebraic equations
single zero
order equation
generic case
order nonlinear
nonlinear transformations
unnecessary coecients
identity nonlinear
cnf theory
identity transformation
original system
computer memory
higher order
recursive formula
nonlinear terms
complementary space
homogeneous polynomials
lower order
computer algebra
perturbation parameter
form terms
computational time
algebra system
dierential equations
using maple
consistent nonlinear
explicit expressions
particular advantage
part belonging
undetermined coecients
nal snf
normal form theory
single zero singularity
simplest normal forms
order normal form
order algebraic equations
kth order terms
snf with unfolding
order nonlinear terms
simplest normal form
kth order equations
normal form terms
computational time and
computer algebra system
identity nonlinear transformations
considered using the

corpus/krapavin2000-test/636361.txt
filtering
ds
observation noise
optimal filter
approximate filter
nonlinear filtering
wiener processes
initial condition
noise channel
standard independent
low noise
linear case
small observation
extended kalman
filtering problem
condition x
kalman filter
dimensional process
quadratic variation
bounded derivatives
approximate filters
observation function
taylor expansions
l p
low noise channel
independent wiener processes
standard independent wiener
small observation noise
extended kalman filter
initial condition x
sigma m s
differentiable with respect
signal x t
channel nonlinear filtering
bounded partial derivatives

corpus/krapavin2000-test/636409.txt
reals
subclasses
equations
extensions
products
turing
inequalities
compositions
grzegorczyk hierarchy
elementary functions
dierential equations
recursive functions
linear integration
analog computation
e n
bounded product
bounded sums
analog class
analog computer
dynamical systems
elementary function
real functions
nth level
purpose analog
e c
function f
initial condition
basic functions
analog computers
computable functions
initial functions
dierential equation
real function
basic function
classical recursion
dierentiable way
bounded products
computation theory
recursive function
unique solutions
function theory
step function
certain kind
primitive recursion
linear dierential equations
primitive recursive functions
bounded sums and
extensions to the
general purpose analog
purpose analog computer
continuous time computation
set of functions
extension of it
sums and products
closed under composition
jerzy mycka jos
continuous real function
continuous dynamical systems
composition and linear
growth of functions
theoretical computer science
recursive function theory
linear differential equations
functions that can

corpus/krapavin2000-test/636581.txt
simplices
cells
polytopes
triangulation
vertices
labels
labelling
chambers
covering
arguments
labellings
locating
pivoting
topes
plices
full cells
full cell
polytope p
pebble set
d polytope
d simplex
facet f
full facets
sperner labelling
full facet
polytopal sperner
face f
constructive proof
path following
labelled triangulation
connected component
l f
f e
d simplices
simplicial facet
pebble sets
connected components
inductive hypothesis
polytopal sperner s
full cell graph
sperner labelled triangulation
derived graph gk
carried by f
reduced homology groups

corpus/krapavin2000-test/636696.txt
protocols
entities
attributes
timestamping
key agreement
key confirmation
elliptic curve
ak protocol
shared secret
domain parameters
key validation
key authentication
akc protocols
agreement protocol
small subgroup
akc protocol
agreement protocols
entity b
key derivation
public keys
discrete logarithm
key establishment
desirable security
derivation function
prime order
e f
provide key
elliptic curves
heuristic arguments
logarithm problem
hash functions
active attacks
finite field
related protocols
key security
authentic copy
honest entities
private keys
performance attributes
message authentication
implicit key authentication
key agreement protocol
authenticated key agreement
pass ak protocol
key agreement protocols
small subgroup attack
shared secret k
domain parameters and
key share attribute
public key validation
provide key confirmation
key share attack
provide implicit key
discrete logarithm problem
desirable security attributes
entity is on
one entity is
establish a shared
mutual implicit key
key derivation function
explicit key authentication
b to a
authentication and key
hellman key agreement
model of distributed
elliptic curve e

corpus/krapavin2000-test/636898.txt
flows
packets
queues
ns
simulations
competing
queuing
services
sharing
modeling
routers
marking
expressions
networks
tail drop
window size
packet drop
red queue
average queue
queue size
drop probability
packet loss
congestion avoidance
red queues
average window
th queue
steady state
tcp flow
ns simulations
drop queue
trip time
differentiated services
red algorithm
priority class
point approximation
congestion control
diffred queues
pps approximation
multiple tcp
fixed point
burst loss
fairness index
diffred queue
trip delay
bottleneck link
tcp congestion
average packet
packet drops
queue management
early detection
higher priority
transmission rate
packet losses
queuing delay
slow start
analytical results
transmission rates
experimental network
responsive flows
different round
heterogeneous flows
fairness results
resource reservation
average queue size
packet drop probability
tcp and udp
average window size
fixed point approximation
tail drop queue
congestion window size
average round trip
inversely proportional to
non linear equations
random early detection
steady state throughput
average packet drop
network of red
variant of red
round trip times
consecutive da s
packet loss detection
tail drop queues
different round trip
red and tail
congested red queue
experimental network topology
increase multiplicative decrease
congestion avoidance phase
active queue management

corpus/krapavin2000-test/637151.txt
cells
cas
arrays
string
congurations
devices
interacting
computations
ows
establishes
ring
mapping
defective cells
defective cell
cellular arrays
fault tolerant
intact cells
defective regions
transition function
way cellular
cellular array
dynamic defects
time step
link failures
recognition capabilities
local transition
static defects
additional registers
time steps
adjacent cells
string sets
defective region
boundary state
actual computation
tolerant real
input symbols
right neighbor
new defects
tolerant computations
diagnosis circuit
conguration c
reliable computations
cell states
cell enters
modify information
defective cellular
input string
receive information
local transition function
stop signal arrives
set of strings
overall computation result
leftmost cell enters
fault tolerant computations

corpus/krapavin2000-test/637236.txt
lsas
routers
flooding
routing
synchronization
flapping
monitoring
modes
dynamics
customers
localizing
networks
failing
duplicate lsa
ospf domain
external lsas
enterprise network
different routers
external changes
backbone area
router configuration
backbone areas
single router
reachability information
ospf monitoring
ospf lsa
case study
border router
finer time
leased lines
control plane
level flooding
ospf areas
state advertisements
root causes
internal change
state refresh
ethernet lans
series analysis
router r
aman shaikh
lower graph
matthew roughan
topology changes
ip networks
reliable flooding
ospf networks
large enterprise
customer reachability
duplicate lsa traffic
lsas originated by
total duplicate lsas
lsa traffic is
lsa traffic and
non backbone areas
total change lsas
link state advertisements
level flooding scope
router network lsas
finer time scale
router configuration files
customer reachability information
area level flooding
significant duplicate lsa
internal change lsas
external change lsas
customers are connected
routing in the

corpus/krapavin2000-test/637247.txt
probes
hops
quartets
estimates
packets
segments
errors
probing
routes
bandwidths
headers
measurements
filtering
measuring
waiting
leaving
spacing
returning
dovrolis
messages
behaviour
consequences
delays
links
equations
arrivals
simulations
delay variation
invisible hops
peak detection
packet quartets
h ttl
hop h
link bandwidth
probe size
detection errors
service time
international route
packet pair
last hop
link rate
different busy
bandwidth estimates
busy periods
invisible hop
hop route
link layer
icmp messages
estimation errors
measurement methods
hop segments
pacesetter packets
link rates
packet size
link bandwidths
ttl values
estimation methods
lower layer
probe stream
component leaving
layer headers
hop mixing
accumulation term
different packet
rate estimates
pacesetter packet
single hop
new methods
like methods
network measurements
bandwidth estimation
section ii
departure time
trip delay
waiting times
bottleneck link
probe packet
peak detection errors
delay variation based
different busy periods
accumulation component leaving
link bandwidth estimates
number of hops
delay variation histograms
link bandwidth estimation
link layer headers
hop mixing equation
bandwidth estimation method

corpus/krapavin2000-test/637321.txt
predicates
siefkes
maes
expansions
theories
powers
generalizations
icates
thomas
l n
word x
k n
monadic theory
characteristic word
morphic predicates
integer n
theory mthhn
acc xp
predicate p
rational sequence
morphic predicate
decision problem
order theory
acc x
alphabet b
nite word
morphic words
buchi acceptance
nite words
periodic predicates
morphic word
word xp
morse word
factorial predicate
matrix representation
residually ultimately periodic
ultimately periodic sequences
p such that
buchi automaton a
sequence of dierences
monadic theory mthhn
class of residually
morphic predicate p
ultimately periodic predicates
nite semigroup s

corpus/krapavin2000-test/637371.txt
minimizers
working
bounding
es
criteria
support functions
interval x
interval analysis
f x
global optimization
support function
x f
new support
global minimizers
monotonicity test
f m
objective function
division rule
o test
nal list
global minimization
inclusion function
global minimizer
test functions
gradient information
traditional interval
nal lists
bound f
minimization algorithm
new interval
using gradient
list q
dierentiable function
lower bound
function f
optimization algorithm
lower bounds
analysis support
univariate functions
f f
elimination rule
new algorithm
selection rule
global minimum
algorithm using
interval evaluations
multiextremal univariate
algorithm nishes
multiextremal test
elimination rules
global search
inclusion functions
new support functions
global minimization algorithm
global optimization algorithm
traditional interval analysis
analysis global minimization
nal list q
new interval analysis
analysis global optimization
continuously dierentiable function
dierentiable function f
new support function
algorithm using gradient
minimization algorithm using
global optimization algorithms
interval analysis support
develop more powerful
hand graph algorithms
interval x s
support functions using
lipschitz global optimization

corpus/krapavin2000-test/637568.txt
genomes
inversions
transpositions
distances
estimators
events
datasets
phylogenies
trees
joining
bounding
rearrangements
breakpoints
reconstructing
orderings
ordering
estimating
bounds
analyses
inversion distance
distance estimators
actual number
neighbor joining
true evolutionary
inversion length
gene order
breakpoint phylogeny
inversion distances
negative rate
inverted transpositions
evolutionary distance
breakpoint distance
circular ordering
ede distances
breakpoint distances
phylogeny problem
evolutionary events
order data
reconstructing phylogenies
relative probabilities
likely events
lower bound
evolutionary distances
circular orderings
rearrangement events
topological accuracy
relative breakpoint
genome rearrangements
relative inversion
joining method
false negatives
true distance
edit distance
ede distance
phylogenetic analyses
leaf distances
grappa software
genome rearrangement
distance estimator
distance b
phylogeny reconstruction
g b
distance actual number
1normalized maximum pairwise
true evolutionary distance
gene order data
equally likely events
distance relative breakpoint
breakpoint phylogeny problem
neighbor joining method
relative inversion length
number of breakpoints
true evolutionary distances
difference actual number
relative breakpoint score
exact iebp distance
distance relative inversion
breakpoint distance or
1515normalized maximum pairwise
one hundred million
grappa software suite
reconstructing phylogenies from
normalized maximum pairwise
various distance estimators
true distance estimators
standard deviation plots

corpus/krapavin2000-test/637759.txt
devs
students
instructions
courses
inputs
circuits
coupled model
computer organization
digital logic
control unit
transition functions
internal transition
internal event
instruction register
experimental framework
transition function
boolean gates
atomic model
global registers
external event
simulated computer
initial image
organization courses
event arrives
basic behavior
digital logic level
internal transition function
stored in the
following figure shows
using digital logic
external event arrives
externalfunction const externalmessage
computer organization courses
outputfunction const internalmessage
definition transition functions
object oriented simulation
