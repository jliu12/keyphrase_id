geometrical
scientic
subdomain
concurrency
parallelization
pdes
userdata
worker
void
workers
ciency
user
unpack
fem
master
computepressure
useralg
computeb
skeletons
infrastructure
object
mesh
loc
pde
metis
constructional
pack
protein
spmd
oriented
gure
dened
excerpt
transparent
communication
illusion
her
specic
compiler
fulll
subclassing
numerical
transparently
solvers
botorog
kuchen
croz
computec
talia
computea
getnve
nows
aspects
functionality
dierent
container
sequential
fortran
solver
uml
addressable
library
le
reuse
patterns
concurrent
algorithmic
skillicorn
saltz
scalable
passive
dcom
libraries
generative
invisible
irregular
geometries
loosely
objects
hide
currency
ware
usability
abstractions
renumbering
globally
generic
discretized
documented
automate
geometrical data
the user
data representation
concurrency infrastructure
the concurrency
solution process
object oriented
the geometrical
scientic applications
loc data
distributed component
the parallelization
our system
the subdomain
e ciency
dependent data
algorithmic skeletons
user data
generic programming
his her
object model
user the
component model
distributed solution
the framework
sequential programming
of pdes
computing aspects
subdomain component
transparent concurrency
component userdata
concurrency aspects
in gure
communication patterns
application specic
the workers
o processor
f void
the applications
physical domain
user has
a subdomain
scientic computing
the scientic
numerical applications
to pack
parallelization process
pde solvers
code excerpt
concurrency model
the distributed
the communication
loosely synchronous
a master
classical sequential
generative approach
our component
local numerical
concurrent scientic
construct part
processor data
applications we
independent data
the illusion
illusion of
the solution
communication generation
adaptive multigrid
use generic
globally addressable
pdes for
data parallel
simple data
generate communication
of scientic
data updates
the object
automatic parallelization
user to
pdes are
user dened
the application
our solution
the generative
system functionality
ciency is
we address
the component
a sequential
solution of
geometrical data representation
the geometrical data
the concurrency infrastructure
the user the
the solution process
solution of pdes
the communication patterns
a sequential programming
the distributed solution
the subdomain component
o processor data
distributed solution of
the user has
class of applications
applications we address
for the user
the distributed computing
the parallelization process
from the user
illusion of a
the object oriented
the illusion of
for numerical applications
generic programming techniques
support for parallelization
adaptive multigrid methods
concurrent scientic applications
the application specic
we construct part
pde solvers and
processor data updates
construct part of
distributed computing aspects
automate the parallelization
capture the concurrency
the generative approach
subdomain component the
distributed component model
sequential programming model
use generic programming
the concurrency aspects
framework the user
the scientic computing
of the geometrical
the user to
of the solution
user has access
we use generic
are data parallel
data and algorithms
programming techniques in
the applications we
that the user
of a sequential
e ciency is
of the concurrency
the object model
the physical domain
the framework the
techniques in order
with a process
of the applications
to the user
of the application
the user from
user has to
automatically generate communication
to pack unpack
3 o processor
or remote invocations
for adaptive multigrid
a existing one
application speed up
void computeb f
physical domain and
scientic computing eld
void computec f
g compiler driven
space or remote
void computepressure f
well tested well
globally addressable objects
computation our system
model dcom n
mesh void main
e g pressure
the user algorithm
case example 1
for the transparent
are loosely synchronous
