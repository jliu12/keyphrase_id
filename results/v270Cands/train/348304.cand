cdfg
kdp
retiming
addedges
delay
vertex
ilp
shortest
delays
retimed
block
dsp
edge
cdfgs
kmax
solvekdp
samples
dataflow
count
companion
vectorization
branch
inequality
sprand
paths
nc
cycles
edges
shuvra
essential
infeasible
bb
transforms
bold
feasibility
synthetic
counts
solves
canceler
xcd
initiation
processed
ko
blocks
df
graphs
synthesis
pairs
uv
formulation
strictly
iteration
lemma
switching
regularly
prune
amortizing
iterations
vliw
gammaw
transformed
uniprocessor
feasible
bhattacharyya
weight
effectiveness
yung
lp
echo
path
segmenting
regular
incoming
repeat
vertices
behavioral
integer
regularity
pipelines
throughput
contradicts
dissipation
chronic
bhattachryya
vectorizations
tms32020
optimum
excess
dummy
implementations
block processing
problem kdp
vertex pair
delay count
processing factor
algorithm addedges
u e
delay essential
pair u
k delay
delay problem
edge u
necessary conditions
u v
vertex pairs
given cdfg
addedges 2
second shortest
a retiming
a cdfg
cdfg and
kdp on
strictly second
delay free
o v
the delay
companion graph
delay counts
factor k
every edge
and bound
cdfg in
g t
constraints graph
shortest paths
branch and
r u
k delays
essential vertex
addedges 1
nc ilp
shortest path
every vertex
block iteration
integer linear
computation blocks
path u
cdfg g
retimed cdfg
our necessary
computation dataflow
the cdfg
the shortest
v 2
linear block
dsp programs
for every
on g
w r
relation 6
algorithm solvekdp
kdp is
count around
graph generated
the retimed
transformed graph
of delays
solves problem
retiming function
cdfg that
bound scheme
the k
an edge
linear programming
w u
than k
graph g
contain delays
original cdfg
r solves
block processed
kdp be
processed simultaneously
2 v
three programs
edge v
delays in
count of
the strictly
dataflow graphs
vertex pair u
edge u e
block processing factor
k delay problem
the k delay
pair u v
w r u
algorithm addedges 2
every vertex pair
the delay count
every edge u
strictly second shortest
problem kdp on
the block processing
branch and bound
for every edge
a given cdfg
delay count of
the delay counts
r u v
for every vertex
of problem kdp
a block processing
processing factor k
kdp on g
delay essential vertex
processing factor of
for problem kdp
o v 2
the shortest path
u v 2
cdfg and let
the strictly second
solves problem kdp
a vertex pair
algorithm addedges 1
second shortest paths
be a cdfg
linear block processing
our necessary conditions
the computation blocks
delay counts of
edge v e
the necessary conditions
in o v
integer linear programming
v 2 v
that w r
a cdfg and
the cdfg in
essential vertex pairs
problem kdp is
given cdfg g
delay count around
block processing with
cdfg in figure
a retiming function
by algorithm addedges
of algorithm addedges
feasibility of problem
u e in
the transformed graph
and bound scheme
the constraints graph
u v k
path u p
retiming function r
for the feasibility
set of necessary
of necessary conditions
necessary conditions are
path u q
r solves problem
graph generated by
than k delays
problem kdp be
delay free vertex
regular block processing
given vertex pair
u e proof
solving problem kdp
r z be
kdp is feasible
retiming does not
a delay count
with factor k
graph g t
of the shortest
let r z
of dsp programs
