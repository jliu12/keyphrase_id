cilk
fib
thief
deque
clone
spawn
worker
inlet
elision
victim
stealing
slackness
steal
stolen
overheads
protocol
sync
overhead
frame
scheduler
spawned
t1
abort
c1
clones
pop
inlets
cilk2c
multithreaded
parallelism
stack
activation
thieves
postsource
cid
principle
serial
compiler
locking
runtime
races
spawning
threads
leiserson
scheduling
tp
critical
slow
lock
int
borne
speedup
rinard
lazy
megahertz
sigplan
atomicity
rugina
fence
frigo
summer
locks
steals
allocation
matteo
cilksort
notempmul
membar
notices
heap
polling
smp
children
processors
charles
frames
t8
radu
statement
aborted
dijkstra
tail
contributes
blumofe
head
exclusion
multiprocessors
cactus
restores
compiles
work overhead
cilk 5
the cilk
first principle
work first
fast clone
the deque
cilk s
of cilk
critical path
in cilk
a cilk
c elision
cilk program
work stealing
the thief
slow clone
path overhead
the protocol
the work
a thief
a worker
cilk programs
overhead c1
the fib
the worker
average parallelism
sync statement
a spawn
the victim
parallel slackness
an inlet
cilk language
the critical
the fast
runtime system
been stolen
activation frames
the frame
cilk 4
to steal
the the
the serial
e leiserson
steal the
s scheduler
the runtime
common case
the c
cilk procedure
dijkstra like
for fib
slow clones
stealing scheduler
cilk is
parent procedure
path term
ready deque
a procedure
t1 p
cilk provides
activation frame
charles e
acm sigplan
shared memory
the inlet
c function
the slow
a sync
races in
lazy task
that cilk
inlet call
cilk2c compiler
memory fence
every cilk
to cilk
multithreaded language
fib n
spawn fib
lazy threads
serial c
fib procedure
thief and
a frame
one processor
overhead of
notices v
sigplan notices
elision of
work first principle
the work first
the the protocol
the work overhead
the fast clone
critical path overhead
the critical path
of the cilk
to work overhead
the c elision
the slow clone
the cilk 5
the cilk language
the average parallelism
a cilk program
of the deque
the common case
cilk s scheduler
a fast clone
charles e leiserson
the runtime system
in the fast
of a cilk
in cilk 5
work stealing scheduler
critical path term
path overhead c1
a sync statement
in cilk programs
races in cilk
algorithms and architectures
acm sigplan notices
sigplan notices v
of cilk 5
cilk 5 s
the fib procedure
cilk 5 is
assumption of parallel
has been stolen
and slow clones
the parent procedure
spawn and sync
overhead c1 is
spawn fib n
of activation frames
lazy task creation
a slow clone
of cilk s
slow clone the
work overhead c1
the serial c
to steal the
slow clone is
the work stealing
that use locks
cilk programs that
a c function
radu rugina martin
the overhead of
to critical path
annual acm symposium
on parallel algorithms
symposium on parallel
the protocol is
head of the
on one processor
parallel algorithms and
in the common
acm symposium on
proceedings of the
a cilk procedure
a memory fence
frigo a fast
work overhead of
matteo frigo a
fast and slow
borne on the
from the deque
n 2 return
steal the frame
fib n 1
that cilk 5
a c elision
c elision of
simplified the protocol
fib int n
work overhead is
before a spawn
the cilk scheduler
the worker victim
