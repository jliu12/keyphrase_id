stencil
cshift
stencils
intraprocessor
movement
shift
hpf
array
fortran90
unioning
offset
compiler
overlap
subgrid
arrays
scalarization
interprocessor
compilation
rsd
xlhpf
shifts
src
intrinsics
cshifts
fortran
nest
statements
dst
cm
optimizations
compilers
temporary
optimizing
loop
pe
congruent
statement
dimension
redundant
jam
purdue
ibm
compiling
rin
fusion
rip
transformations
shifted
dependences
subgrids
communication
unroll
annotations
intrinsic
locality
partitioning
loops
mimd
dim
optimize
rsds
polyshift
haupt
fortran90d
syntax
calls
optimizes
strategy
npac
hitoshi
scalarizing
eliminate
destination
simd
memory
orchestrating
congruence
computations
optimized
supercompilers
hoisted
fortran77
assignment
mpi
recognizers
beats
fused
optimization
cfd
subsume
data movement
overlap shift
point stencil
9 point
stencil computations
communication unioning
intraprocessor data
the stencil
stencil computation
offset array
offset arrays
context partitioning
problem 9
interprocessor data
stencil compilation
single statement
compilation strategy
statement stencils
overlap shifts
stencil compiler
a stencil
shift operations
distributed memory
the cshift
xlhpf compiler
array syntax
the overlap
movement associated
array optimization
source array
communication operations
loop nest
shifts for
temporary arrays
overlap areas
shift amount
all stencil
the shift
cshift operations
2 stencil
of stencils
cshift intrinsic
s xlhpf
the interprocessor
our strategy
cm 2
destination array
array statements
movement that
our stencil
fortran90 array
multi statement
array dst
subgrid loops
array src
shift intrinsics
the rsd
unioning optimization
compiler for
data locality
code produced
src and
partitioning optimization
the array
two calls
the cm
the offset
5 point
each direction
of stencil
our compilation
9 after
loop fusion
shift operation
execution time
performance fortran
and jam
unroll and
hpf compiler
array assignment
loop level
redundant communication
ibm s
memory machines
eliminate redundant
statements into
multi offset
general compilation
purpose compilers
of fortran90
9 point stencil
intraprocessor data movement
interprocessor data movement
stencil compilation strategy
the source array
overlap shifts for
single statement stencils
offset array optimization
movement associated with
data movement associated
point stencil computation
the interprocessor data
to overlap shift
data movement that
a stencil computation
s xlhpf compiler
the overlap shifts
problem 9 after
ibm s xlhpf
the single statement
5 point stencil
the data movement
the cm 2
all stencil computations
our context partitioning
communication unioning optimization
overlap shift operations
our stencil compilation
context partitioning optimization
in each direction
the destination array
the overlap areas
of stencil computations
calls to overlap
shown in figure
compiler for the
loop level transformations
distributed memory machines
code produced by
high performance fortran
unroll and jam
on distributed memory
the compilation of
cm 2 stencil
the offset arrays
the stencil compiler
point stencil specifications
context partitioning algorithm
special purpose compilers
array src and
the overlap shift
multi statement stencils
overlap areas that
redundant data movement
the cshift intrinsic
the cshift operations
source array src
the largest shift
movement that results
eliminate intraprocessor data
rip and rin
ms subgrid size
stencil compiler for
an offset array
shifts for the
execution time ms
time ms subgrid
largest shift amount
our compilation strategy
subgrid size squared
2 stencil compiler
stencils written using
for the connection
for distributed memory
of a stencil
the purdue set
the shift amount
array assignment statement
the problem 9
single loop nest
the 9 point
set of optimizations
the array statements
the connection machine
data movement for
the code produced
an hpf compiler
for fortran d
an extended example
data movement and
