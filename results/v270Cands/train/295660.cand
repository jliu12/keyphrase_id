dts
mpo
slice
rcp
fmm
dag
volatile
schedule
fu
yang
sparse
cholesky
tasks
rapid
slices
scheduling
dcg
processor
lu
irregular
t3e
dependence
rma
objects
inspector
megaflops
memory
processors
gerasoulis
pt
factorization
task
permanent
schedules
object
management
priority
executor
d3
map
px
merging
dags
cq
ra
multipole
scheduled
1996b
jiao
remote
d7
rec
ddg
parents
ready
article
particle
meiko
allocate
active
goodwin
dtsm
parallelization
usage
acyclic
rothberg
tot
d8
bcsstk29
suspended
owner
inc
overhead
parallelism
1995
tw
deadlock
priorities
messages
allocated
tx
dead
send
75
pivoting
executable
d5
packages
1992
nonzeros
c fu
yang and
t x
data objects
memory management
data object
sparse lu
t yang
p x
fu delta
volatile objects
t y
active memory
each processor
sparse cholesky
task t
parallel time
pt inc
a dag
column block
map pt
75 50
and yang
fu and
50 40
the dts
slice merging
dts schedule
volatile object
of tasks
on processor
ready task
a dts
dts is
data node
and dts
in rapid
task graph
run time
memory requirement
dependence path
p y
a task
space efficiency
the mpo
inc map
processor px
mpo and
management scheme
time efficient
for sparse
a volatile
volatile data
t u
processor p
space for
schedule is
irregular computations
the rapid
a schedule
for fmm
dts algorithm
address packages
yang 1996b
volatile space
m produced
a processor
in fu
al 1995
on p
efficient scheduling
space needed
space requirement
cholesky factorization
dependence edges
all tasks
sparse matrix
processor assignment
reduction ratio
inspector stage
active messages
each task
the dag
from t
log v
of slices
the memory
a dependence
and c
t k
yang and c
and c fu
active memory management
t yang and
c fu delta
fu and yang
on each processor
75 50 40
map pt inc
task t x
memory management scheme
a dts schedule
on p x
a dependence path
processor p x
pt inc map
inc map pt
sparse cholesky factorization
from t x
on processor p
et al 1995
t x is
t x to
x to t
m produced by
mpo and dts
block based sparse
the dts algorithm
a volatile object
and yang 1996b
for sparse lu
the ready task
o e log
to t y
produced by t
to p y
set of tasks
on distributed memory
critical path information
the same slice
fast multipole method
an exit task
in fu and
direct remote memory
data node d
ra and cq
a processor assignment
100 75 50
the active memory
50 40 25
with active memory
and yang 1997
on processor px
of data objects
space for d
a given dag
parallel irregular computations
parallel time of
for the dag
the sequential space
a data object
the memory requirement
s 1 p
space on each
of parallel time
available amount of
associated with data
p x as
the available amount
distributed memory machines
for sparse cholesky
the proposed techniques
t x t
each processor will
space needed to
meiko cs 2
and t x
support for parallel
where s 1
data object is
is associated with
p x is
the owner computes
owner computes rule
sparse lu factorization
remote memory access
ratio x mpo
volatile space requirement
the inspector stage
the fmm computation
