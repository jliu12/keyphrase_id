instruction
branch
sequencing
pipeline
instructions
branches
slots
inline
insertion
fetch
predicted
target
scratched
refill
redirects
pif
prediction
successors
incorrectly
compiler
pipelined
fetched
mcfarling
iti
delayed
expansion
hardware
unlikely
ref
inclusively
hennessy
risc
squashing
sif
interrupt
ill
likely
restructuring
exception
threshhold
benchmarks
mips
compile
processors
cycle
ps
fallthru
88000
interrupts
redirect
deep
address
pipelining
delay
buffers
slot
timing
sequential
illinois
cycles
addresses
static
freeze
incorrect
unconditional
pipelines
branching
contract
profile
cyclone
microarchitecture
r2000
processor
code
frequency
clock
036
stage
assisted
stages
freezes
reload
af
inserted
clean
n00014
ex
801
efficiency
executed
target insertion
inline target
sequencing pipeline
instruction sequencing
the sequencing
the instruction
instruction fetch
likely branch
likely branches
original address
code expansion
i n
insertion slots
the branch
instruction issue
predicted successors
multiple instruction
branch prediction
incorrectly predicted
a likely
branch target
branch slots
sequencing efficiency
a branch
instruction sequence
per instruction
the pipeline
instructions in
of inline
delay slots
ref ill
s t
a f
instructions to
of branches
redirects the
branch instructions
the instructions
pipelined processors
code restructuring
predicted branch
sequential instruction
order execution
exception return
insertion is
are true
an unlikely
instruction i
subsequent instructions
target buffers
mcfarling and
sequencing cost
delayed branches
pipeline implementation
unlikely branch
next sequential
be scratched
interrupt exception
deep pipelining
slots for
an original
branches in
an instruction
branches the
address of
branch the
target address
and hennessy
the benchmarks
ps i
r t
the compiler
it i
code size
n inclusively
clock frequency
execution machines
ex stage
hardware methods
branch direction
delayed branching
sequential locations
an incorrectly
dynamic instructions
branch between
branch i
pif performs
impact i
fetched from
compile time
inline target insertion
the sequencing pipeline
multiple instruction issue
the instruction fetch
a likely branch
of inline target
i n is
instruction sequencing efficiency
the instruction sequencing
i s t
is a likely
the instruction sequence
redirects the instruction
and s t
instructions in the
incorrectly predicted branch
of order execution
t are true
of the sequencing
target insertion is
i n 1
the subsequent instructions
an original address
and multiple instruction
branch target buffers
if i n
predicted successors of
between i n
an unlikely branch
mcfarling and hennessy
instructions to be
in the sequencing
t and s
the code expansion
branch between i
pipelining and multiple
order execution machines
the impact i
an incorrectly predicted
of instruction sequencing
i n inclusively
the next sequential
the clock frequency
deep pipelining and
with inline target
r t and
out of order
s t are
from the pipeline
number of slots
cycles per instruction
if r t
predicted successors in
the insertion slots
figure 8 e
sequencing cost per
delayed branches with
the predicted successors
sequential instruction fetch
i c compiler
instruction fetch algorithm
the ex stage
per cycle this
scratched from the
and pipeline implementation
compiler and pipeline
instruction fetch pipeline
cost per instruction
the branch direction
branches with squashing
impact i c
compile time code
a f i
number of instructions
is an original
r t 1
that r t
s t will
compare and branch
redirect the instruction
from the sequencing
that inline target
target insertion a
under contract n00014
s t 1
code expansion control
original address of
pipelined instruction fetch
instruction sequencing for
sequencing pipeline the
