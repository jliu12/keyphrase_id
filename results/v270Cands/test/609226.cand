reflective
reification
interpreter
reified
datalist
dispatch
argse
reifiable
reflection
locale
mops
instancelink
reify
eval
java
expmethod
methodlist
mop
tower
arg
metaj
referent
m11
lookupdata
isreified
deification
expid
baseinstance
msg
interpreters
exp
lookup
fn
lookupmethod
expassign
4pair
methodid
fst
object
superclass
m1
extendslink
expnew
1k
args
field
runtime
snd
basename
eval_original
name
receiver
string
parser
specially
metaobject
tostring
f1
smith
fields
classid
meta_level
aclass
towers
explist
wf88
baseclass
reifiedrep
instancewithtrace
println
tailored
constructor
transformation
lisp
clos
private
sender
generic
exemplified
exps
baserep_field
expdata
getextendslink
metapair
booleanvalue
metacircular
printablepair
kic91
return
body
reflective interpreter
non reflective
dispatch object
of reflective
the interpreter
the dispatch
the reification
reification of
reified representation
the reified
generic reification
class instance
method call
argse add
the reflective
reflective programming
reification technique
base representation
class pair
environment locale
eval environment
our reification
m 1k
the class
reification scheme
data eval
arg m11
reflective systems
return this
original class
reflection in
extends exp
reification operator
interpreter definition
specially tailored
a reflective
original interpreter
interpreter in
see figure
class name
a reified
method m1
datalist datalist
interpreter at
arg m
instancelink datalist
m11 arg
interpreter is
an instance
class class
object oriented
interpreter s
this representation
program transformation
of pair
string name
environment argse
f1 type
dispatch objects
type fn
reified object
be reified
lookup name
this datalist
reflective interpreters
field referent
class instancelink
fst and
class expmethod
non reifiable
active representation
tailored mops
object pair
the method
the transformation
the base
pair is
a dispatch
type f1
and snd
a class
base class
local environment
of reflection
the receiver
at runtime
arg fn
method lookupdata
accessible representation
f1 arg
non reflective interpreter
the non reflective
the dispatch object
the reified representation
the base representation
in the interpreter
data eval environment
eval environment locale
the class instance
of the reflective
a non reflective
of reflective programming
arg m 1k
the reflective interpreter
of the interpreter
the original interpreter
the original class
the method call
fst and snd
specially tailored mops
f1 type fn
reflective interpreter in
reification of the
a dispatch object
interpreter at level
the class pair
generic reification technique
at level n
of the non
a method call
the interpreter s
representation to the
the interpreter at
an accessible representation
our reification technique
to the dispatch
our reification scheme
exemplified in section
the field referent
object oriented interpreters
class instancelink datalist
the reification of
system out println
instancelink datalist datalist
reified representation is
instance see figure
extends exp private
of our reification
representation is active
environment argse add
reflective interpreter is
m11 arg m11
interpreter in order
the generic reification
the object pair
the reification operator
our generic reification
generic reification scheme
if this isreified
data lookupdata string
dispatch object and
interpreter s memory
lookupdata string name
as exemplified in
definition of the
of the transformation
provides access to
to be modified
in order to
this datalist lookup
method m1 type
m1 arg m11
a generic reification
m1 method m1
of reflection in
and security properties
work on reflective
arg m11 type
use of reflection
by the interpreter
datalist datalist field
type m1 method
reflective programming in
the current representation
the reflective tower
m11 type m
in the reflective
the deification operators
method call is
the reification process
