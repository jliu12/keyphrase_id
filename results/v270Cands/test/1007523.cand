students
participants
emacs
testing
compilation
continuous
developer
regression
suites
suite
developers
eclipse
tests
junit
java
staff
worked
statistically
ide
feedback
plug
development
errors
student
ps1
prioritization
grade
athena
tool
notification
who
tools
habits
treatments
questionnaire
productivity
impressions
experiment
ps2
success
volunteered
experience
hours
my
qualitative
distracting
volunteers
threats
effects
ignorance
prioritizing
enjoyed
participant
distract
saff
montana
dialup
unimplemented
coursework
distraction
failing
factoring
edits
assignments
monitoring
edited
treatment
had
subjects
magpie
perceptions
keystroke
incremental
felt
participate
software
monitored
years
recommend
170
programmers
demographics
editing
code
mit
users
got
circumstances
clicking
mock
continuous testing
continuous compilation
the developer
test suite
problem set
students were
the tools
time worked
the tool
test suites
statistically significant
students who
regression errors
emacs plug
testing tool
a regression
problem sets
the tests
plug in
development environment
regression testing
participants who
of continuous
those who
regression error
all students
control group
mode line
that continuous
the emacs
the continuous
the code
were provided
success rate
regression test
developer s
course staff
the students
participants were
the study
provided test
the participants
compilation and
test cases
the experiment
tests in
the mode
the provided
years of
testing in
that students
who had
testing can
manual testing
using continuous
throughout development
participants had
6 170
incremental compilation
test factoring
java experience
non participants
development time
a test
to complete
to run
of students
software engineering
our experiment
provided with
tests are
notification of
said that
with continuous
development environments
of test
likely to
the test
threats to
statistically significantly
to validity
who tested
rapid feedback
participants with
would recommend
significant effects
experimental treatments
run tests
multiple choice
java ide
the continuous testing
of continuous testing
emacs plug in
continuous testing tool
the mode line
a continuous testing
the emacs plug
continuous testing can
run the tests
likely to complete
continuous testing in
with continuous testing
a regression error
the course staff
continuous compilation and
continuous testing and
after the study
the problem sets
a test suite
using the tools
continuous testing group
who were provided
regression test suite
a regression test
years of java
were provided with
of continuous compilation
the problem set
the continuous compilation
all students were
tool to others
the control group
statistically significant effects
recommend the tool
the developer s
would recommend the
continuous testing were
threats to validity
using continuous testing
that continuous testing
complete the assignment
more likely to
testing can be
to complete the
the tool to
tests in the
of the code
the test suite
regression tests in
continuous testing uses
continuous compilation a
the provided test
a control group
that we measured
asynchronous notification of
saff michael d
provided test suite
90 would recommend
that continuous compilation
first problem set
that students were
significant at the
of java experience
and continuous testing
test first development
of a regression
compilation and continuous
the staff provided
mock object creation
provided test suites
the test suites
wasted development time
students were encouraged
for test factoring
one said that
were given a
those who had
test driven development
object creation for
said that it
perceptions of the
a continuous compilation
continuous testing to
by the course
than those without
editing by example
continuous compilation group
volunteered for the
a java ide
significantly more likely
