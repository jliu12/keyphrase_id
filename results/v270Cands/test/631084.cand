coverage
subdomains
subdomain
universally
covers
testing
properly
criteria
mutation
suites
criterion
decision
suite
subsumes
cover
sd
sdc
adequacy
fault
mdcc
detecting
arising
faults
branch
flow
causing
sdc1
inputs
weyuker
myers
program
oi
narrows
covering
failure
subsume
selection
minimized
tuples
specification
mutant
hamlet
du
nfa
exercised
software
laski
korel
paths
false
mcc
contexts
duplicates
subsumption
testers
phyllis
rise
2g
subexpression
elaine
detect
statement
adequate
analogs
frankl
association
statements
executable
mutants
ability
tosem
strategies
edges
dc
unexecutable
f0
practitioner
ordered
operators
applicable
associations
engineering
programs
guaranteed
clarke
fxj1
avritzer
reliability
selecting
feasible
condition coverage
universally properly
decision condition
properly covers
context coverage
multiple condition
properly cover
decision coverage
p uses
c 2
covers c
c 1
branch testing
test case
ordered context
failure causing
not universally
test suites
mutation testing
test suite
test cases
minimized decision
fault detecting
multi set
all uses
all p
detecting ability
the subdomain
testing criteria
subdomains arising
data flow
evaluate to
required k
arising from
test selection
each subdomain
coverage is
program p
the subdomains
cover decision
1 properly
causing inputs
coverage does
criterion c
p s
a test
cover c
coverage universally
software engineering
coverage and
at detecting
detecting faults
subdomain based
subdomain d
coverage criterion
1 universally
inputs that
faults than
input domain
on software
software testing
covers relation
test data
decision d
causing input
covers decision
mutation operators
sd mdcc
of subdomains
the criteria
the program
one test
criteria that
definition clear
flow testing
clear path
adequacy criteria
a definition
the all
flow graph
a fault
this program
sdc p
to true
partition testing
not properly
if c
limited mutation
subsumes but
uses universally
decision condition coverage
multiple condition coverage
universally properly covers
universally properly cover
all p uses
covers c 2
properly covers c
ordered context coverage
not universally properly
minimized decision condition
does not universally
fault detecting ability
subdomains arising from
1 properly covers
from each subdomain
if c 1
failure causing inputs
condition coverage is
coverage universally properly
c 1 properly
properly cover c
coverage does not
a test suite
at detecting faults
detecting ability of
one test case
evaluate to true
not properly cover
required k tuples
properly cover decision
multi set of
on software engineering
cover c 2
c 1 universally
properly cover all
does not properly
c 2 for
and ordered context
failure causing input
inputs that make
of those inputs
properly covers decision
covers decision coverage
definition clear path
data flow testing
clear path with
test case from
the fault detecting
of the criteria
a test case
path with respect
detect a fault
1 universally properly
properly covers relation
sdc p s
consisting of those
those inputs that
at least once
context coverage and
the decision coverage
limited mutation testing
coverage and ordered
condition coverage and
d d t
condition coverage does
subsumes but does
c 2 if
test suite that
detecting faults than
for this program
guaranteed to be
the multi set
evaluate to false
transactions on software
c 2 then
to evaluate to
c 1 subsumes
likely to detect
all du paths
suite that satisfies
decision coverage is
the condition coverage
m and e
cover decision coverage
at least as
better at detecting
of failure causing
start node to
a definition clear
take on the
