subtask
rba
oba
dasa
deadline
mndw
subtasks
ramp
rba_analyzeresponse
replicas
ke
overload
benefit
arrival
replica
deadlines
aggregate
workload
missed
heap
scheduling
processor
allocation
timeliness
lbesa
oba_overloadcheck
response
anticipated
adaptation
_determinereplicasprocessors
resource
ravindran
workloads
proactive
rhd
accrued
tasks
period
invoking
hegazy
processors
task
amortized
_algorithm
red
ke2
oba_
eqf
ke3
kelog
asynchronous
aperiodic
message
window
slack
underloaded
invokes
fig
arrivals
scheduler
triggering
edf
oba_algorithm
eex
oba_determinereplicasprocessors
k2
resources
deallocate
pseudocode
vol
ratio
predecessor
schedulers
periodic
const
stk
p2m4n4dw
rba_analyze
ke4
replicasprocessors
m3n3dw
binoy
p2m2n2dw
arrivaltime
mdndw
oba_determine
dl
messages
nd
load
the subtask
of rba
a subtask
mndw ke
deadline ratio
resource allocation
missed deadline
benefit tasks
aggregate benefit
subtask response
rba and
and oba
arrival list
subtask deadline
subtask arrival
higher benefit
rba under
asynchronous real
of replicas
adaptation functions
response time
the arrival
the task
each subtask
amortized complexity
benefit and
real time
the rba
log mndw
aggregate task
overload test
subtask or
ramp ramp
subtasks and
application benefit
replicas and
all subtasks
subtask on
the overload
arrival time
subtask and
the procedure
a task
the processor
response times
rba _determinereplicasprocessors
for proactive
dasa nd
under dasa
of subtask
underlying scheduling
proactive resource
of subtasks
ramp workloads
timeliness of
cost of
in asynchronous
benefit for
time distributed
the aggregate
scheduling algorithm
the response
using application
subtask replicas
the anticipated
increasing ramp
subtask execution
procedure rba_analyzeresponse
task benefit
subtask of
dasa and
scheduling algorithms
the heap
arrival times
complexity of
subtasks of
time window
the cost
hegazy and
that rba
of oba
their processors
of rba_analyzeresponse
oba s
accrued benefit
no 8
computers vol
vol 51
ravindran using
higher aggregate
missed deadline ratio
performance of rba
of a subtask
rba and oba
number of replicas
of the subtask
the subtask deadline
asynchronous real time
of rba under
in asynchronous real
higher benefit tasks
the subtask response
log mndw ke
resource allocation in
arrival time of
on the processor
the arrival time
the cost of
real time distributed
proactive resource allocation
for each subtask
subtask response time
allocation in asynchronous
for a subtask
time distributed systems
the underlying scheduling
amortized complexity of
response time of
time of a
of rba and
application benefit for
satisfy the subtask
aggregate benefit and
of higher benefit
the amortized complexity
the overload test
benefit for proactive
using application benefit
the response time
and ravindran using
ravindran using application
number of subtask
on computers vol
no 8 august
51 no 8
hegazy and ravindran
higher aggregate benefit
timeliness of higher
during the future
subtasks and messages
vol 51 no
the aggregate task
computers vol 51
aggregate accrued benefit
for the subtask
underlying scheduling algorithm
for proactive resource
subtask response times
of subtask replicas
response time analysis
8 august 2002
the timeliness of
of a task
or the message
the arrival list
and their processor
benefit and minimize
of replicas for
subtask replicas and
aggregate task benefit
the task deadline
their processor assignment
and their processors
the future time
overload is detected
complexity of rba_analyzeresponse
future time window
on a processor
the pseudocode of
response times of
of the task
cost of the
as the underlying
under dasa and
rba under dasa
const ramp workloads
benefit and lower
the aggregate benefit
cost of invoking
replicas and their
