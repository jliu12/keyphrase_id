basis variables
abstract type
application data
basis variable
application type
generic procedures
generic algorithms
software reuse
abstract data
view type
glisp compiler
generic procedure
data type
symbolic algebra
specialized versions
data types
graphical interface
using views
graphical user
specialized version
data structure
user interface
data representations
generic algorithm
abstract types
transformational programming
produces efficient
line compilation
user obtains
ordinary programming
units of measurement
divided by 2
specialized versions of
basis variables and
abstract data type
specialization of generic
application data structure
views from correspondences
application data and
application type and
data type and
views can be
graphical user interface
expected by the
data representations and
application data a
pipe divided by
clean separation between
versions of generic
described in this
variables and equations
abstract data types
appear to be
procedure that is
ways in which
correspondences between the
directly on the
area of a
data can be
adapted to fit
pipe can be
circle can be
abstract type are
ordinary programming language
