specialisation
mlet
specialiser
residual
static
monad
specialise
runm
interpreter
void
e1
ref
references
specialising
specialised
lift
metalanguage
e2
store
typed
eval
monadic
ml
moggi
specialises
env
num
specialization
erasure
constructor
residual type
type specialisation
partial evaluation
static store
the residual
specialisation rules
residual types
in mlet
the specialiser
the static
optimal specialisation
static state
specialisation for
the specialisation
the monad
void erasure
mlet x
residual program
specialisation is
static references
to specialise
self interpreter
on references
eval env
during specialisation
mlet r
residual programs
rules for
r ref
be specialised
the residual type
the static store
specialisation rules for
residual type of
the residual program
mlet r ref
the specialisation rules
type specialisation is
at specialisation time
operations on references
first class references
the type specialiser
rules for static
with first class
self interpreter for
a self interpreter
the static state
partial evaluation of
moggi s computational
2 in mlet
computational lambda calculus
type specialisation for
case eval env
specialisation for a
of case eval
in the residual
binding time analysis
of the static
a dynamic function
empty static store
