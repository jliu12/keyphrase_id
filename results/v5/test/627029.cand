arf
inspector
exchanger
array
processor
dereference
executor
parti
irregular
hashed
translation
fortran
compiler
yold
hash
mesh
processors
arrays
primitives
gather
scheduler
fluxroe
loop
irregularly
860
n1
schedule
unstructured
references
meshes
ia
scatter
accumulations
indices
ipsc
s5
runtime
exchangers
off
subscript
ib
template
strips
cache
nmsgs
flux
kernels
sparse
carry
preprocessing
align
fluxes
jagged
s6
partitioned
loops
kernel
multiply
partition
optimizations
sd
synthetic
dino
partitioning
cols
block
exchange
striped
send
la
euler
blocked
irreg
ms
s3
calls
s1
n2
decomposition
proc
compile
accesses
receive
sweep
costs
strip
efficiencies
nonlocal
vb
tables
map
procedures
codes
assignments
copies
dissection
dereferencing
s2
compilers
baden
aerodynamic
hpff
nprocs
ncols
executors
iterations
pa
endif
solver
accessed
s4
targeting
temp
statements
ffl
communications
index
gagan
lux
statement
descriptors
messages
carried
parallelized
initialization
coded
numbered
setup
carries
s8
ranged
intel
accumulation
referenced
descriptor
va
multigrid
reference
accumulate
foreach
s7
blocks
indirect
multiprocessors
interprocessor
supercomputing
id
extensions
ttable
pan2
iva
inspectors
pan1
ivb
gflops
iiia
gammapartition
stodghill
ivc
icase
gammaprocessor
ivd
stored
locations
fetches
nasa
contiguous
temporary
gathered
clause
mapping
matrix
dimension
dependencies
whitaker
kali
dereferences
iib
672
oak
indirections
pingali
cdrom
reg
count
primitive
williams
owner
communication
compiling
pointer
nest
750
subtract
accumulates
memory
agrawal
iia
idiom
riemann
translation table
distributed array
off processor
the inspector
the arf
hashed cache
arf compiler
distributed translation
hash table
gather exchanger
array elements
each processor
the parti
local array
fortran d
the executor
of off
array references
carry out
the scheduler
ipsc 860
point template
local indices
distributed arrays
table h
vector multiply
irregularly distributed
distributed memory
to carry
global indices
parti primitives
block matrix
data exchange
the distributed
matrix vector
fluxroe kernel
sparse block
build translation
schedule s
the translation
local index
using schedule
distributed irregular
processor data
non local
loop iterations
the hash
the hashed
unstructured meshes
processor p
the loop
translation tables
executor time
accumulations to
language extensions
inspector and
synthetic mesh
array element
the compiler
time required
the array
and receive
and local
5 point
processor assignments
array a
the processor
arrays x
distributed do
scatter exchanger
template synthetic
irregular using
the dereference
mesh partitioned
ia and
array y
the fluxroe
table initialization
executor phase
irregular array
parti procedures
processor distributed
send and
time ms
do i
of distributed
primitives can
processor elements
and ib
call to
processor and
and executor
n proc
s descriptors
k n1
array partition
dereference to
inspector phase
d block
blocked translation
count p
exchanger using
cross processor
on clause
mapping array
to dereference
setup hashed
a hash
in statement
runtime support
of irregular
the scatter
hash tables
the gather
receive calls
n1 and
processor references
the arrays
compile time
a decomposition
mesh a
carries out
primitives that
scheduler and
the subscript
references to
the ipsc
out the
array is
1 4
ms time
time primitives
processor map
k n2
unstructured euler
arrays ia
table hashed
find processor
yold k
both kernels
array map
processor loop
the parallelized
multiply kernel
by dereference
from arf
is irregularly
with map
binary dissection
align x
call dereference
call gather
in arf
euler solver
exchange primitives
cache hashed
insert code
s n1
of yold
arf for
partitioned between
s descriptor
h n1
synthetic meshes
a compiler
local data
copies of
figure 13
loop l
these primitives
for irregular
an irregular
data from
on processor
to processor
processors p
carried out
of array
in hash
ffl generate
irregular patterns
single sweep
match match
edge partition
irregular problems
call setup
d blocks
statements s1
support irregular
a distributed
at runtime
processor the
the communications
a loop
between processors
array reference
the reference
into strips
mesh b
assignments for
the arf compiler
of off processor
the translation table
distributed array elements
distributed translation table
hash table h
of distributed array
to carry out
matrix vector multiply
block matrix vector
off processor data
the distributed translation
the hash table
build translation table
sparse block matrix
required to carry
processor and local
off processor distributed
5 point template
processor distributed array
time required to
send and receive
do i 1
the time required
carry out the
on each processor
distributed translation tables
local array a
copies of off
off processor elements
the parti primitives
template synthetic mesh
point template synthetic
q 0 4
the inspector and
distributed irregular using
ia and ib
the fluxroe kernel
mesh partitioned into
during the inspector
synthetic mesh partitioned
using schedule s
and local indices
a hash table
the gather exchanger
the hashed cache
off processor references
irregularly distributed arrays
arrays x and
the inspector phase
and receive calls
count p then
setup hashed cache
exchanger using schedule
distributed array references
translation table initialization
and local index
the ipsc 860
distributed array element
by the arf
the parti procedures
2 d block
the off processor
processor elements of
inspector and executor
hash table to
non local data
the data exchange
call to the
each processor the
vector multiply kernel
example loop the
call setup hashed
translation table is
hashed cache hashed
table h n1
distributed arrays in
data exchange primitives
irregular patterns of
the executor phase
to find processor
align x y
elements of yold
to processor map
ms time ms
cross processor loop
run time primitives
into 2 d
table initialization and
processors p 3
time ms time
the distributed array
array a 0
arrays ia and
blocked translation table
table hashed cache
irregular array references
hash table hashed
partitioned into strips
call gather exchanger
from arf for
in hash table
each distributed array
the local array
generated from arf
the arrays ia
the scatter exchanger
to each processor
carry out a
the example loop
sparse matrix vector
of non local
array elements to
to support irregular
2 d blocks
ffl generate a
the processor and
to y k
in fortran d
the loop index
a factor of
in a regular
in the hash
fortran d language
a blocked translation
the reference x
array references that
initialization and dereference
array elements in
p then else
of the executor
k 1 4
loop carried dependencies
1 4 from
in an irregular
data from needs
an s descriptor
hashed gamma cache
and computational work
parti run time
the same schedule
call to dereference
finite difference template
intel ipsc 860
y k n1
arf compiler is
array partition is
data in hash
generate the inspector
the on clause
distributed array y
for loop iterations
p 3 figure
local index assignments
flux 1 4
call scheduler id
orthogonal binary dissection
the communications costs
exchanger is generated
the parti run
index assignments for
dereference to find
meshes a and
local indices la
find processor assignments
gather exchanger places
the executor time
that distributed array
map array using
gather exchanger using
patterns of distributed
processor assignments pa
using a mapping
executor for a
for sparse block
id n hashed
scheduler id n
partitioned between processors
call dereference to
of the ipsc
of map array
schedule s n1
partitioned into 2
a distributed translation
parti primitives in
set values of
to off processor
values of map
support irregular patterns
the data arrays
translation table using
f lux k
block sparse matrix
is irregularly distributed
loop to ffl
processor assignments and
scheduler and data
data and computational
needs data from
irregularly distributed array
