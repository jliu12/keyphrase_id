cpo
pcf
nat
lift
dyn
static
adequacy
sund
denotational
snf
operational
denable
semantics
compile
compilation
undenedness
dened
dapp
dund
cpos
pred
dynamic
interpretation
denition
d2
d1
hf
junk
residual
lemma
binding
arrow
compiled
induction
lambda
distinction
equational
sd
interpreted
ifz
typed
commutes
undened
substitution
name
interpret
evaluator
languages
uence
gi
handbook
purely
language
functor
termination
calculus
closed
factorisations
morphisms
formation
terminate
dene
embeds
counterpart
categorical
pragmatics
hypothesis
pow
lazy
partial
interpretations
pd
denotation
reductions
00
statically
relate
conversely
untyped
morphism
ut
usual
polymorphic
cartesian
intended
valid
rst
reduction
machinery
bool
rules
lifting
translation
interpreting
correctness
phases
semantic
nthen
parametrisation
postponent
compil
ftrue
plift
cuted
enrichment
2lpcf
hid
leeuwen
category
subtraction
specialized
continuous
terminating
wise
invalid
propagating
logical
soundness
interpretative
eugenio
unde
hearn
culus
lcf
falseg
id
diagrams
evaluations
chains
underlines
parametrised
intuitionistic
moggi
directed
isolation
rule
monotone
failure
respected
pv
fragment
abstraction
program
behaves
nal
murst
specialisation
formedness
evaluators
hh
essentially
contexts
preserves
deserve
seman
borrowing
px
exe
postponed
canonical
behaviour
categories
immediate
naturals
ned
xx
constructs
lemmas
cult
projection
postpone
asserting
novelty
judgement
conrms
versions
logic
crucial
macros
succ
cal
recursion
adequate
interplay
exibility
booleans
reconsider
equivalences
understand
syntactic
diagram
modications
behave
exponential
tics
comparatively
ness
relations
incorporate
calculi
2 level
dynamic terms
partial evaluation
the cpo
level pcf
dynamic types
call by
by name
operational semantics
type nat
in snf
the static
term m
d2 g
dyn f
the dynamic
denotational model
at compile
m 0
r d1
in cpo
compile time
interpretation of
of type
adequacy theorem
level languages
static reduction
lift n
name pcf
the interpretation
at run
semantics of
binding time
and dynamic
a term
logical relation
pcf the
directed partial
the compilation
non termination
the denotational
b r
the operational
run time
closed term
dynamic type
the semantics
static and
an operational
induction hypothesis
r d2
cpo is
denable functions
sub term
d lift
static adequacy
dynamic adequacy
pred m
x lift
of dynamic
type directed
a dynamic
the language
of pcf
type formation
of dyn
level language
case m
a static
purely dynamic
residual program
nat nat
x m
denotational semantics
type d
hypothesis on
two level
be compiled
not terminate
between static
terminate at
to interpret
cpo of
dynamic arrow
term sund
partial evaluator
dynamic ones
cpo x
pairs hf
lift 0
environment x
static components
hf gi
point wise
terms like
interpret dynamic
functor categories
type assignment
m 00
static undenedness
lift sund
lazy calculus
category cpo
dynamic evaluation
immediate otherwise
some junk
gi such
by induction
equational theory
semantics and
x x
c 7
types and
if m
dened by
d 0
evaluation a
a denotational
f 6
by lemma
of partial
up n
type unit
formation rules
substitution lemma
is point
of cpo
an adequacy
execution phases
the model
f b
compilation and
the rule
r d
is dened
account of
term can
by value
the type
give an
during compilation
typed term
static types
cartesian closed
unit unit
terms and
cases case
have seen
time analysis
by x
t 00
be x
base types
evaluation the
rule is
valid in
a categorical
d1 d2
dene a
if f
of types
m d
f be
the environment
indicates the
that m
in partial
are interpreted
handbook of
relate the
by denition
a closed
dened as
the interpretations
evaluation is
a semantic
types are
least element
is interpreted
of static
are valid
f r
relation is
of terms
dynamic counterpart
of undenedness
terms pred
static term
reduced dynamically
m pred
dapp dyn
usual interpretation
adequacy in
sd m
like call
standard pcf
m sd
not denable
dynamic numbers
component dened
2 level pcf
call by name
is in snf
of type nat
at compile time
a 2 level
2 level language
of 2 level
the interpretation of
dened by x
at run time
by name pcf
type directed partial
two level languages
give an operational
directed partial evaluation
the operational semantics
a closed term
of the language
an operational semantics
of partial evaluation
interpretation of dynamic
the type formation
induction hypothesis on
the denotational model
r d2 g
d lift n
not terminate at
x a p
and a denotational
the semantics of
of dynamic types
f b r
static and dynamic
operational semantics and
partial evaluation a
m is in
of type directed
binding time analysis
between static and
that a term
can be compiled
and dynamic evaluation
semantics of dynamic
the environment x
dyn f r
purely dynamic terms
compilation and execution
x m 0
d2 g c
gi such that
is immediate otherwise
terminate at compile
r d1 d2
d1 d2 g
the category cpo
b r d2
b r d
pairs hf gi
of dynamic terms
the static components
be c 7
type formation rules
a type assignment
f r d1
a denotational model
hf gi such
be the environment
dynamic type d
denable functions of
to interpret dynamic
compile time and
by induction hypothesis
call by value
for partial evaluation
term of type
closed term m
interpretation of terms
in partial evaluation
during the compilation
denition of dyn
m 0 if
we have seen
let f be
a term can
partial evaluation is
rule is not
semantics of a
dened as follows
have to show
a term m
each i 2
does not terminate
is not valid
term can be
and execution phases
that a static
obtained from pcf
by value or
m m sd
g c but
between the semantics
dynamic evaluation the
functor categories and
for the lambda
m pred m
down a by
if its denotation
for some dynamic
be statically reduced
and m d
the dynamic term
type unit unit
a semantic account
a dynamic arrow
some dynamic value
dynamic adequacy theorem
identity on x
semantic account of
interpret terms like
a partial evaluator
model of 2
must have dynamic
f 6 and
pred m pred
dynamic sub term
operational semantics the
from pcf by
base types are
level pcf the
reductions can be
valid consider the
theory and a
type nat in
the and rules
time information inside
each dynamic type
before the dynamic
a logical relation
a t 00
r d1 c
sd m 0
polymorphic binding time
static normal form
on m 0
are the dynamic
handbook of logic
n conversely if
dynamic value d
if taken in
dapp dyn f
dyn f b
given to relate
by x lift
in snf and
static components of
are pairs hf
statically reduced to
lemma t if
execute it at
dene a translation
to interpret terms
in snf the
logical relation r
by name the
snf and m
consider only some
f a t
like call by
is the lift
a component dened
on d 0
environment x i
of non termination
kinds of undenedness
b r d1
and the denotational
term m 00
dyn f 6
a dynamic sub
f be x
the cpo one
m let f
lemma 16 hence
the dynamic adequacy
m sd m
taken in isolation
bounds of chains
the cpo case
in static normal
type nat then
relation is essentially
semantics an equational
the exponential in
cpo is dened
level pcf and
f be c
by name if
a by lemma
d m 0
