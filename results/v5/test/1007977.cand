inorder
spine
preorder
fold
bftf
roll
flatten
forest
tip
preorderf
traversal
converse
breadth
reductivity
revzip
ziptree
zipforest
rebuild
inversion
haspreorder
execwith
tree
invert
height
foundedness
reductive
concat
surjective
xok
bft
prefix
xs
exec
commands
ys
hylomorphism
prefixok
trees
functor
datatypes
datatype
aforest
rbr
coreflexive
labelling
traversals
dom
subtrees
generalised
fst
jointly
strings
heights
lookahead
snd
fusion
fuse
okasaki
isnext
moor
newtree
cpy
inverse
relational
ws
string
bin
lbr
folds
unfold
id
fork
forests
bs
inverses
inverted
int
foldtree
spinei
coreflexives
foldrn
demonic
su
founded
parsing
parse
exercise
inverting
lists
map
join
specification
font
tupling
determinism
boldface
xu
derivation
haskell
ins
del
deterministically
bfl
printing
invariant
list
loop
add
character
cons
rebuilding
init
ran
ok
minsplit
flattenf
zipping
foldr
monotype
relator
doornbos
rollpf
flattens
xof
angelic
zipped
minadd
issu
deques
building
monotonic
eq
converts
functional
edit
ht
knuth
dijkstra
upwards
invent
catamorphism
catamorphisms
backhouse
tournament
talked
char
imperative
optimised
inr
inl
flattening
says
move
erent
labelled
internally
backwards
tail
greedy
contravariant
cursor
tips
duplicated
reflexive
reader
monotonicity
calculus
di
bird
homomorphisms
wraps
admitting
locate
postcondition
optimise
consumed
apparently
fs
command
relations
valued
factored
ta
isomorphism
binary
implementable
cat
folding
fig
conversion
cult
wider
recursive
generalise
fa
theories
generalisation
termination
reverse
refinement
a tree
the fold
converse of
a spine
tree a
a fold
breadth first
spine a
the spine
f well
x us
the converse
forest a
preorder traversal
list a
to invert
jointly surjective
function theorem
a relation
f reductive
inorder traversal
program inversion
first labelling
well foundedness
given list
building trees
su xok
spine tree
xok x
inorder roll
partial function
add a
traversal of
a tip
a forest
e f
a list
haspreorder x
left spine
base functor
concat map
minimum height
f reductivity
revzip a
prefixok x
first traversal
inverse of
data tree
a xu
the forest
tree with
a roll
add is
map snd
preorderf map
snd us
relation add
its preorder
fold fusion
tip tree
zipforest bftf
a b
su x
step a
the inverse
the preorder
empty lists
two strings
the tree
the left
valued binary
binary tree
traversal is
a function
f a
is f
b d
inversion in
tree whose
a x
the list
a a
relation r
boldface font
newtree a
fold we
vs ws
rbr a
bs us
since dom
fork preorder
greedy theorem
a hylomorphism
tip valued
bin a
lookahead x
monotonic on
tip a
an unfold
the inorder
de moor
its inversion
following datatype
are jointly
tree from
of commands
theorem 3
non deterministically
functor f
to fuse
last x
fold to
refinement calculus
a f
the subtrees
has type
trees with
well founded
defined by
two trees
binary trees
a e
a relational
theorem 1
in words
eq a
r f
inversion of
the invariant
new node
strings and
a partial
the relation
locate a
base a
non determinism
preorder inorder
converse operation
foundedness and
preorderf t
edit problem
duplicated elements
fusion theorem
spine representation
roll vs
lbr a
preorder the
map flatten
rebuilding a
type aforest
flatten roll
empty strings
generalised theorem
reductive if
ht a
us su
map fst
its traversals
fold in
bin b
dom s
b bs
tree int
inorder and
source string
the coreflexive
xu x
a rebuild
relational fold
where step
where add
printing and
fold function
ok x
rebuild x
aforest a
a xs
string edit
for breadth
t us
inorder traversals
labelled binary
fst us
us newtree
of bftf
bfl as
dom r
invert a
the loop
the derivation
tree and
list of
up a
d e
traversals of
prefix of
c a
the generalised
height x
fold on
converse of a
the converse of
a tree a
a function theorem
of a function
as a fold
breadth first labelling
su xok x
a spine a
f well foundedness
breadth first traversal
the inverse of
c a e
a tree with
the left spine
revzip a f
a spine tree
inorder traversal of
tree a tree
the given list
a e f
a partial function
a list a
a tree from
non empty lists
su x of
preorderf map snd
are jointly surjective
into the fold
map snd us
tree from its
f a b
d e f
b d c
e f b
e f a
traversal of a
inverse of a
a relation r
r a b
with minimum height
tip valued binary
the base functor
r is f
of the fold
as a hylomorphism
building a tree
up a v
valued binary tree
is f reductive
f well founded
the following datatype
is f well
and its inversion
sequence of commands
building trees with
relation r a
preorder traversal of
a a tree
as a relational
is defined by
function as a
eq a a
adding a new
d c a
of a binary
rebuilding a tree
f reductive if
the source string
a xu x
by the list
duplicated elements the
join a t
algebra of programming
spine a tree
fork preorder inorder
a relational fold
roll vs ws
to invert a
and preorder traversal
fold fusion theorem
bin a x
a simple relation
the relation add
xok x us
is monotonic on
map fst us
the string edit
its preorder traversal
newtree a xu
add a xu
concat map flatten
the fold fusion
the converse operation
a is mapped
us newtree a
along the left
a roll vs
since dom s
inorder and preorder
preorder traversal is
a tree whose
preorderf t u
from its traversals
us su xok
a forest a
well foundedness and
a tip valued
the fold to
in boldface font
program inversion in
the two strings
tree int int
an unfold the
for breadth first
x us su
string edit problem
base a a
along the spine
prefixok x us
the greedy theorem
prefix of the
a new node
linear time algorithm
conditions under which
theorem 3 is
f r f
list of labels
for non empty
the preorder traversal
a su x
trees with minimum
f a x
f b d
and is defined
function can be
are about to
b d e
a single tree
inversion in the
the domain of
a list of
can thus be
a given list
traversals of the
to a tree
a function as
reader is referred
c d e
a binary tree
a tree and
t u v
tree to the
is a partial
u v w
tree on the
that in section
written as a
to insert a
a total function
now we will
of a partial
a relation is
a b d
the reader is
the current position
is to prove
as a b
a b is
to derive a
x i 1
a b b
theorem 1 to
a x y
of the given
not di cult
under which the
is a relation
of empty strings
breadth first order
v up a
y non deterministically
under the spine
and output types
write the inverse
label a tree
inversion and strongest
of f well
height x i
relational theory of
concat map cons
a fold we
its traversals via
roll add a
isnext x a
printing and parsing
its fold function
maps a list
to invert it
a tip tree
