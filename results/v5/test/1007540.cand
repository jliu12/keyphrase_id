selector
mode
steering
robots
robot
modes
controller
team
training
teams
tournament
battery
upgraded
team26
radio
environmental
program
saver
enemy
brightness
rand
spoofing
selectors
droid
battle
deceptive
materials
wars
attack
mode1match
programmer
gps
sleep
raw
jamming
learners
laptop
coded
runs
executions
counterexamples
score
competition
unanticipated
programs
behaviors
situations
controllers
old
reboot
refactoring
unexpected
ore
allies
team20
suite
terrain
preconditions
nearby
profile
operational
augmented
games
simulates
software
rank
matches
chooses
profiling
learner
operating
upgrades
rendezvous
army
augmentation
quantities
modalities
designers
human
daikon
damage
modeling
centralized
selecting
display
routers
adaptability
invariants
detection
abstraction
tournaments
dcpower
rebooting
ncnb
enemies
scouting
team10
game
train
participants
messages
mit
did
abstractions
anomaly
alternately
bad
throws
damaged
radios
contest
refactored
unforeseen
reboots
richer
invoked
failures
wrote
optimizations
policy
additionally
ranking
anticipated
load
phones
unmodified
foresee
replay
correlating
circumstance
aliased
inputs
bugs
augmenting
hardware
generalizes
instructions
circumstances
developers
policies
switch
supscrpt
execu
wished
combat
dissipation
behaved
int
selects
bias
reflections
anticipate
worthwhile
environments
resources
augment
home
render
inclusive
vironment
attacking
particularly
creating
dc
unable
runtime
column
match
maps
learning
upgrade
utilizes
meeting
se
specialized
decomposable
base
default
switching
pick
power
environment
accommodates
selection
denial
won
month
hypothesize
indicate
transitions
applicability
poorly
abilities
coverage
expert
signal
outperformed
interference
location
had
mode selector
program steering
new mode
the mode
a mode
training runs
the robot
modeling step
the robots
original mode
mode selection
multi mode
the program
battery 0
raw materials
the team
each mode
original program
control programs
control program
the original
selector that
the modeling
saver mode
power saver
change rand
program original
battery 1
mode selectors
original upgraded
standard mode
upgraded change
robot control
program state
the modes
the training
droid wars
deceptive gps
change simulates
environmental changes
selector and
the new
hard coded
the old
the controller
new maps
a robot
column gives
new environments
selector may
steering the
environmental change
this environmental
sleep mode
machine learners
0 battery
old mode
selector for
old one
operating conditions
test suite
the base
the models
with program
invariant detection
hardware failures
new controller
our mode
value profiling
the teams
current program
selector in
per mode
mode power
steering technique
original programs
laptop display
2 battery
profile directed
steering is
other robots
radio spoofing
original controller
radio jamming
steering process
new environment
our technique
indicate when
operational abstractions
selector is
resulting models
the laptop
operational abstraction
were true
the programs
did not
modes and
the programmer
dynamic invariant
pick up
when to
training data
target system
controller that
run time
of program
different modes
is operating
a multi
a programmer
applying program
selector chooses
steering can
increased resources
selector was
robots to
team26 s
mode transitions
centralized intelligence
among modes
systems built
if battery
robots are
our tools
mode program
the deceptive
mode brightness
require designers
controller augmentation
that mode
dc power
random mode
runs can
each robot
original environment
brightness battery
mode software
the tournament
mode system
mode sleep
robots in
the spoofing
signal strength
a controller
rank of
each team
interactive program
the upgraded
train on
directed optimization
bias is
mode was
generalizes from
of teams
steering a
video games
policies for
mode is
the technique
the augmented
the system
mode but
conditions but
mode with
invoked when
called program
in operating
robot is
or selecting
appropriate mode
the rank
at run
a software
as desired
the hard
to switch
anomaly detection
runs to
which program
code coverage
program states
program and
sub optimal
program by
mode the
method calls
selecting among
a program
to pick
most similar
might be
a model
the model
our program
score for
such approaches
be worthwhile
machine learning
for program
maps the
new mode selector
the new mode
the mode selector
the original mode
the modeling step
the training runs
a mode selector
the program steering
original mode selector
mode selector that
the original program
original upgraded change
robot control programs
a new mode
battery 1 0
power saver mode
upgraded change rand
program original upgraded
and the mode
a multi mode
of program steering
battery 0 2
mode selector and
the old one
column gives the
old mode selector
environmental change simulates
mode selector may
with program steering
the old mode
this environmental change
mode selector for
when the program
current program state
program steering is
the original programs
mode selector in
standard mode power
program steering process
the hard coded
0 2 battery
the original controller
program steering technique
program steering the
mode power saver
mode selector is
to pick up
0 battery 0
new mode selectors
the new environment
the resulting models
the target system
dynamic invariant detection
that the programmer
of the programs
a test suite
systems built using
in operating conditions
the mode with
sleep mode brightness
which program steering
profile directed optimization
to train on
2 battery 1
multi mode software
built using such
of a mode
when to switch
mode sleep mode
the laptop display
using such approaches
mode brightness battery
new maps the
interactive program steering
called program steering
mode selector was
mode with the
the original environment
mode selector chooses
multi mode system
require designers to
selector for the
the deceptive gps
changes in operating
our program steering
our mode selector
training runs can
the raw materials
augment the original
saver mode sleep
1 0 battery
operating conditions but
random mode selector
applying program steering
in the original
of each mode
operational abstraction is
program state and
original program with
invoked when the
for each mode
the robot control
program steering a
an operational abstraction
rank of the
at run time
the robot is
situations in which
be worthwhile to
of the robot
from the training
of the old
as noted above
approaches based on
per pair of
software controlled radios
specification based analysis
the change column
a random mode
program steering might
compute score for
the augmented program
reports properties that
mode based on
model and scheduling
dc power is
change rand radio
use of self
optimization and synthesis
good respectively bad
during the training
scheduling techniques for
increased resources the
for process management
object to render
round robin tournament
the mode whose
in radio range
in profile directed
use the new
0 score 75
the modes themselves
represents a mode
mode selector which
invokes the new
steering program steering
based infrastructure for
bibliography of interactive
change simulates a
function variants for
point such as
efficiently under normal
that respond to
the original column
is operating as
a hard coded
3 mode selection
a bias is
droid wars competition
accommodates unexpected performance
may also indicate
it is operating
self checks and
instance a particular
information to assist
that each mode
the state satisfies
in new environments
dissipation and signal
if battery 0
generalizes from the
among existing modes
were true of
program steering tool
induced by reflections
state satisfies the
a robot discovers
computing value profiling
s control program
data by running
not affect correctness
signal strength or
and scheduling techniques
battery 0 0
weights to different
the robots were
the modes and
chooses a mode
lines column gives
selects the mode
state program steering
teams with centralized
the teams with
pair of teams
the droid wars
selector is richer
the technique called
range of changes
for program steering
learning step the
