dependences
effects
benchmarks
optimizing
compilers
rs
translating
programs
keeping
bounds
procedures
regular sections
regular section
section analysis
interprocedural analysis
dependence analysis
side effects
value numbers
call sites
parallel programming
actual parameter
formal parameter
interprocedural side
interprocedural propagation
constant propagation
induction variables
dataflow analysis
interprocedural summary
global value
local analysis
symbolic analysis
programming style
summary information
array side
call graph
subscript expressions
meet operations
rice compiler
compiler evaluation
interprocedural constant
dependence testing
automatic parallelization
modular programming
algebra subroutines
access descriptors
inline expansion
complete applications
side effect
actual parameters
evaluation program
bounds information
summary sections
section subscripts
programming support
compilation dependences
subscript lattice
summary section
scientific disciplines
cache performance
international conference
interactive parallel
interprocedural array
invariant expressions
linpack library
recursive programs
regular section analysis
interprocedural constant propagation
modular programming style
global value numbers
bounded regular sections
rice compiler evaluation
loop induction variables
data access descriptors
interprocedural analysis and
interprocedural side effects
linear algebra subroutines
restricted regular sections
evaluation program suite
summary regular sections
compiler evaluation program
interprocedural side effect
interactive parallel programming
david k lowenthal
memory machines proceedings
array side effects
written in an
interprocedural dependence analysis
8th international conference
programs written in
liao monica s
fast execution time
interprocedural analysis alone
regular section subscripts
good programming practice
ambitious optimizing compiler
