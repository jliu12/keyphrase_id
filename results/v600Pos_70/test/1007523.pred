students
participants
developers
tests
errors
tools
impressions
distracting
effects
failing
factoring
edits
monitoring
editing
users
clicking
tas
regarding
ins
environments
refactoring
running
compiling
continuous testing
continuous compilation
test suites
regression errors
testing tool
development environment
regression testing
regression error
control group
success rate
regression test
course staff
test cases
manual testing
incremental compilation
test factoring
development time
software engineering
development environments
rapid feedback
significant effects
experimental treatments
run tests
failing tests
work habits
modern ide
test frequency
delta debugging
student solutions
student developers
junit test
better code
qualitative feedback
regression tests
test prioritization
qualitative results
several participants
asynchronous notification
test errors
first development
compilation errors
running tests
programming task
continuous testing tool
continuous testing can
run the tests
likely to complete
continuous testing group
regression test suite
tool to others
statistically significant effects
would recommend the
continuous testing were
threats to validity
using continuous testing
continuous testing uses
first problem set
wasted development time
continuous testing to
continuous compilation group
significantly more likely
david saff michael
provided by continuous
modern ide s
treatment predicts correctness
participants did not
multiple choice questions
initial failing tests
effective regression testing
second problem set
run regression tests
