mops
interpreters
string
languages
semantics
debugging
objects
protocols
programs
reflective interpreter
reified representation
generic reification
class instance
method call
reflective programming
reification technique
base representation
environment locale
reflective systems
original class
reification operator
interpreter definition
original interpreter
see figure
program transformation
dispatch objects
reflective interpreters
active representation
tailored mops
local environment
accessible representation
reflective tower
reflective programs
oriented interpreters
interpretation layer
using reflection
reflective towers
reflective languages
reflective system
lookupdata string
runtime system
level n
security properties
user programs
syntax tree
language designers
metacircular interpreter
metaobject protocols
method eval
expmethod extends
reification process
reification operation
global environment
reflective capabilities
current representation
non reflective interpreter
generic reification technique
exemplified in section
object oriented interpreters
class instancelink datalist
instancelink datalist datalist
generic reification scheme
lookupdata string name
datalist datalist field
class expmethod extends
original class name
dispatch object instance
original interpreter definition
incoming method calls
infinite tower of
generated dispatch class
level n interprets
method call tracing
datalist datalist instance
new tower level
