subtasks
scheduling
processors
triggering
resources
allocations
overloads
decisions
incurs
executing
computers
determining
decreasing
situations
deadline ratio
resource allocation
missed deadline
benefit tasks
aggregate benefit
subtask response
subtask deadline
subtask arrival
higher benefit
adaptation functions
response time
amortized complexity
application benefit
arrival time
response times
rba _determinereplicasprocessors
underlying scheduling
proactive resource
scheduling algorithm
using application
procedure rba_analyzeresponse
task benefit
scheduling algorithms
arrival times
time window
ravindran using
higher aggregate
future time
n tasks
lower benefit
task deadline
rba_analyzeresponse procedure
task benefits
periodic task
scheduling events
anticipated workload
second replica
lower missed
single replica
benefit task
execution times
august 2002
effort real
current processor
task adaptation
maximize aggregate
missed deadline ratio
number of replicas
asynchronous real time
higher benefit tasks
proactive resource allocation
subtask response time
time distributed systems
aggregate benefit and
using application benefit
ravindran using application
higher aggregate benefit
timeliness of higher
underlying scheduling algorithm
subtask response times
response time analysis
benefit and minimize
subtask replicas and
future time window
const ramp workloads
benefit and lower
replicas and their
lower benefit tasks
lower missed deadline
decreasing order of
total available slack
ramp ramp workloads
subtask execution times
subsections that follow
aggregate missed deadline
triggering periodic task
time scheduling algorithms
minimize aggregate missed
replicas needed for
transactions on computers
real time scheduling
