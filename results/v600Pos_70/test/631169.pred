timing
cache
processors
pruning
succeeding
preceding
calculating
tasks
surrounding
scheduling
pipelining
programs
effects
analyzing
ignoring
predictions
bounds
program construct
first reference
case execution
timing information
timing schema
timing analysis
execution path
pipelined execution
last reference
execution time
worst case
wcet bounds
cache memory
risc processors
time systems
basic block
memory block
cache miss
original timing
execution scenario
case timing
program constructs
timing effects
preceding program
extended timing
wcet analysis
succeeding program
instruction cache
pipelined processors
basic blocks
timing variation
revised timing
loop timing
simple time
execution paths
preemptive scheduling
analysis technique
instruction references
instruction caches
cache hits
timing behavior
cache partitioning
pipelining effects
schema approach
pipelined processor
timing variations
differ depending
worst case execution
case execution path
pipelined execution and
real time systems
timing analysis of
case execution scenario
pipeline cache timing
original timing schema
worst case timing
timing information of
timing effects of
extended timing schema
effects of pipelined
succeeding program construct
case execution time
sequence of instructions
loop timing analysis
analysis of pipelined
execution path that
timing information associated
preceding program construct
wcets of tasks
case timing analysis
information associated with
instruction block references
within a maximum
history sensitive nature
instruction block addresses
maximum of about
case timing abstraction
worst case scenario
