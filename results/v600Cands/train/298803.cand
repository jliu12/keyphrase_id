locality
earth
remote
localized
pointer
accesses
int
spclpool
manna
specialized
compiler
intraprocedural
benchmark
programmer
declarations
village
lessthan
specializations
inference
mccat
pointers
home
perimeter
owner
specialization
threaded
advanced
quicksort
callsite
eu
attribute
speedup
expr
func
runtime
newnode
localg
scoped
calls
globals
references
thread
grain
procs
foo
calling
malloc
benchmarks
equalnode
blkmov
tsp
memory
node
health
declared
multithreaded
prog
affinity
carlisle
foreach
allocated
callee
steensgaard
site
underlined
count
propagation
versions
invocation
invocations
bench
c2
saved
su
caller
sites
patients
pointstoclass
corbera
localityset
allocpoint
callstmt
asenjo
countequal
colombian
assignmentstmt
c1
conservatively
fun
interprocedural
compete
threads
quad
recursive
linked
coded
villages
grammer
balancer
allocation
msec
coarse
body
speedups
tree
merging
burden
impr
processor
rec
propagate
ordinary
c3
statement
tour
head
qsort
olden
insensitive
contexts
zapata
forall
shorter
mapped
argu
emilio
pseudo
spends
infers
indirect
rafael
colour
declare
irregular
declaration
token
programs
vs
raster
parallelizing
indirection
inexpensive
translated
checks
initialized
merge
newly
threading
safe
locally
encountering
polling
array
return
processors
99
parallelization
fields
marks
statements
else
architecture
invoke
fetches
create
goto
specialfuncexists
29128
countequalspec
8498635
addtospclpool
451179
67158
countrec
829790
spcls
ointst
4587
maquelin
intraprocedurally
2672068
1586323
9132
affin
oclass
5966
valueof
1635111
isbasicfunc
irreg
50mb
17193
addto
5394
7095
memorymachine
63482
4421050
ownerof
tialization
locality analysis
earth c
the earth
locality information
localized version
the locality
locality attribute
the localized
our locality
points to
advanced version
local pointers
local pointer
remote accesses
locality inference
the programmer
basic functions
earth manna
equal node
local memory
remote memory
owner of
node local
data accesses
the advanced
pointer declarations
of locality
simple version
memory accesses
level threaded
to class
be local
specialized function
the compiler
this benchmark
remote data
vs simple
locally scoped
threaded c
of remote
are local
type inference
village node
pseudo remote
in earth
intraprocedural locality
earth mccat
call site
is local
the call
specialized versions
the points
advanced versions
attribute of
return f
no locality
to analysis
dynamic data
int c1
more locality
earth runtime
callee function
accesses saved
local within
intraprocedural propagation
after locality
c earth
scoped variables
y localg
localized advanced
8 procs
the simple
t int
function calls
to local
calling contexts
c compiler
locality of
else int
inference b
ordinary c
the invocation
memory references
a pointer
call to
the owner
t simple
remote calls
coarse grain
accesses and
memory allocation
local p
to classes
hand coded
all remote
locality for
at runtime
and locally
linked fields
count rec
earth multithreaded
if expr
locality propagation
inference figure
called earth
manna architecture
additional locality
version achieves
local q
references via
c3 else
simple localized
locality context
advanced earth
mccat c
and specializations
locality attributes
mccat compiler
new locality
call sites
as local
to remote
c language
locality using
the callee
calling context
and advanced
pointer variables
the benchmark
calls to
remote references
different calling
runtime load
comes very
incoming array
way tree
and globals
remote remote
p int
mapping computation
parameters and
the body
b after
the su
a specialized
low level
remote access
in remote
compete with
of function
c1 c2
benchmark is
our analysis
function invocations
quad tree
interprocedural propagation
actually create
count equal
the program
declarations and
dynamically allocated
data structures
each benchmark
a local
each statement
version for
local in
c2 c3
int v
local t
variable references
automatically produce
local references
inference based
the specialized
read write
functions to
a remote
all memory
analysis is
recursive call
level tree
as remote
specialized version
localized and
v int
versions of
the caller
declared as
declarations in
parallel c
using basic
compiler techniques
runtime system
memory reference
allocated on
the eu
q value
explicitly declared
of benchmarks
the localized version
our locality analysis
the advanced version
points to class
the points to
to class of
the locality attribute
the simple version
locality attribute of
the earth c
locality analysis and
local pointer declarations
remote data accesses
the earth manna
number of remote
points to analysis
the locality information
of locality information
in earth c
points to classes
specialized versions of
function is created
the locality analysis
to local memory
over the simple
the owner of
locally scoped variables
remote accesses saved
low level threaded
earth c earth
the earth mccat
locality inference b
a no locality
of equal node
b after locality
after locality inference
earth c compiler
earth c language
in the earth
parameters and locally
and advanced versions
int c1 c2
inference b after
c earth c
of remote accesses
and locally scoped
no locality inference
the callee function
class of x
locality analysis is
reduction in remote
on the earth
a local pointer
dynamic data structures
locality information for
this benchmark is
of the earth
must be local
the locality of
local in the
mapping computation to
is local within
earth c version
language the earth
in remote data
int v int
locality inference figure
earth runtime system
inference based algorithm
declared as local
4 way tree
data accesses the
c2 c3 else
localized version of
using basic functions
called earth c
v int c1
basic functions to
to equal node
t int v
locality attribute is
earth manna architecture
localized and advanced
local pointer and
earth mccat c
mccat c compiler
advanced earth c
specialized function is
c language the
node local p
earth multithreaded architecture
the earth multithreaded
the earth runtime
type inference based
level threaded c
version for the
memory accesses are
remote memory accesses
to the owner
comes very close
compiler must assume
locality analysis for
of remote data
local memory accesses
the incoming array
locality information in
different calling contexts
parameters and globals
the body of
in the body
points to information
c1 c2 c3
to the advanced
for points to
the specialized function
high level parallel
points to and
of the callee
specialized version of
compete with the
exploit the locality
all memory accesses
a local memory
the calling context
call site is
dynamic memory allocation
recursive call to
coarse grain parallelism
of the compiler
must assume that
to classes of
in the caller
of points to
memory accesses and
the perimeter of
the call to
the burden on
the same processor
for each statement
set of benchmarks
the call site
int countequal tree
points to local
to shorter source
read write set
after y localg
head node x
earth mccat compiler
and locality information
lessthan p q
propagate intraprocedural locality
encoded raster image
return f is
home node newnode
given locality context
might be remote
node owner of
language called earth
void f node
advanced versions respectively
locality analysis the
simple reports t
remote calls over
t int lessthan
simple intermediate representation
localized advanced localized
case the checks
simple localized advanced
a pseudo remote
use basic functions
local memory reference
when indirect memory
sub optimal tour
of local pointers
tree encoded raster
the localized and
accesses with respect
locality generated using
of information does
node allocpoint double
more locality in
t simple 100
c3 else int
speedup resulting from
the new locality
localized advanced earth
c vs simple
perimeter this benchmark
int equalnode node
scoped variables are
if expr else
locality information comes
the memory returned
foo int x
shorter source programs
forall loop to
our initial approach
the underlying earth
memory references must
be local and
