parties
party
rsa
primes
bgw
protocol
prime
primality
modulus
private
coalition
shares
secret
mod
trial
exponent
decryption
picks
sharing
dealer
public
modulo
cocks
shamir
privacy
fermat
tn
factorization
zn
division
malicious
1c
integers
probes
signature
revealing
2l
divisible
honest
coe
honestly
security
keys
cients
leaks
rejected
shared
lter
mackenzie
frankel
robust
slowdown
cheat
adversary
quadratic
rst
cient
candidate
gcd
threshold
divides
bits
trusted
moduli
additive
simulator
minority
secure
fiat
encryption
yung
product
gateway
1are
participants
succeeds
eectiveness
learns
um
convinced
beaver
lagrange
polynomials
engage
combiner
pq
enables
exponents
publicly
odd
consequently
pick
random
share
protocols
brie
cryptographic
carol
jointly
restarted
transcript
computes
eld
twisted
factors
rabin
1and
fault
dened
caveat
bit
generation
proactive
curious
leak
signatures
declare
adversaries
fall
hp
entropy
decrypt
alice
polynomial
simulate
guessed
blum
revealed
exposing
modication
dene
divide
bob
subgroup
chinese
residue
wish
reveal
lemma
invert
multiplication
jaimee
1private
2ne
benor
veriable
shamirmyampersandmdash
uncanceled
xuhua
resharing
1jgj
authentication
cryptography
containment
0326
authenticators
1jt
escrowed
debruijn
nieto
sharings
indistinguishable
themselves
sends
obtains
picked
ces
invocations
charge
hardness
distract
additively
mertens
cheated
benaloh
eratosthenes
distinct
jacobi
1b
generating
sieving
tsudik
elgamal
residuosity
tampered
certicate
focs
equality
reconstruct
inversion
yourself
tolerance
nal
collusion
divisibility
unfortunately
jhj
zm
key
trying
the parties
the bgw
the protocol
primality test
party i
each party
k parties
trial division
rsa modulus
an rsa
shares of
party 1
bgw protocol
1 mod
the private
parties can
rsa key
bgw method
distributed primality
private shares
mod e
k 1c
the coalition
two primes
modulus n
protocol is
parties to
our protocol
product of
k sharing
a product
step 4
parties are
shared rsa
of parties
distinct primes
coalition s
additive sharing
shamir secret
picks a
all parties
public exponent
coalition of
order r
n bit
a random
are prime
secret sharing
that n
step 3
b k
fermat test
the primality
robust protocol
1 private
not divisible
exponent e
t out
sharing of
other parties
to party
1 parties
the shares
without revealing
non robust
into case
revealing any
generation of
the integers
private key
in step
p q
mod n
more parties
degree 2l
primes without
trial decryption
three primes
test that
rsa keys
2 z
n is
the factorization
z n
prime factors
of k
any information
divisible by
s view
our non
of tn
private distributed
resulting n
shared generation
q are
a secret
q 1
not divide
2 tn
three parties
party is
distributed computation
of n
k 1
we note
a modulus
a private
generate an
z p
information about
protocol in
primes in
of rsa
primes the
n mod
factorization of
coe cients
random n
prime is
case 4
shares d
rsa signature
rst picks
any minority
simulation argument
prime using
frankel mackenzie
quadratic slowdown
party picks
a fermat
primes however
trusted dealer
decryption exponent
threshold decryption
learns no
lagrange coe
1c private
such integers
out integers
the k
p i
the product
no information
bit integer
the test
k out
shared among
the simulator
an additive
random g
divide q
help an
primes less
parties know
of step
prime p
the trial
and q
unknown factorization
encryption exponent
quadratic extension
r divides
malicious party
minority of
of d
out of
1 computes
of order
linear polynomials
the honest
parties compute
random degree
the modulus
protocol we
protocol can
step 2
i s
is rejected
the dealer
small primes
3 mod
large primes
any coalition
g 62
to lter
2 zn
h case
lter out
the factors
that fall
e cient
to test
fall into
the malicious
62 h
the rsa
random r
mod 4
small p
of two
product of two
the k parties
the bgw protocol
an rsa modulus
out of k
of two primes
a product of
b k 1c
of the protocol
that n is
of k sharing
the bgw method
the private shares
distributed primality test
the protocol is
the coalition s
picks a random
each party i
coalition s view
t out of
is not divisible
1 mod n
of order r
non robust protocol
shares of d
k 1 private
two distinct primes
an additive sharing
into case 4
q are prime
our non robust
generate an rsa
shamir secret sharing
about the private
not divisible by
d 1 1
a t out
factorization of n
the parties can
over the integers
we note that
r d 1
the private key
primes without revealing
k 1 parties
fall into case
sharing of d
party 1 computes
a private distributed
test that n
n is indeed
k sharing of
all other parties
of three primes
private distributed computation
public exponent e
or more parties
order r d
the primality test
factors of n
any information about
is the product
the resulting n
revealing any information
n bit integer
shared rsa keys
not a product
shared generation of
about the factors
parties can generate
does not divide
the product of
know the factorization
shares of the
without revealing any
generation of shared
product of three
of two distinct
between the parties
n is not
information about the
to test that
the factorization of
shared among the
a random n
p and q
in step 3
k out of
distinct primes the
minority of parties
the malicious party
g 62 h
a fermat test
of the primality
party picks a
indeed a product
k 1c private
integers that fall
out integers that
convinced that n
a trusted dealer
shared rsa key
n is rejected
the distributed primality
protocol is restarted
each party picks
62 h case
random n bit
any minority of
log k bits
not divide q
s view the
e 1 mod
random r i
h 2 tn
generate a shared
the trial division
k parties can
that fall into
is k 1
value of r
step 4 of
protocol can be
be a product
i 2 z
an unknown factorization
is b k
contains an element
primes less than
of shared rsa
quadratic extension of
are distinct primes
among the parties
6 1 mod
any coalition of
protocol is k
and the shares
of our protocol
p q are
subset of t
is a product
a random r
the modulus n
two large primes
3 mod 4
of two large
of the private
n is found
the parties to
of the parties
of the coalition
the parties are
no other information
number of parties
sharing of a
by our protocol
to lter out
with an unknown
at the end
smaller than k
a random integer
p q 1
the test fails
and f q
other information about
protocol as described
of step 4
2 z n
it follows that
know that r
communication between the
we know that
the end of
and verify that
end of step
value of n
the above protocol
and q are
is no need
to run the
r i 2
the factors of
b k 1
4 of the
the value of
the simulator is
steps 1 3
we brie y
communication and privacy
bgw protocol in
q 3 mod
rsa key generation
a public exponent
computationally indistinguishable from
leaks the value
i values with
non rsa modulus
rst picks a
unfortunately cocks protocol
factors smaller than
