vhdl
message
passing
pathways
object
eo
pathway
entity
protocol
dispatching
exec_method
messages
signals
sender
concurrent
blocking
objects
oriented
communication
encapsulation
inheritance
concurrency
queues
request
mechanism
message_to_receiver
proposals
send
dispatcher
synchronization
flexibility
inout
objective
dispatch
classification
encapsulated
abstraction
flexible
sending
attributes
invocation
modelled
invoked
polymorphism
edaa
lami
protocols
instantiation
signal
abstract
receiver
modelling
target
synchronous
reuse
hardware
chapter
entities
port
asynchronous
tagged
blocked
functionality
ob
unidirectional
ceiver
dequeued
declared
subclasses
refined
receive
declarations
hdl
exchange
processes
mechanisms
communicating
concepts
reusability
wait
ject
queue
language
extensions
requests
record
rendezvous
yes
visible
encapsulates
maybe
cf
aspects
polymorphic
invoke
caller
interface
instantiations
jects
semantics
nondeterminsim
suave
sychronization
modifiable
subchapters
sythesizable
runt
methodscopyright
synthesizability
extensi
omi
oldenburg
asynchon
lrm
sitency
return_results
barna
intended
buffer
ure
m2
server
m1
concurrently
wide
unlimited
quentialized
20616
haviours
ambivalent
esses
rosenstiel
ceive
expandability
consistency
specialization
resolution
handle
synchronize
mode
vided
bunker
painless
precompiler
structural
distinguished
declaration
incoming
replied
fications
annette
eos
gopalakrishnan
invokes
runtime
fifo
ensured
accept
priority
paradigm
instantiated
predefined
translatable
refinable
vh
lel
mmu
connecting
ports
procedures
necessity
expandable
bilateral
resale
sequentialized
classes
connects
criterion
readiness
promotional
reprint
chapters
straction
proposal
synthesis
sequential
thread
ime
generics
copyrighted
vista
shouldn
exchanged
received
stage
superclasses
duced
dequeue
sally
synonyms
message passing
objective vhdl
passing mechanism
communication pathways
object oriented
to vhdl
communication pathway
the message
class wide
entity object
wide type
target object
a message
an object
oriented extensions
per object
the protocol
the sender
the communication
for message
the entity
of message
the handle
message request
for objective
class message
method call
sender object
resolution functions
queues per
dispatching processes
communication protocol
a communication
an entity
tagged record
design unit
passing is
the object
passing mechanisms
procedure function
vhdl the
classification scheme
object can
the vhdl
the objects
the target
non blocking
object synchronization
method execution
passing will
an eo
vhdl a
synchronization queues
cf chapter
dispatching process
flexibility parallel
be modelled
the messages
be invoked
type class
sending a
large impact
method invocation
object to
encapsulation of
passing has
synchronous asynchronous
vhdl signals
oriented extension
protocol protocol
flexible message
the eo
function call
asynchronous communication
methods per
whole language
the port
data driven
a method
the abstraction
after sending
instantiation of
the dispatching
during runtime
signals can
return values
messages and
parallel methods
one queue
request are
oriented paradigm
protocol and
of messages
the proposals
concurrent access
encapsulated by
type classes
method of
access to
different protocols
the methods
object figure
the connecting
the request
blocked until
the modelling
is blocked
concurrent objects
communication structure
be encapsulated
extensions to
method exec_method
concurrent domain
semi flexible
reusability from
visible outside
passing among
entity encapsulates
attribute class
object flexible
vhdl object
project request
lami proposal
entity class
the lami
by vhdl
pathway to
send method
handle which
or dispatch
unlimited message
dispatcher process
connecting signals
atomic access
method m1
flexible yes
handle can
message_to_receiver class
vhdl will
concurrent methods
2nd stage
inheritance concept
each eo
signal message_to_receiver
eo has
method m2
computational thread
by inheritance
4 2nd
dispatching dispatching
desired method
several aspects
message exchange
the class
communication mechanism
modelling of
the proposed
an abstract
other object
message to
communication the
new design
incoming messages
class can
object by
to buffer
has to
correct method
receiver method
by signals
server object
an own
handle of
driven synchronization
inheritance for
object approach
unidirectional communication
are dequeued
methods completely
method return
given back
same attributes
hardware another
polymorphism on
communication can
passing and
in concurrent
the concurrency
of protocols
is intended
a protocol
the semantics
mechanism 6
blocking mode
sequential to
abstract communication
be blocking
oriented domain
classes representing
buffer messages
message passing mechanism
the message passing
class wide type
of message passing
the target object
object oriented extensions
oriented extensions to
a communication pathway
for objective vhdl
extensions to vhdl
for message passing
procedure function call
the communication pathway
queues per object
of an entity
message passing is
the communication protocol
the object oriented
message passing mechanisms
has the semantics
can be modelled
message passing will
to vhdl the
request are needed
an entity object
object synchronization queues
the sender object
extension to vhdl
aspects of message
methods per object
flexibility parallel methods
synchronization queues per
new design unit
passing will be
per object synchronization
passing mechanism for
a message request
parallel methods per
sending a message
an object oriented
of the message
object oriented extension
message passing has
target object can
flexible message passing
concurrent access to
the class wide
oriented extension to
the other object
signals can be
the class message
the whole language
object has the
method of the
methods of an
object oriented paradigm
several aspects of
a method call
of the entity
blocked until the
of an object
large impact on
the messages and
semantics of a
protocol is not
communication can be
a new design
can be addressed
addressed by the
be addressed by
objects which are
to be invoked
instantiation of a
each eo has
outside the eo
by vhdl signals
the desired method
port which connects
passing a message
protocol the messages
object figure 4
be used 6
passing mechanism proposed
vhdl the lami
the correct method
proposed for objective
atomic access to
the computational thread
an entity class
class message the
computational thread of
method return values
communication of concurrent
visible outside the
the data driven
vhdl will be
the server object
communication pathway to
of objective vhdl
a procedure function
to vhdl object
reuse of protocols
and reusability from
message request is
hold all messages
receiver method m1
signals in object
the handle can
the classes representing
objective vhdl a
message passing among
communication the sender
modelling of messages
data driven synchronization
1 1 relation
a tagged record
protocol protocol protocol
a flexible message
4 2nd stage
desired method of
concurrency and reusability
concept for signals
corresponding method of
encapsulation of an
type class message
attribute class the
per object flexible
are dequeued by
space for message
reusability from sequential
passing mechanism must
class can hold
objective vhdl is
hand the message
sequential to parallel
passing mechanism can
access to signals
in concurrent domain
inheritance concept for
is abstract because
because the entity
the entity encapsulates
the port which
queues to buffer
of communication pathways
the connecting signals
signal message_to_receiver class
chapter 3 3
method of an
figure 4 2nd
for message exchange
the send method
on the vhdl
have large impact
unlimited message buffers
the entity object
blocking the sender
are visible outside
the lami proposal
handle can be
from sequential to
2nd stage this
the semantics of
messages and the
for an object
message passing and
of the request
1 message passing
can continue its
for signals in
the request are
to buffer messages
abstraction levels the
the handle of
a type class
case the sender
class type has
encapsulation of the
can be blocking
of class wide
method call the
mechanism proposed for
one queue per
by the port
of the proposals
until the results
object oriented domain
the same attributes
calling a method
will be distinguished
avoid the loss
of a procedure
a message passing
of the target
of the object
object can be
procedure or function
class wide types
after sending the
to allow this
