chaining
oblivious
vertices
vertex
prefix
2j
priority
cell
superconcentrators
writes
superconcentrator
2k
processors
processor
pram
ackerman
hm
berkman
ragde
label
depth
levelled
labels
cells
edges
vishkin
nonoblivious
undefined
inputs
weak
ea
ni
eb
superconstant
diferent
leftmost
crcw
leaf
ga
edge
sb
parent
bits
fixing
8k
fix
reach
ig
prams
superlinear
root
radhakrishnan
outdegree
boppana
sorting
xb
graphs
reachable
sc
degree
children
wigderson
bounds
solves
circuits
log
alpha
rhs
numbered
perconcentrators
2i0
2kp
e2ey
4kp
retreival
requires8
contiguous
hashing
accessed
leaves
compaction
content
maxima
shall
paths
highest
conjecture
jg
child
generalizers
concentrator
upperbounded
indegrees
jaikumar
randomization
subproblem
levels
concurrent
fortune
innumerable
9p
reads
write
lambdag
loglog
star
pippenger
maxfa
triply
rightmost
inequalities
am
indegree
4i
connectors
2y
circuit
terminates
jhj
illuminating
6k
fich
directed
dolev
dwork
8v
disjoint
summing
importantly
read
proving
submission
created
rewriting
fx
growing
jq
raman
consistent
slowly
lipton
simplifying
longest
randomized
8j
yn
acyclic
lhs
chaudhuri
records
separations
interchanging
showing
settled
contexts
override
labelling
chandra
bit
insightful
parenthesis
tempting
8i
7b
graph
facts
logn
ck
designate
j1
tails
indebted
lemma
memory
7a
path
associate
diverge
ff
contents
2p
governing
inverses
jk
conjectured
ravi
jp
linked
omega
suffices
heads
2i
tight
me
fy
collision
move
picking
packing
carry
chaining problem
prefix graph
the chaining
c 2j
chaining algorithm
prefix graphs
cell vertices
degree vertices
an oblivious
partial input
oblivious algorithms
oblivious chaining
chaining algorithms
n processors
oblivious algorithm
input vertices
through low
a prefix
inputs consistent
processor vertex
weak superconcentrator
ni k
weak superconcentrators
labels on
output vertices
oblivious priority
write step
input vector
writes to
low degree
priority processor
a vertex
lower bound
to hm
input vertex
priority algorithm
berkman and
for chaining
step j
ackerman s
bits set
the label
vertices of
priority pram
ga b
integer sorting
the labels
d i
in o
label of
at step
ff n
level i
t k
n time
of ackerman
processor writes
g a
k l
2 u
s function
each processor
depth 2k
edge created
using ni
all chaining
alpha n
inputs set
any chaining
bound for
the root
and vishkin
processor p
a n
l j
highest priority
high degree
set during
that solve
of inputs
memory cell
x i
degree vertex
cell vertex
simple oblivious
common machine
p writes
a weak
no processor
c r
of cell
input b
j 1
can reach
y j
k steps
from x
step b
restricted domain
hm 1
on priority
priority model
e number
of g
y 4
at most
leftmost one
common model
bounded depth
edge to
graph is
vertices in
to c
o 1
root to
the vertex
for oblivious
of oblivious
the graph
to v
c j
the input
values that
1 time
to y
numbered 0
log y
2k 2
using n
o ff
c k
vertex v
pram algorithm
concurrent write
that writes
vertex disjoint
k n
vertex to
of v
a leaf
each cell
that solves
on common
of edges
v j
p e
consistent with
output vertex
oblivious common
superconcentrator is
superlinear number
in 2k
reach v
2 xb
independently ragde
sb v
contiguous prefix
undefined input
2k steps
superconstant lower
of diferent
recursive star
o alpha
are chaining
processing y
oblivious we
vishkin 4
processor vertices
levelled contiguous
a chaining
ea b
maxima problem
modify b
diferent values
2j 0
fixing each
xb g
label e
vector consistent
a superconstant
j sc
star tree
domain prefix
ragde 16
outdegree 0
memory cells
parallel algorithms
at depth
processors that
at level
path from
the leftmost
of vertices
2 steps
vertex at
graph of
the edge
vertices at
paths from
vertex is
the chaining problem
a prefix graph
g a n
low degree vertices
t k l
through low degree
prefix graph is
an oblivious algorithm
inputs consistent with
ni k n
writes to c
a weak superconcentrator
at step j
highest priority processor
of g a
label of the
the labels on
that can reach
berkman and vishkin
partial input b
solves the chaining
chaining problem in
of bits set
consistent with b
solve the chaining
ff n time
oblivious chaining algorithm
no processor writes
ackerman s function
lower bound for
the label of
be the labels
bound for all
algorithms that solve
of ackerman s
number of inputs
that solve the
using n processors
d i 0
the highest priority
from x i
i 2 u
all chaining algorithms
to c 2j
k n processors
o ff n
of inputs set
using ni k
an oblivious priority
priority pram algorithm
2k 2 p
j m l
m l j
any chaining algorithm
y 0 k
chaining problem is
same memory cell
all inputs consistent
that p writes
of cell vertices
prefix graph of
edge to v
high degree vertex
for all chaining
vertices of g
the edge to
o 1 time
in o 1
from the root
output vertices of
a partial input
the partial input
l j m
leftmost one problem
high degree vertices
p writes to
the input vector
the root to
e number of
reachable from x
the common model
of bounded depth
u and j
in 2 steps
j 2 u
d i j
a lower bound
over all inputs
in k steps
of the edge
a 1 an
in step b
the path to
j d i
l j 1
for all algorithms
1 c k
labels on the
algorithm that runs
from its parent
e be the
the number of
x 1 and
the high degree
2 u and
at a vertex
vertex to the
in d i
we are at
of t k
to hm and
vertex c 2j
created so far
c at step
b as before
vertices or just
x 2 xb
a processor vertex
two values that
superlinear number of
in o alpha
bound for oblivious
x i q
path to hm
hm and hm
the common machine
chaining algorithms whose
prefix graphs of
subproblem in many
size of prefix
tree parallel data
writes to v
v through low
input bits that
of oblivious algorithms
can reach v
if no processor
chaining problem on
chaining algorithm that
2 xb g
bits set during
restricted domain prefix
domain prefix maxima
independently ragde 16
via edges in
edge created is
b at step
every prefix graph
going up to
time on common
recursive star tree
star tree parallel
and vishkin 4
chaining algorithm using
be in cell
levelled contiguous prefix
for v a
a priority algorithm
j starting at
oblivious priority pram
for oblivious algorithms
prefix maxima problem
write step in
algorithms whose graphs
and hm 1
prefix graph g
weak superconcentrator is
alpha n time
prefix graphs and
each processor vertex
processing y j
paths to hm
memory cells in
are chaining algorithms
parallel algorithms exist
processor that writes
priority processor p
an oblivious chaining
algorithm for chaining
whose graphs are
o alpha n
pram with p
of outdegree 0
i through low
a superlinear number
graph of depth
terminates in 2
each cell vertex
oblivious algorithms for
oblivious priority algorithm
fix all the
chaining problem with
level i edge
a superconstant lower
q to y
superconstant lower bound
1 and going
priority algorithm can
simultaneously write to
priority algorithm that
