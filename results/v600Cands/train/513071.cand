signature
stack
trusted
digest
resistant
queue
stacks
secure
item
signatures
queues
rams
oe
collision
pop
protocol
dequeue
integrity
push
adversary
insecure
ram
hostile
init
ideal
cryptographic
digests
incorrect
signing
enqueue
keys
nd
devices
oblivious
confidentiality
device
items
password
invariants
jvm
protocols
cards
signed
front
tm
untrusted
recomputed
attested
keyed
secret
security
card
string
ostensibly
digested
protection
bytecode
interior
authenticated
protecting
appending
java
platform
merkle
returns
page
sharing
request
hashes
tampering
image
schemes
ostrovsky
mobile
rear
threats
dequeued
smart
detected
pre
memory
pushed
host
verification
feasibly
quorum
correctness
claim
pages
certified
correctly
adversaries
delete
signs
fo
virtual
hash
checking
chain
lamport
resistance
computationally
channel
top
bit
argue
queued
command
maintained
checked
fault
2r
resources
removed
commerce
dissipation
mondex
versaries
patible
instrumenters
ucts
idenfication
alia
useage
strewn
memorywas
encased
epoxy
netsocket
tahis
typesafety
unkeyed
pubic
nodes1001000
datastructure
omputing
initializing
public
placing
complications
resource
heat
attacks
specification
transfer
credit
javacard
histor
precomputes
lifo
deterred
spoof
taxes
oakland
attest
necula
balk
hardware
maintains
stored
old
electronic
checker
approves
trees
updates
retains
terminate
powerful
attack
sans
pcmcia
conflated
structures
infeasible
series
implementations
dishonest
forging
accompany
guttag
expen
preimage
retained
head
replays
concert
crypto
typechecking
substance
sand
horning
platforms
lifetime
selects
claims
isolation
claimed
ical
bare
oe r
the stack
digest of
correct digest
nd pre
image resistant
resistant and
signature scheme
ideal stack
t device
stacks and
r init
signature oe
2 nd
collision resistant
the signature
and queues
pre image
trusted memory
is collision
stack protocol
of stacks
the t
of trusted
ideal queue
the queue
the item
data structure
our protocol
signature computations
incorrect stack
stack after
a signature
a pop
our protocols
oe q
an incorrect
h returns
trusted hardware
the digest
item x
a dequeue
a stack
old signature
queue protocol
underlying signature
incorrect queue
our stack
oblivious rams
data structures
integrity of
the oe
signature of
this signature
the ideal
the h
oe front
current stack
trusted software
in trusted
items that
of signature
new signature
java tm
oe i
an item
bit address
item and
the integrity
the trusted
mobile code
queue after
currently on
digests the
hostile platform
trusted host
oe top
operations omega
stack signature
digest oe
secure virtual
resistant we
some series
any series
stack oe
stack operation
for trusted
resource limited
correctly digests
interior nodes
the ram
a push
the adversary
the items
top of
signing the
correctly according
queues on
stacks queues
an ideal
is secure
to h
entire queue
bit string
correctness of
or oe
operations definition
bytecode verification
computationally bounded
main claim
t computes
a correct
signature is
new item
oe x
oe 0
queue and
stack and
for protecting
one which
appending the
been removed
which after
be detected
digital signature
0 r
these devices
definition 8
of operations
and pop
push and
stack or
by appending
upon a
returns a
substitute another
n trusted
t operates
t devices
random signs
attested by
item currently
stream integrity
structure operations
with insecure
line mode
rams efficient
coverage claims
merkle signature
stack instance
removed r
trees 12
collision computation
a digested
signing key
when signed
signatures oe
limited secure
insecure memory
secure stacks
dequeue request
x request
authenticated channel
stack t
n signature
works according
stored oe
theoretic bounds
updating keys
certified digital
on merkle
initialized digest
current signature
stack x
mode previous
t generates
initializing value
cannot feasibly
platform maintains
feasibly substitute
init 2r
t correctly
tm virtual
string formed
cryptographic hash
with initializing
bad signature
digested form
computation resistant
front t
init trusted
analysis products
resistant signature
t retains
collision resistance
potentially hostile
ostensibly at
selects random
signature trees
secure ram
resistant and 2
and 2 nd
2 nd pre
nd pre image
pre image resistant
stacks and queues
correct digest of
collision resistant and
of the stack
the ideal stack
is collision resistant
the t device
a correct digest
the data structure
of stacks and
the items that
oe 0 r
ideal stack after
the stack protocol
an incorrect stack
the correct digest
digest of the
digest of a
of the ideal
items that have
signature of the
an incorrect queue
ideal queue after
the oe r
after the operations
the underlying signature
underlying signature scheme
scheme is collision
signature oe i
of an ideal
signature scheme is
the signature scheme
and oe r
the integrity of
in the t
of the queue
currently on the
all the items
of a stack
of signature computations
incorrect stack operation
digests the ideal
n bit address
stack after the
an ideal queue
any series of
after some series
an ideal stack
integrity of stacks
work 4 5
oe r init
then an incorrect
the h returns
a t device
secure virtual memory
bit address space
the oe q
assume the adversary
of trusted memory
correctly digests the
the old signature
some series of
the ideal queue
image resistant we
signing the string
oe i 1
the current stack
in the trusted
the main claim
specified by definition
correctly according to
which after some
number of signature
by appending the
item and the
an item x
the entire queue
a new signature
the new item
of data structures
oe r which
by definition 8
item x and
queue after the
the interior nodes
push and pop
the top of
t and h
on the interior
the correctness of
returns a value
we assume a
at the front
we assume the
be at the
of our protocol
for each operation
message stream integrity
we assume oe
the queue protocol
image resistant signature
above we execute
of trusted hardware
be detected via
cryptographic verification of
protocol and b
mode previous approaches
digest of an
current stack instance
maintains the correct
define an incorrect
the t correctly
omega into oe
our protocols section
new signature oe
in t providing
resource limited secure
the stack oe
or oe r
checker in a
ostensibly at the
detected whenever it
one which after
terminate the current
merkle signature trees
on a dequeue
stack x and
secure if an
x or oe
on line mode
of test coverage
protocol is illustrated
operations omega into
formed by appending
transfer only o
and simulation by
the current signature
to the digest
assume oe x
stack protocol is
earlier work 4
substitute another x
transfer for each
theoretic bounds we
and transfer only
the string formed
series of returns
proof checker in
instances of data
n signature computations
h is asked
therefore an incorrect
random signs it
protocols are much
n data transfer
protocol is secure
oe r to
h is expected
trusted software engineering
feasibly substitute another
hostile platform maintains
series of our
techniques for trusted
it and sends
in trusted memory
recomputed and checked
of returns a
1 evaluation we
that have ever
for h to
sharing data structures
r init trusted
h cannot feasibly
r therefore an
based is collision
the trusted computer
amount of trusted
string formed by
signature oe r
t correctly digests
works according the
oblivious rams efficient
stores the correct
when a pop
trusted computer and
the stack x
log n trusted
insecure memory array
collision computation resistant
signatures oe q
pop the h
based on merkle
line mode previous
have ever been
always maintains the
