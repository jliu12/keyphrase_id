powerlist
powerlists
fdefinition
phi
rev
deconstruction
ps
batcher
inv
fft
ift
bm
prefix
zip
fourier
ep
sps
singleton
sorting
bi
scalars
scalar
lf
bitonic
hypercube
sorted
ffl3
lf1
ffl5
ffl6
ffl0
ffl1
ladner
items
law
gray
induction
ffrom
ffl4
deconstructions
ffl7
ffl2
lists
tie
hypercubes
laws
steele
pointwise
conquer
deconstruct
adams
fischer
fapply
hhci
fapplying
erlist
hbii
ruleg
finductiong
l2
structural
miranda
constructors
rr
rotates
operator
nonsingleton
kornerup
finduction
dimension
transform
transposition
l3
rs
commute
adder
depth
logarithmic
hxi
bit
recursion
merge
correctness
indices
sublist
array
list
b4
permutation
ls
matrices
ml
infix
pow
ftg
arrays
len
hhhai
l2g
hdiii
lf3
lf2
revg
hyi
gorlatch
bmg
epg
invg
lf4
c1
l0
reverses
operators
recursive
index
b3
liberated
grr
deconstructed
hhxii
inv1
algebraic
manipulations
shuffle
qg
strings
embedding
backus
unnested
b5
nesl
vuillemin
mou
rl
hx
skeletons
powers
zp
l1
succinct
rotate
ascending
item
kapur
lexicographically
inverses
b2
circuit
divide
duals
commutativity
compactness
preparata
red
parallelism
th
blelloch
style
lisp
ramachandran
fusing
matrix
employing
shape
sequential
jr
processors
a2
describing
brackets
element
inductive
di
principal
commutes
unknowns
misra
highest
aggregates
circuits
argument
concatenation
base
versatile
cube
nested
c3
lookahead
proofs
lowest
permute
numbered
de
listsg
explotied
9111912
coeeficients
birge
susanna
quartering
a powerlist
powerlist of
the powerlist
fdefinition of
prefix sum
p q
powerlist is
linear lists
powerlist p
structural induction
fourier transform
gray code
logarithmic length
ps p
ps l
u v
batcher merge
powerlists are
singleton powerlist
of powerlists
phi p
by structural
element of
q phi
highest bit
linear list
scalar function
parallel algorithms
a scalar
fast fourier
powerlist notation
j rev
each element
phi q
lowest bit
parallel steps
tie and
our theory
definition of
non singleton
the list
principal root
ffl7 ffl6
red phi
similar powerlists
ffl6 ffl5
function rev
two powerlists
singleton list
using powerlists
ffl2 ffl1
fft p
the powerlists
ladner fischer
ffl4 ffl3
ffl3 ffl2
ffl5 ffl4
pointwise application
fischer scheme
th principal
powerlists of
the logarithmic
operator phi
p j
p phi
a singleton
of fft
a list
and conquer
divide and
the prefix
sorting networks
and zip
code sequence
data parallel
length of
items of
same length
w n
correctness of
the fft
phi to
j and
the function
the definition
scalars are
r phi
the elements
argument powerlists
function bi
both parallelism
sorted powerlist
function lf
ffl0 ffl0
powerlists the
list obtained
dual deconstruction
lists p
of ftg
argument powerlist
deconstruct a
q sorted
law l2
rev reverses
powerlist the
adder circuits
on powerlists
powerlist u
over powerlists
lf p
powerlist and
ffl1 ffl7
rs ls
of sps
ml 17
powerlist by
rev q
about sorting
pow erlist
of ift
standard gray
finduction on
unique deconstruction
of length
parallel computations
u j
the argument
binary operator
the recursive
the length
higher dimensional
are inverses
permutation function
of inv
c di
list theory
bi p
construction operators
evaluating p
length 1
is sorted
of p
the fast
empty list
elements of
the correctness
elements are
n bit
f 0
steps using
o m
de and
infix operator
of big
that bi
inv is
right by
two lists
an array
dimensional arrays
from c1
using de
parallel computing
following function
the sublist
steele jr
argument list
for prefix
inductive proofs
in exactly
of j
for parallel
p l
cube connected
by applying
using o
2 n
e phi
scalar functions
of scalars
0 phi
induction base
bitonic sort
any element
j q
whose elements
both j
algebraic manipulations
the operator
in parallel
j v
list is
and recursion
prefix computation
are similar
1 containing
operations on
bit of
a matrix
p at
a powerlist of
of a powerlist
powerlist of length
a powerlist is
the logarithmic length
by structural induction
a powerlist p
logarithmic length of
ps p q
fast fourier transform
the powerlist notation
q phi p
the prefix sum
a scalar function
each element of
the highest bit
gray code sequence
the definition of
powerlist of the
principal root of
is the powerlist
ffl4 ffl3 ffl2
th principal root
by a powerlist
a non singleton
ffl3 ffl2 ffl1
ffl6 ffl5 ffl4
tie and zip
is a powerlist
powerlist is a
scalar function f
ladner fischer scheme
ffl5 ffl4 ffl3
the lowest bit
ffl7 ffl6 ffl5
the fast fourier
divide and conquer
length of p
root of 1
to each element
u j v
in our theory
proof by structural
the same length
the elements of
is the logarithmic
p j q
of the argument
in exactly one
differ in exactly
correctness of sps
structural induction base
evaluating p at
ffl2 ffl1 ffl7
is the sublist
for a powerlist
list obtained by
the function lf
length 1 containing
p a powerlist
o m processors
the argument powerlist
ffl1 ffl7 ffl6
both parallelism and
powerlist of depth
of linear lists
adder circuits using
fdefinition of big
b c di
the function bi
j rev q
right by one
p j rev
non singleton powerlist
parallelism and recursion
to a powerlist
the linear list
as a powerlist
lists p q
standard gray code
linear list theory
a singleton powerlist
the length of
the right by
0 phi x
lowest bit of
linear lists of
steps using o
p phi q
parallel steps using
of the list
can be defined
any element of
the correctness of
the cube connected
higher dimensional arrays
the operator phi
a linear list
prefix sum of
p q can
n parallel steps
the following function
of length 1
as the highest
w n is
whose elements are
of the index
0 as the
exactly one bit
of w n
index to the
both j and
element of p
the empty list
power of 2
an index to
is the length
p and q
is a list
prove the result
p q we
same length as
a power of
bit of the
the last line
s and 1
be computed in
element of the
and 1 s
can be computed
1 containing a
is deconstructed into
resulting list is
binary operator op
the function rev
b4 z bi
the primary operator
powerlist is the
sorting schemes and
dual deconstruction for
into two lists
within angular brackets
transform and batcher
singleton powerlist p
using de and
fft p q
powerlist p is
1 g using
containing 0 s
prefix sum is
merged by applying
the powerlist obtained
describing parallel algorithms
code sequence for
the argument powerlists
s bm u
code sequences for
or u j
powerlist of c
j rev v
operations on scalars
m sequential steps
using law l2g
the powerlist h
index is 0
s sorting schemes
of revg fdefinition
hbii hhci hdiii
the outer powerlist
processor i holds
over linear lists
revg fdefinition of
fdefinition of ftg
rev reverses a
the powerlist formed
powerlist obtained by
on aggregates of
sublist of elements
r bm v
programming be liberated
a powerlist by
be a powerlist
singleton list of
returns a sorted
functions over powerlists
fdefinition of revg
sequential steps or
the powerlist has
the ladner fischer
fdefinition of j
the function bm
powerlists of the
powerlists it is
o 1 parallel
backus 2 and
two deconstructions apply
fischer scheme is
facts about sorting
q is sorted
the pair depth
