specializer
sint
binding
improver
jones
spec
specializers
bti
interpreter
evaluator
ine
specialization
jopt
specializing
interpreters
sect
optimality
thm
residual
polyvariant
self
myspec
futamura
matcher
interpretive
improvements
static
evaluators
improvers
erent
rhs
def
online
mysint
programs
sd
di
cient
implication
naive
intn
renaming
transformers
specialized
functionally
ciency
quantification
kmp
translator
triviality
transformations
specialize
bootstrapping
defs
onpe
partial
universal
composition
triv
metasystem
inherited
routinely
division
projection
1st
tells
expression
compiler
preter
specializa
matchers
deforestation
transformation
gen
im
similix
instrumented
trivial
niels
christensen
theorems
typed
prover
improving
arguments
suits
strength
hierarchies
coined
pattern
realistic
expressions
source
ect
overcome
preprocessor
precompute
languages
specializes
compilation
semantics
generating
optimizing
translation
language
fragments
target
tag
su
translative
optimizingthetheoreticalcon
daejeon
jonesoptimality
yukiyoshi
onkov
buly
provements
retyping
kameyama
opti
singularity
limits
powerful
projections
infinite
pe
lisp
prop
program
copy
d1
sumii
supercompiler
asai
abramov
adaptions
mality
eijiro
dynamizing
beyond
unspecified
reduction
dn
weaker
proves
equivalence
limitations
mechanics
numerous
ingenuity
monovariant
supercompilation
fcl
internalizes
answered
parsing
suitable
originally
produced
lazy
termination
kenichi
jections
glck
siau
underlines
myampersandohgr
transla
mix
strongly
preserving
generators
luck
translators
rearrangements
argument
interpretation
2nd
easing
plemented
expansion
translating
anecdotal
sergei
towers
stand
elimination
improvement
mizations
handy
mikhail
evalu
argu
erently
mono
khoo
justified
pairwise
matter
transformer
binding time
jones optimal
a specializer
self interpreter
time improver
jones optimality
o ine
ine partial
time improvements
partial evaluator
static expression
expression reduction
spec 1
a binding
spec 2
jopt spec
residual programs
partial evaluation
specializer spec
sint 1
the specializer
residual program
self interpreters
not jones
a self
source program
specializer is
sint 3
is jones
the binding
optimal specializer
program p
online partial
sint 2
sint i
by specializing
a jones
time improving
naive pattern
interpreter sint
that jopt
beyond renaming
specializer with
specializing a
thm 1
pattern matcher
with static
static expressions
the interpretive
l program
spec sint
specializer this
1 sint
improving programs
and sint
time improvement
partial evaluators
the rhs
an o
specializer that
rhs of
di erent
optimality is
specialized with
erent beyond
suitable binding
futamura projection
specialization method
interpreters and
optimal specializers
a program
generating extension
let spec
optimal specialization
evaluator can
of binding
the residual
program e
interpretive approach
time improved
def 6
of thm
division sd
time im
let bti
2 sint
specializer to
time improvers
and specializers
gen p
let sint
bti be
specializer and
that spec
i sint
all specializers
reduces static
sint sint
an l
spec is
spec i
thm 2
the implication
target program
a source
on jones
program r
is specialized
improvements and
functionally equivalent
by partial
source programs
an online
infinite number
spec spec
the specialization
of self
interpreter for
of static
for binding
general construction
an interpreter
bti is
l interpreter
optimal cannot
for sint
ine specializer
quantification spec
polyvariant expansion
specializers that
3 jones
of specializers
1st futamura
sint such
evaluator with
specializer which
specializers the
that jones
specializer was
trivial specializer
be jones
improver as
sint be
the futamura
specializer projection
combining semantics
sint is
2 jones
interpreter such
instrumented self
r produced
specializer for
by sint
numerous binding
improver and
im prover
specializers are
pair spec
term binding
specializing the
a residual
program q
e ciency
for strongly
typed languages
a suitable
three techniques
sect 3
a generating
interpreter and
program generation
the self
program transformers
inherited limits
target programs
spec 0
tag elimination
routinely used
best observed
of jones
strongly typed
of programs
a naive
in sect
pre transformation
partially static
polyvariant binding
a translator
of residual
us that
cient for
semantics preserving
applicable partial
sense than
interpreter a
to binding
non triviality
define any
self applicable
of interpreters
binding time improvements
binding time improver
o ine partial
a self interpreter
ine partial evaluator
a binding time
static expression reduction
an o ine
the binding time
with static expression
not jones optimal
is jones optimal
online partial evaluator
is not jones
jones optimal specializer
jones optimality is
a jones optimal
binding time improving
a source program
binding time improvement
of a specializer
that jopt spec
self interpreter sint
specializer with static
naive pattern matcher
a specializer is
time improving programs
an online partial
of binding time
the residual program
the rhs of
rhs of the
specialized with respect
by specializing a
a specializer spec
optimal specializer with
partial evaluator can
sint 1 and
jones optimal for
an l program
suitable binding time
di erent beyond
specializer that is
program e ciency
a suitable binding
the interpretive approach
spec 1 sint
a naive pattern
jopt spec 1
jones optimal specializers
time improvements and
a specializer that
residual program e
such that jopt
erent beyond renaming
of the implication
jones optimal specialization
binding time improved
a residual program
by partial evaluation
of a self
that a specializer
let bti be
ine partial evaluation
is a specializer
static expressions and
jopt spec sint
specializing a self
reduces static expressions
specializer spec 1
binding time improvers
source program p
interpreters and specializers
binding time im
a generating extension
for binding time
is specialized with
each source program
the residual programs
self interpreter for
an infinite number
infinite number of
for strongly typed
proof of thm
with respect to
program p and
partial evaluation and
of the binding
strongly typed languages
the specialization of
the target program
than a specializer
definitions of interpreters
self interpreter such
kind of non
are routinely used
a specializer which
time improvements can
1 sint 1
instrumented self interpreter
jones optimal cannot
the term binding
to be jones
flow of static
be a specializer
a specializer for
for o ine
jopt spec 2
sint such that
be a binding
partial evaluator with
a specializer and
weaker than a
bti is a
r produced by
question whether an
time im prover
interpreter such that
residual programs by
o ine specializer
that jones optimality
specializer which is
for all specializers
bti be a
define any number
the specializer is
powerful as an
3 jones optimality
2 sint 2
time improver as
of self interpreters
self interpreters for
techniques for binding
an instrumented self
numerous binding time
be as powerful
time improver and
1st futamura projection
evaluator can be
program by specializing
and sint 2
of non triviality
spec 2 sint
self interpreter and
jones optimal this
of interpreters and
and a division
term binding time
be jones optimal
to a source
binding time analysis
proves the theorem
respect to x
written in language
time improvements are
the self interpreter
this relation holds
optimal specialization for
some sense than
whether an o
residual programs that
and jones optimality
to binding time
is a self
tells us that
three techniques for
the source programs
a self applicable
polyvariant binding time
as an online
standard definitions of
strictly weaker than
is a binding
applicable partial evaluator
as e cient
self applicable partial
number of self
better in some
e ciency of
programs that are
of static data
in the rhs
the general construction
overcome the limitations
the same residual
can be as
exists an infinite
and partial evaluation
relation holds for
a certain kind
number of programs
certain kind of
in sect 3
this proves the
partial evaluation of
of a source
the literature e
as powerful as
su cient for
be a program
