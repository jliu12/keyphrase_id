phpf
hpf
spmdizer
fortran
compiler
scalarizer
communication
optimizations
loop
guards
iown
array
ncar
redundant
compiling
x42
mpl
processors
scalar
grid
nest
parallelism
90
ibm
compile
arrays
loops
shift
privatized
benchmark
partitioning
mellor
crummey
alignment
locality
scalars
permutable
spmdized
ubound
multicomputers
vectorization
collective
temporaries
communicated
lbound
adaptor
directives
compilation
compilers
uniprocessor
dependence
align
90d
scalarized
prithviraj
77
sigplan
processor
preprocessors
spread
moved
blocksize
midkiff
shenoy
grain
spmd
tomcatv
idiom
movement
aligned
speedups
kennedy
producer
programs
shallow
banerjee
dimensions
shrunk
rhs
reference
sccs
choudhary
pid
min0
nagaraj
fronting
schnbrg
numprocs
wavefronting
optimizer
consumer
residuals
dimension
coalescing
manish
optimizing
water
ken
schonberg
idm
block
directive
symbolic
owner
buffer
statically
allocate
guard
message
sp2
stencil
eigenmann
deitz
wave
references
neighbor
watson
costs
mimd
refs
edith
temporary
inner
outside
coarse
supercomputing
nearest
00
identifies
1251
supports
elimination
library
static
rudolf
chamberlain
bradford
machines
alok
transformer
messages
snyder
cb
native
lawrence
elim
ramanujam
speedup
statement
lining
chakrabarti
vikram
statements
adve
704
augmenting
irregular
languages
remapping
inside
gerald
unknown
inhibit
comm
broadcast
cyclic
tiled
notices
kandemir
gupta
replication
parallelization
samuel
performs
roth
runtime
inlining
communications
nests
paradigm
shrinks
pipeline
pipelined
cdrom
joefon
fogaccia
denolf
chavarra
briguglio
hoeflinger
farreras
1v7
ayon
dhruva
montse
fmgupta
yili
cmslow
basumallik
takemyampersandmdash
fortran 90
the spmdizer
redundant communication
computation partitioning
communication for
the scalarizer
phpf is
loop distribution
communication analysis
shift communication
processor grid
i loop
the compiler
hpf programs
the hpf
performance fortran
fortran 77
call hpf
the phpf
the communication
of processors
compile time
loop nest
message vectorization
moved outside
compiler for
90 array
hpf directives
optimizations like
77 programs
run time
at compile
distributed memory
array language
1 j
symbolic analysis
b i
grid dimensions
ncar shallow
locality optimizer
producer reference
hpf allocate
dimensional shift
mpl version
consumer reference
phpf uses
data movement
hpf compiler
1 00
1 do
do figure
block block
do do
paradigm compiler
i 1
collective communication
hpf compilers
data partitioning
communication costs
for hpf
00 1
the scalar
for b
do i
scalar variables
local iteration
john mellor
optimizing communication
mellor crummey
acm sigplan
shallow water
reduction operation
each processor
spread program
mapping scalar
statically unknown
idiom recognition
using collective
phpf compiler
phpf performs
iown lbound
iown ubound
array temporaries
communication elimination
fully permutable
shift communications
computation buffer
statement guards
be moved
an hpf
time library
high performance
11 23
coarse grain
for distributed
the benchmark
the loop
of redundant
arrays are
grid dimension
fortran 90d
data parallel
second dimension
communication and
fortran d
100 1
ken kennedy
a i
like message
pipelined communication
prithviraj banerjee
communication schedules
the program
d i
memory multicomputers
the paradigm
also performs
inner loop
nearest neighbor
processors is
parallel machines
of communication
address space
communication optimizations
d distribution
communication code
a consumer
ffl the
loop bounds
speedups of
and processors
global reduction
scalar value
to fortran
neighbor communication
fortran hpf
array dimensions
outside the
the ibm
efficient code
manish gupta
the residuals
the owner
inside the
the fortran
multi dimensional
these optimizations
of scalars
local array
movement for
eliminate redundant
global address
aligned with
array bounds
high level
processors the
bounds of
the spmd
known at
unknown at
static single
on supercomputing
ibm com
j 1
block distribution
data parallelism
reduce communication
data and
is aligned
loop transformation
le 99
9 phpf
send section
dimension phpf
pipeline parallelism
gupta edith
message coalescing
phpf was
of phpf
existing fortran
loop traversing
choudhary prithviraj
performs optimizations
neighbor shift
phpf also
unified data
grain wavefronting
performs special
local reduction
supports block
by phpf
spread operation
99 blocksize
align d
rhs reference
sp series
align i
time phpf
redundancy elim
hpf spmdizer
for b i
i 1 j
b i 1
the i loop
number of processors
high performance fortran
moved outside the
the communication for
at compile time
fortran 77 programs
fortran 90 array
1 00 1
multi dimensional shift
of the spmdizer
100 1 do
ncar shallow water
communication for b
of redundant communication
the paradigm compiler
compiler for the
hpf compiler for
1 j 1
of processors is
can be moved
john mellor crummey
an hpf compiler
run time library
for the ibm
communication for the
speedups of the
the second dimension
eliminate redundant communication
outside the i
processor grid dimension
1 100 1
using collective communication
reduce communication costs
inside the i
the phpf compiler
mpl version 1
the locality optimizer
version 1 00
in its computation
a consumer reference
mapping scalar variables
like message vectorization
call hpf allocate
redundant communication elimination
90 array language
known at compile
for distributed memory
1 do do
distribution of array
for optimizing communication
dependence information to
a i 1
distributed memory multicomputers
be moved outside
do do figure
of array dimensions
a global reduction
i 1 do
framework for optimizing
nearest neighbor communication
the arrays are
data movement for
the bounds of
global address space
performance fortran hpf
processors is not
to eliminate redundant
unknown at compile
d i 2
conference on supercomputing
to run time
is aligned with
the data movement
static single assignment
not known at
a i j
inside the loop
for data parallel
the loop nest
of parallel programming
for the reference
by e mail
15 18 our
gupta edith schonberg
communication using data
movement for b
sequential fortran 77
unified data flow
synthesis of communication
uses symbolic analysis
a unified data
77 programs and
communication analysis and
11 23 17
communication on multicomputers
with redundancy elim
ncar block block
loop traversing the
dimensional shift communication
i j align
manish gupta edith
analysis and loop
shift communications we
data and processors
align d i
with a consumer
the benchmark version
coarse grain wave
data availability analysis
scalar variables in
of optimizations performed
existing fortran 90
alok choudhary prithviraj
compilation approach for
permutable loop nest
approach for fortran
an existing fortran
improved by ffl
by the spmdizer
processor grid dimensions
statically unknown parameters
choudhary prithviraj banerjee
optimizations like message
min0 iown ubound
communication for d
90d hpf compilers
the scalar value
fortran 90 programs
nearest neighbor shift
with hpf directives
17 19 3
of the phpf
the hpf subset
reached by e
redundant communication using
a compilation approach
using data availability
array language and
grain wave fronting
stencil program that
dimensional shift communications
fortran hpf programs
block 1 00
23 17 19
optimization to eliminate
the grid program
for fortran 90d
ibm sp series
communication in d
the uniprocessor program
from fortran 90
mapping of scalars
le 99 blocksize
reference i e
be unknown at
with a producer
augmenting the data
for mapping scalar
sp series parallel
a producer reference
the local reduction
dependence analyzer loop
coarse grain wavefronting
parallelism from fortran
communication code generation
inner loop communication
unknown parameters like
analyzer loop transformer
of compiling hpf
series parallel machines
on the uniprocessor
by computation partitioning
align i with
block block 1
neighbor shift communication
array dimension with
fully permutable loop
eliminating redundant communication
idm in the
compilers for hpf
practice of parallel
the reference to
i 1 n
the number of
of the residuals
proceedings of the
i with a
acm sigplan symposium
reference to a
sigplan symposium on
the run time
symposium on principles
static parameter based
outside of loops
prediction tool for
global reduction operation
