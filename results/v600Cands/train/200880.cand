checker
checkers
isomorphism
prover
lfmis
nc
gh
supposedly
verifier
buggy
beigel
fdp
rank
gcd
gi
fsp
sorting
checking
ip
permutation
interactive
oracle
coin
polynomial
generators
group
isomorphic
rubinfeld
yes
primes
edp
collberg
instances
oh
theoretic
factorization
log
mg
intersection
probability
probabilistic
egi
reductions
reducible
endfor
hash
esp
correctness
heads
gutfreund
bucket
groups
toss
goldwasser
proofs
checks
checked
shaltiel
adleman
testing
outputs
random
equivalence
multiset
convinced
kn
tse
blum
micali
ab
thirty
self
mh
check
coefficient
bug
subgroup
wrong
bugs
randomness
multiplication
merlin
coins
certifies
kobourov
np
running
canonical
halts
arthur
tape
subtract
kannan
lipton
prime
checkable
ronen
cep
valentine
kabanets
answers
helping
fp
um
matrix
kompella
shafi
karp
ninth
sigsoft
permutations
russell
programs
ronitt
derandomizing
sigcse
sums
charged
christian
reducibility
pram
multioracle
impagliazzo
shma
rackoff
gf
tails
robustness
fixes
protocol
westbrook
hamlet
vectors
integers
incoherent
suzanne
luby
says
combinations
mod
tamper
dick
tossing
wegman
amnon
vadhan
factoring
jg
salil
factorizations
escaping
rabin
columns
basis
proving
whatsoever
multisets
polynomially
theorems
answer
automorphism
confidence
games
circuit
sporadic
oe
carter
robust
fair
bulletin
correct
program
dan
diego
zhi
annual
decision
verification
assurance
inputs
divisor
lemma
designing
declares
adequacy
compositions
ram
ta
counting
membership
incorrect
cook
deterministic
buckets
lexicographically
zhiquan
woit
luks
davin
bugginess
the checker
checker for
checkers for
program checker
graph isomorphism
the program
group intersection
a checker
checker c
program checkers
log a
interactive proof
the prover
polynomial time
running time
in gh
g h
a program
program checking
beigel s
theoretic problems
group theoretic
function restricted
the verifier
a random
program p
self reduction
checker is
restricted ip
for group
if p
random basis
little oh
the lfmis
have checkers
c p
the running
efficient program
in nc
the group
search problem
canonical element
complexity functions
equivalence search
nc checker
matrix rank
time complexity
complexity class
is correct
being checked
p complete
in polynomial
p 2
full rank
proof system
linear combination
proof systems
of full
intersection problem
program being
method 2
p g
complete problems
p gi
strong generators
complexity function
outputs correct
is supposedly
to check
checkers in
not isomorphic
isomorphic to
to h
random linear
of program
n log
s theorem
g and
if heads
of beigel
hash function
program is
the equivalence
r matrix
in f
of problems
reducible to
correct on
2 k
o n
of g
on theory
transformation f
extended gcd
for graph
time of
element of
and h
with probability
programs that
random element
primes in
toss a
halts on
an nc
of mg
of groups
o 1
instances of
compute if
linear combinations
probability of
the rank
problems in
interactive proofs
fair coin
input two
lipton 29
oh property
of mh
efficient checkers
supposedly of
nc checkers
jg b
co function
gh 1
a jg
prover sends
our checker
be buggy
prover must
mostly correct
checkers and
time checker
h then
in fp
the correctness
method 1
v i
p 1
on z
kn 2
check that
random permutation
2 g
in g
ip protocol
isomorphism is
the gcd
dan gutfreund
esp s
return correct
no bugs
checker has
checker 6
h tse
g mod
acm symposium
x r
probabilistic algorithms
o kn
check the
runs in
decision problem
a basis
the thirty
circuit lower
words long
h no
zero coefficient
ronen shaltiel
group representation
on u
annual acm
the output
then with
for 1
for f
complexity v
correct this
subgroup of
correctness of
proofs of
software engineering
any program
all p
designing programs
k random
time equivalent
random self
v j
mod p
is wrong
an isomorphism
g 0
6 3
we subtract
check their
a probability
f 1
of the checker
the checker for
running time of
if p g
isomorphic to h
program checkers for
beigel s theorem
element of g
function restricted ip
group theoretic problems
a checker for
the running time
for group intersection
program being checked
p g h
program checker c
efficient program checker
1 2 k
of full rank
n log a
g and h
for graph isomorphism
interactive proof system
in polynomial time
x r matrix
have checkers in
the checker c
the equivalence search
checker for 2
group intersection problem
then c p
checker for 1
f 1 2
of g h
dependent on u
of program checking
to h then
the program being
all p complete
an efficient program
p complete problems
the checker is
of the program
that the program
for group theoretic
problems have checkers
c p gi
which is supposedly
an nc checker
equivalence search problem
into a checker
checkers in nc
a program checker
range 0 a
on all instances
a random basis
correct if p
toss a fair
r x r
is correct on
is not isomorphic
of beigel s
log log a
the transformation f
time complexity class
a time complexity
symposium on theory
theory of computing
on theory of
interactive proof systems
halts on all
the graph isomorphism
a gamma1 a
g is isomorphic
reducible to each
not isomorphic to
problems in p
graph isomorphism is
model of computation
linear combination of
random element of
a random element
f 2 1
time of the
a program p
acm symposium on
a fair coin
o kn 2
annual acm symposium
a random permutation
computational complexity v
co function restricted
the checker has
problems in fp
has no bugs
to be buggy
in the lfmis
supposedly of full
interval 1 3
g mod p
complexity function for
a jg b
checker c 1
esp s g
fair coin if
program is correct
in gh 1
little oh property
efficient checkers for
program it checks
of strong generators
complexity class the
nc checkers for
is supposedly of
delta log m
program checkers and
polynomial time checker
is in gh
checkers for group
k linear combinations
an r x
the program checker
time complexity functions
outputs correct if
the prover sends
the group intersection
membership in g
a g mod
self reduction we
row of mh
program is bad
h then c
time complexity function
but g is
a probability of
if p has
to check the
the program is
1 in f
random linear combinations
polynomial time equivalent
of program checkers
complete problems have
correctness of p
t h tse
checker for the
by self reduction
that the checker
circuit lower bounds
combination of u
form a basis
of the thirty
n 2 a
a random vector
the v i
then with probability
all instances of
g 2 g
non zero coefficient
programs that check
random self reducibility
p 2 on
an interactive proof
gamma1 a 0
check their work
designing programs that
of p 2
that a program
the point 1
notion of program
call to p
that check their
g and b
of problems such
ninth annual acm
is correct this
proof system for
number of words
of computing june
if the program
a program for
graphs g and
log o 1
p has no
o n log
if n 2
is isomorphic to
of a and
lemma lemma 6
o 1 2
random access memory
the correctness of
g is not
o 1 n
probability of 1
has a probability
with probability at
the output of
to check that
to the program
