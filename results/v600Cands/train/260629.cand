benchmark
module
robustness
ascm
crashme
benchmarks
unix
file
crash
modules
tests
unexpected
operating
modular
suite
sacrificial
extensibility
hierarchical
mach
object
fault
restart
repeatability
benchmarking
i486
outcome
stimuli
routine
int
hierarchically
severity
hierarchy
warm
storage
termination
success
resource
cold
terminations
bad
interface
injection
localization
terminated
mode
watchdog
buffer
coverage
stimulation
testing
miller90
serendipity
suh93
crashes
read
faults
randomness
suites
deallocate
virtual
triggering
efforts
outcomes
extensible
buf
allocate
abstract
invalid
utilities
tested
logging
inheriting
multithreaded
multithreading
namespace
obj
comparability
coded
cmu
synthetic
classifications
reflect
evaluations
applicable
252
repeatable
uncontained
mk82
dingman93
interfaces
char
owned
abstracted
randomized
routines
resultant
rt
210
portability
pregenerated
dhrystone
consistency
stimulus
interfacing
failed
unbuffered
classed
portable
monitoring
void
byte
embodies
public
reporting
failure
desirable
developers
measuring
calls
structured
microkernel
incorrectness
error
workload
necessitated
similarities
kernel
ability
passed
detected
analyses
classification
stimulate
effort
subclasses
inherits
multitasking
supervisor
classes
len
taxonomies
spawns
isolated
correct
solely
processes
affected
theta
writing
manipulates
misclassified
deleted
aware
return
machines
exercise
stimulating
1024
abstraction
elect
dependability
256
promises
advent
organization
opened
override
platforms
events
thereby
reliability
ibm
across
serve
approx
serves
affecting
generator
comparable
external
errors
disagree
emulate
code
restarts
declared
herein
schedulers
robust
late
hardware
affect
objects
overcomes
adversely
ancestors
development
kanawati92
russinovich92
spec90
storage object
module specific
of robustness
unexpected error
the ascm
a benchmark
bad success
the benchmark
robustness benchmark
operating system
file object
system modules
specific routine
robustness benchmarks
the module
result processing
unexpected termination
modular benchmarks
the test
unix like
the operating
system module
test specific
theta theta
system robustness
a robustness
hierarchically structured
robustness tests
read file
the robustness
benchmark suite
sacrificial program
cold restart
benchmark of
hierarchical benchmark
warm restart
a module
fault injection
benchmark is
the file
the hierarchical
write data
i486 mach
correct unexpected
hierarchical interface
individual tests
mach 2
modular benchmark
correct outcome
like operating
read data
robustness of
error return
operating systems
mach 3
benchmarks are
a test
triggering events
a sacrificial
module independent
independent routine
new module
the tests
of unix
unix system
an unexpected
to crash
a hierarchical
an error
byte buffer
write file
a unix
unix systems
benchmark that
a file
the read
the system
test are
system s
memory object
crash the
expected outcome
virtual int
randomized stimulation
testing code
ascm benchmark
benchmark itself
char buf
data char
object mode
object 210
set mode
buf int
crashme is
benchmark may
virtual memory
interface to
error code
tests can
of triggering
system calls
class resource
system crash
specific analysis
a hierarchically
system crashes
module interface
interface library
benchmarks should
tests to
the fault
a system
severity of
ibm rt
rt mach
resource test
module being
restart of
software system
analysis routines
of stimuli
input parameters
the unix
localization of
the correct
like systems
file and
a modular
the interface
is aware
benchmarks of
the outcome
being tested
the sacrificial
file tests
hierarchical testing
structured benchmarks
cmu crashme
multithreaded benchmark
file module
any robustness
multiple modules
test applicable
robustness benchmarking
suite might
no crash
success unexpected
class storage
module dependent
modular benchmarking
unix benchmark
error unexpected
result classifications
similar tests
ascm scheme
terminated class
result classification
a watchdog
ascm result
test storage
resource might
those that
an operating
as being
benchmark to
applicable to
modules in
development of
a fault
error as
the development
the modular
benchmark was
test is
int n
the severity
and write
tests of
random numbers
object class
module but
result classes
closed file
inheriting from
object ffl
mode mode
correct correct
test of
tests are
suite of
having been
each test
modules that
s ability
default implementation
child processes
initial efforts
process object
benchmarks can
normal use
the operating system
the module specific
of a benchmark
of robustness tests
the file object
a robustness benchmark
module specific routine
theta theta theta
correct unexpected error
the read file
unix like operating
of robustness benchmarks
the correct outcome
the robustness of
the storage object
mach 3 0
a benchmark suite
of triggering events
the test specific
localization of triggering
the result processing
suite of robustness
of the benchmark
the new module
of the test
the benchmark itself
a sacrificial program
module specific knowledge
the hierarchical benchmark
the individual tests
benchmark of robustness
module being tested
test specific routine
rt mach 2
a benchmark of
does the fault
file and write
i486 mach 3
like operating systems
read file and
such a benchmark
char buf int
data char buf
by the ascm
read data and
mach 2 5
module independent routine
ibm rt mach
the expected outcome
and write file
the ascm benchmark
of the system
unix like systems
of a unix
restart of the
a benchmark is
a hierarchically structured
of random numbers
the benchmark suite
of the operating
system s ability
to the benchmark
the development of
operating system to
an operating system
the unix system
the system s
as being correct
a file object
16 byte buffer
hierarchically structured benchmarks
write file tests
the ascm result
benchmark suite might
specific routine is
the ascm scheme
the file module
test storage object
error unexpected termination
evaluating the robustness
class storage object
a hierarchical interface
that a benchmark
a bad success
an unexpected termination
the analysis routines
the sacrificial program
a multithreaded benchmark
hierarchical interface to
any robustness benchmark
a modular benchmark
the system crashes
test of robustness
to multiple modules
of 16 byte
the module independent
an unexpected error
crash the operating
unexpected error unexpected
bad success unexpected
a hierarchical benchmark
file object and
storage object and
object mode mode
those that caused
module interface code
expected outcome of
a test are
of a system
the severity of
to apply to
the virtual memory
a storage object
the read data
a closed file
and write data
measure of progress
data and write
s ability to
to the operating
a unix system
of the robustness
random number generator
the test is
result to be
of a modular
uses of a
the interface to
a suite of
of a test
robustness of a
of the individual
the results of
to the module
of a hierarchical
an error as
knowledge of the
level of abstraction
section 5 4
of an operating
if a call
the desirable properties
virtual memory system
operating system the
by the operating
of the tests
development of a
must be taken
of the storage
of a module
ability to handle
of the module
better localization of
cold restart of
the normal workload
the fault affect
a file handle
read data char
int read data
unexpected error bad
terminate the benchmark
object and memory
higher initial implementation
module specific error
end of 16
error return channel
the system modules
error bad success
input parameters bad
invalid input parameters
mach 2 6
in a benchmark
of set mode
of robustness should
between system modules
tests to exercise
impossible bad success
the system warm
disagree on whether
int allocate int
those that returned
of system robustness
a unix like
test may not
0 virtual int
a module specific
the abstract test
the testing code
an external monitoring
mode object mode
the individual test
resource public virtual
variable local to
module interfacing to
at a valid
crashme to crash
interface to that
a verification suite
and test specific
analysis routines may
