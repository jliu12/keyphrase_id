bb
motions
motion
bbs
pruning
cdfg
bbcg
scheduled
scheduling
resource
tbs
exi
schedule
speculative
conditional
constructor
permutation
synthesis
waka
duplication
compulsory
predicate
conditionals
branch
hra
explorer
scheduler
causal
ps
code
pbs
guard
inside
cvls
predicates
topological
compaction
parallelism
maha
a4
adder
ready
link
merge
controller
percolation
resources
s2r
nopru
ruv
dependencies
redundancies
constructive
constrained
links
shadowed
afap
wewill
terminal
parallelization
lengths
sharing
gss
criterion
causality
freedom
pipelined
visited
compensation
assignment
moved
density
permutations
flow
grey
solutions
latest
executed
induce
delay
allocates
alu
10c
imposed
boosting
trace
guards
search
unscheduled
pru
smg
grc
pipel
11d
scheduledpreds
inefficient
slot
prune
unrestricted
linked
condensed
capability
circles
ts
behavioral
exis
committed
traversed
10b
oracle
occupied
execution
cosynthesis
brewer
precedence
conflict
cpu
traversal
superscalar
speculatively
dependency
exclusion
cast
accommodated
runtime
preventing
terminals
infeasible
1a
priority
heuristic
neat
accommodate
conditionally
11c
orthonormality
revoked
timely
cycle
downward
heuristics
6k
boolean
selection
succeeds
quality
asips
selectors
assignments
subsection
exploitation
engine
earliest
enclosed
dsps
transformations
affordable
6d
allocated
mutual
optimum
exploration
outcome
11b
mult
availability
encode
explored
obeyed
idle
symbolic
longest
primitive
a2
operation
asics
brazil
encoding
benchmark
a1
paths
benchmarks
path
microcode
transistor
comparator
8b
seeds
utilization
reordering
predecessor
phases
completeness
discard
static
downwards
hw
shortened
summarized
reached
code motions
code motion
motion pruning
in bb
bb v
bb i
the bbcg
initial link
to bb
initial links
search space
speculative execution
the cdfg
quality solutions
be scheduled
criterion 1
topological permutation
conditional c
bb j
resource constrained
operation u
pruning technique
a bb
level synthesis
schedule length
schedule lengths
generalized code
scheduled inside
inside bb
branch capability
execution condition
into bb
solution constructor
conditional resource
motions are
our method
global scheduling
pruning is
for code
resource sharing
pipelined control
an operation
resource constraints
control delay
from bb
control selection
the search
predicate g
of code
freedom for
based scheduling
time step
solutions in
solution s
of bbs
visited bb
the explorer
ready operation
permutation scheduler
limited branch
bb c
operation q
scheduled in
time sequence
path based
bb is
operation m
static predicate
c d
of operations
available resources
the schedule
is scheduled
optimal solutions
no pruning
dynamic predicate
inefficient code
scheduled at
data selection
operations in
merge node
is compulsory
causal solutions
without pruning
bb k
guard value
allocated steps
basic code
bb b
s m
appendix i
in figure
search time
of operation
code duplication
a a
of solutions
a resource
high quality
the freedom
control flow
operation is
boolean oracle
alternative solutions
cost range
first ready
constrained parallelization
local search
high level
and code
behavioral description
of schedule
control dependencies
our approach
bb a
merge nodes
final assignment
synthesis applications
global resource
constructive method
motions can
linear time
control dependent
density of
linked to
the shadowed
branch merge
a solution
operations a
operation n
the bb
cost values
larger search
if operation
a b
d f
basic block
the available
design flow
dynamic predicates
permutations were
ready under
compaction on
e description
and maha
in waka
waka 2
guard values
at latest
cost ranges
operations m
a visited
allocates steps
bb l
when pruning
conditional t
our constructive
permutation construction
our constructor
tbs and
bb being
bb d
bb p
scheduler engine
current bb
be executed
output node
solutions are
extra step
of bb
assigned to
of conditional
each path
a permutation
constraints imposed
a c
operation a
exact method
primitive transformations
before control
motions figure
adder a
steps inside
machine graph
bbs are
bb as
branch node
u inside
pruning this
of control
the traversal
our code
in 26
d e
operation in
26 a
that operation
some operation
a code
in path
code motion pruning
the search space
for code motion
freedom for code
in the bbcg
in the search
high level synthesis
high quality solutions
pipelined control delay
generalized code motions
linear time sequence
code motions are
of code motion
conditional resource sharing
a a a
of code motions
the freedom for
solutions in the
motion pruning technique
in the cdfg
a code motion
scheduled at the
of schedule lengths
the solution constructor
our code motion
topological permutation scheduler
be scheduled inside
quality solutions in
the linear time
the available resources
to be scheduled
solution s n
for high level
supported in our
in our method
the initial link
the topological permutation
inefficient code motions
terms of schedule
into bb i
scheduled inside bb
conditional c 1
basic code motions
ready operation in
of conditional c
code motions can
an initial link
inside bb v
in path based
first ready operation
schedule length of
number of solutions
of an operation
global resource constrained
a design flow
schedule lengths of
the first ready
larger search space
resource constrained parallelization
bb v is
the static predicate
c d e
be scheduled at
the schedule length
of high quality
path based scheduling
in appendix i
level synthesis applications
motions can be
in our approach
description in figure
local search algorithm
the behavioral description
of operation u
our method can
phases of a
assigned to r
an extra step
e c d
speculative execution is
in bb a
operation q is
the dynamic predicate
to bb j
from bb j
available before control
a final assignment
constraints imposed to
state machine graph
pruning is applied
steps to accommodate
else e description
into the allocated
the allocated steps
bb j into
at latest in
complete and causal
and allocates steps
8 21 30
the current bb
the execution condition
new operation is
operation u inside
and without pruning
in the shadowed
limited branch capability
latest in bb
execution condition of
q in bb
linked to bb
operation m is
allocates steps inside
criterion 1 is
when pruning is
splitting the linear
solution s m
j into bb
in bb v
before control selection
code motions figure
density of high
initial links are
a visited bb
operations m and
the density of
same time step
a c d
a b a
a e c
in figure 1a
time of operation
assigned to q
tree based scheduling
the predicate g
share a resource
constrained parallelization technique
under the predicate
of initial links
to data selection
a global resource
copy of q
an operation u
condition of an
the description in
must be available
of a design
d e f
be scheduled in
for conditional resource
technique is presented
level synthesis and
given time step
time step where
in s m
a constructive method
to code motion
be available before
and code motion
optimal solutions in
in the permutation
synthesis and code
code motion is
directed graph where
a c a
d f a
the earliest time
used to induce
execution is not
the potential parallelism
be moved into
not be scheduled
types of code
code motion and
is guaranteed by
the result of
code generation for
in the behavioral
scheduling and code
operations in the
c 1 is
see section 6
a data dependency
could be scheduled
a local search
was assigned to
the edges represent
that an operation
the nodes represent
e d f
moved into the
of a solution
the construction of
the first step
by a permutation
resource constraints and
d d d
in topological order
graph where the
the code generation
during the construction
