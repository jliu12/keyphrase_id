backup
load
fault
allocation
primary
processes
balancing
bt
allocated
replica
tolerant
loads
faulty
passive
bannister
node
gp
occurrence
primaries
replicas
pohang
trivedi
lightest
groups
increment
multicomputer
cpu
rgp
balances
allocate
grouping
fig
allocating
stage
descending
loaded
checkpointing
heaviest
balanced
tolerate
objective
paralex
hyoja
nodes
nonstop
nonactive
esses
duplicated
np
nm
addendum
active
group
transaction
multicomputers
alloc
deviation
sorting
scenario
784
tandem
weight
static
790
primitives
simulation
replication
log
reliability
checkpoint
lightly
evenly
balance
inactive
94231
postech
c96308
kosef
ftcs
luqi
valdis
etri
hthus
transcom
50r
jkim
minizing
jk
heuristic
korea
sort
dong
event
highest
shatz
devia
0900
nieuwenhuis
100r
heejo
weights
lemmas
ordered
dividing
allocates
continuously
reliabil
sunggu
berzins
failure
ancing
reallocated
proc
assigned
processor
nonfaulty
055
incremental
ray
replicated
eight
lee
faults
ieeecs
live
running
941
grouped
mail
affected
nonhomogeneous
incurred
minneapolis
reprints
bal
merged
400
replicates
minimize
scenarios
sorted
exceptionally
bracket
simulations
checkpoints
placement
heavily
300
abstractin
mk
rome
sage
minnesota
periodic
failed
assignment
processors
formulate
ele
randomly
wormhole
lows
varying
dependable
stressed
mes
maximally
prepared
lemma
overloaded
ascending
analyzed
advance
fol
ij
beforehand
25th
sors
engineer
unordered
distributes
regularly
assigning
proces
311
arrive
minimizes
299
actively
positively
please
aug
commercial
100
subsection
prominent
kind
attach
approximately
kr
backup processes
backup process
process allocation
primary process
primary processes
the backup
the load
load of
a fault
load difference
load balancing
bt algorithm
allocation algorithm
minimum load
balancing process
the bt
node j
of backup
the primary
load increment
processes are
fault tolerant
cpu load
k gp
the occurrence
node with
allocated to
gp problem
stage allocation
backup group
load when
the node
allocation problem
two stage
a backup
the fault
1 groups
process load
passive replica
tolerant multicomputer
static process
processes is
of processes
the allocation
and backup
actual load
occurrence of
bannister and
backup groups
load before
process is
allocation of
primary backup
tolerant process
active process
and trivedi
primary and
of primary
are allocated
all primary
stage algorithm
be allocated
processes with
m primary
lightest load
actual loads
fault occurrence
increment to
the proposed
minimize f
total load
fault in
the lightest
modified k
their primaries
objective cost
each backup
p faulty
proposed algorithm
its primary
balances the
a process
in fault
the passive
of load
1 backup
highest load
process has
the cpu
p non
allocation method
grouping problem
two ordered
each node
load as
balanced load
its backup
balancing with
load and
in descending
the simulation
m log
allocation is
process model
load to
algorithm is
before and
fault free
to node
each primary
process i
descending order
incremental load
free situation
load differences
trivedi 3
processes assigned
allocate each
y affected
passive replicas
process replica
equal incremental
processors loads
heaviest load
replica computing
of nodes
multicomputer systems
dynamic process
event of
simulation results
ordered sets
each process
same node
model considered
each group
fault occurs
loaded than
process loads
replica model
loaded node
line transaction
tolerant multicomputers
load in
processes into
tolerate a
and after
f p
lines show
to tolerate
fault the
assigned to
fault f
n nodes
becomes faulty
with passive
of process
the minimum
load after
is allocated
process and
two lines
requires o
algorithm fig
objective functions
for load
the objective
computing environment
maximum load
n sets
processor load
difference between
n n
the event
single fault
the heaviest
o m
the active
function y
faulty the
processes running
their actual
allocation in
the system
processes in
represented as
into n
a balanced
basic primitives
node in
allocation for
node k
tolerant computing
expected performance
balancing algorithm
is np
process in
in fig
nonstop system
allocating n
groups requires
the primary process
the backup processes
the backup process
of a fault
the load difference
the bt algorithm
the load of
node with the
of the backup
the minimum load
balancing process allocation
load balancing process
the node with
load of the
backup process is
a backup process
of backup processes
of the primary
load difference between
processes are allocated
the occurrence of
occurrence of a
the two stage
after the occurrence
primary processes are
two stage allocation
process allocation problem
backup processes are
k gp problem
and backup processes
primary process and
n 1 groups
process allocation algorithm
the cpu load
backup processes is
before the occurrence
stage allocation algorithm
static process allocation
fault tolerant multicomputer
primary and backup
number of processes
load of each
allocation algorithm is
the load balancing
increment to be
actual load of
bannister and trivedi
the load increment
the primary processes
load increment to
to node j
fault tolerant process
n n 1
of the load
the allocation of
two stage algorithm
to minimize f
load of a
number of nodes
two ordered sets
of primary processes
dynamic process allocation
each primary process
backup process has
with the lightest
modified k gp
all primary processes
the objective cost
the passive replica
a process allocation
two lines show
primary backup process
m primary processes
the lightest load
tolerant multicomputer systems
backup process load
in fault tolerant
the proposed algorithm
a fault in
the simulation results
before and after
the fault tolerant
cpu load of
the actual load
the highest load
a fault the
allocation algorithm which
bt algorithm is
objective cost function
event of a
of processes is
a balanced load
the event of
load balancing with
after a fault
in descending order
o m log
between the node
into n 1
be allocated to
is allocated to
in the event
the total load
when a fault
a fault occurs
to tolerate a
to the node
proposed algorithm is
allocated to the
the backup group
y affected by
average load of
the active process
processes into n
allocation in fault
of processors loads
process allocation is
f p non
on line transaction
primary process i
process model considered
heaviest load and
loaded than the
backup processes have
fault free situation
f p faulty
replica computing environment
of process loads
with passive replicas
primary processes assigned
allocation of backup
backup processes of
with the heaviest
processes assigned to
its primary process
n 1 backup
the heaviest load
equal incremental load
backup processes into
their actual loads
process allocation method
and trivedi 3
process allocation for
the same node
number of primary
and after the
load and the
maximum and the
in the fault
process allocation in
of its primary
using the bt
fault tolerant multicomputers
performance of the
with the minimum
difference between the
process is called
the number of
and the node
in the passive
simulation results when
and its backup
of a backup
node j the
load when the
assigned to node
fault occurs the
of the proposed
requires o n
when the number
a single fault
model considered in
node in the
the maximum and
are assigned to
set of process
allocation problem is
able to tolerate
of each group
process and its
and the minimum
of each node
between the maximum
load in the
the average load
load balancing algorithm
results when the
of load balancing
fault tolerant computing
to be added
the primary and
the fault free
log n time
each process is
are allocated to
load balancing is
1 backup groups
load of node
the k gp
node the backup
