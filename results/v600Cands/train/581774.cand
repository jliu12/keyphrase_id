assertions
2npda
inference
rules
syntactically
firings
meta
rule
unification
antecedent
closure
union
henglein
database
assertion
equivalence
transitive
hs
jdj
antecedents
merge
bottom
congruence
ground
cubic
presentations
oe
ti
pi
calculus
parses
atom
logic
grammar
en
predicate
prefix
grammars
datalog
subtype
jp
transitivity
typed
cardelli
parsing
asserted
clashes
interned
satta
bilexical
flow
slot
expressions
abadi
appearing
typability
cky
subtransitive
horn
subterms
obsolete
substitutions
oei
jjdjj
typable
accepts
semantically
subscrpt
firing
chaining
recursive
clauses
clearer
closed
bn
runs
deductive
inspection
closedness
pseudo
quadratic
log
erasure
decidable
theorems
pushdown
zi
polylog
erase
nonterminal
automaton
subtyping
language
wi
invariant
unbound
substitution
fig
argues
equate
subexpression
phi
running
sub
inferring
hy
classical
derivable
doubles
equality
interconvertbility
glein
multitext
intercovertability
polakow
fahndrich
alyze
kasimi
cons
pairing
predicates
expression
atoms
assignment
languages
string
presentation
renamed
tecedents
jii
pij
sertions
jorgensen
jpr
reachability
static
presenta
pretation
tabled
nederhof
typing
conclusion
analyses
proportional
enumerate
italic
ml
involving
correctness
givan
nff
melamed
xsb
clean
hu
singleton
object
cocke
sting
chomsky
pfenning
watkins
eisner
relation
nondeterministic
breaking
maintain
converse
hoe
sentations
bondorf
barrier
variety
bols
assign
inferential
unprocessed
tabulation
parsers
essence
mcallester
evalu
check
beats
younger
acceptability
caption
palsberg
distinct
online
indexing
renderings
giorgio
relational
covariant
ackermann
programs
bottleneck
pablo
plus
meta complexity
syntactically local
complexity theorem
rule set
union find
local rule
the rules
bottom up
find assertions
r d
inference rules
up logic
assertions of
rule sets
assertions in
of assertions
rules in
equivalence relation
o n
henglein s
up bound
find rule
terms involved
type expressions
a rule
o en
congruence closure
unification algorithm
union operation
flow analysis
find of
sub cubic
running time
set r
some antecedent
cubic time
linear time
assertion of
in o
prefix firings
jp r
2npda complete
sub transitive
classical pseudo
closure algorithm
hs ti
runs in
type expression
the form
the equivalence
the find
transitive closure
every term
rules maintain
the conclusion
recursive types
analysis algorithms
in sub
a syntactically
n log
the inference
equivalence class
occurs check
semantically local
is 2npda
merge graph
o jdj
find value
dynamic transitive
database e
all terms
logic programs
oe i
a type
single rule
the input
first order
context free
appropriate equivalence
efficient inference
closed type
a union
the closure
algorithm runs
union operations
input database
simple terms
been asserted
type inference
data flow
the meta
database d
as bottom
the running
logic program
form find
closure can
in linear
well typed
firings of
in r
of inference
the rule
term s
analysis algorithm
d j
have that
second meta
derived assertions
for unification
2npda can
transitive data
derived assertion
rules generate
complexity theorems
prefix firing
en running
obsolete find
slot name
y path
jdj jp
cardelli object
common find
in 2npda
2npda hard
not containing
and w
n find
given term
find s
the merge
a database
invariant that
the database
a ground
in d
pi 1
implies that
terms in
rules are
order terms
database to
complexity analysis
are clearer
transitivity rule
s quadratic
all find
form input
pi 2
abadi cardelli
partial types
ti and
oe 1
a bottom
x y
solved in
s w
assign x
arbitrary rule
all assertions
quadratic algorithm
presentations are
find consistent
database contains
in rule
an assertion
at most
the union
n time
terms appearing
rule appears
not syntactically
atom i
clearer and
the invariant
variables in
to mean
rule is
time decidable
local then
union u
the transitivity
find values
only o
static analysis
pseudo code
this implies
is semantically
object calculus
is syntactically
the algorithm
inference of
based analysis
have natural
a unification
theorem 3
by inspection
log n
now implies
n terms
meta complexity theorem
syntactically local rule
assertions of the
bottom up logic
of the form
rule set r
in the conclusion
of assertions of
bottom up bound
terms involved in
union find rule
in the equivalence
rules in r
the rules in
set of assertions
rules in figure
r d j
assertion of the
in sub cubic
sub cubic time
a syntactically local
in some antecedent
a rule set
the equivalence relation
local rule sets
runs in o
the meta complexity
find rule set
solved in sub
classical pseudo code
assertions in d
o n log
static analysis algorithms
rules maintain the
assertions in the
flow analysis algorithm
that the rules
r r d
that a database
complexity theorem for
the appropriate equivalence
jp r r
dynamic transitive closure
determined by inspection
up logic program
up logic programs
any single rule
find s f
the o en
efficient inference of
the closure can
n find assertions
the merge graph
algorithm runs in
running time of
in linear time
every term in
the running time
s and w
maintain the invariant
appears in some
first order terms
database d we
the rules maintain
has been asserted
appropriate equivalence relation
e is closed
in the input
of a rule
the input database
the union operation
local rule set
of the rules
conclusion of a
as bottom up
the form find
a union find
implies that the
the invariant that
closure can be
to mean a
in o n
be solved in
the inference rules
this implies that
of inference rules
in o jdj
form find s
en running time
henglein s algorithm
henglein s quadratic
rule appears in
find values are
complexity theorem we
abadi cardelli object
is 2npda complete
log n find
cardelli object calculus
o en running
o n terms
the common find
union find consistent
common find of
is syntactically local
the find value
and simpler to
find assertions in
a unification algorithm
hs ti and
database e is
all assertions of
is semantically local
obsolete find assertions
meta complexity theorems
not syntactically local
transitive data flow
n terms involved
term s the
complexity than classical
the find of
jdj jp r
clearer and simpler
find w f
4 now implies
rule has at
second meta complexity
all find values
values are terms
sub transitive data
d using rules
x y path
theorem 4 now
p t w
presentations are clearer
in 2npda can
are clearer and
than classical pseudo
the form input
input database is
only o n
a bottom up
be computed in
involved in the
transitive closure algorithm
atom i e
a database e
a closed type
arbitrary rule sets
d we let
the transitivity rule
congruence closure algorithm
database is assumed
closure of d
r d can
given term s
computed in o
n log n
there are o
in time proportional
data flow analysis
number of assertions
an assertion of
the bottom up
the equivalence class
class of s
using rules in
then r d
variables in any
are those variables
set based analysis
o n 3
appearing in the
p x y
equivalence class of
polynomial time decidable
the union find
in any single
where s and
use the term
the conclusion of
that the closure
now implies that
rule set is
we have that
that the algorithm
s f is
the complexity analysis
of the unification
the form oe
can be computed
time proportional to
a given source
r d is
type inference algorithm
the database contains
the form p
oe i 1
set of ground
complexity analysis of
a given variable
