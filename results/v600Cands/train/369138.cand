slicing
reqs
writerpresent
activereaders
fcl
slice
req
ai
goto
propositions
cfg
ltl
criterion
conditionals
ps
residual
stop
stuttering
verification
transition
checking
flowchart
irrelevant
init
trace
specialization
abstraction
specifications
read
errorflag
abps
obligatory
hatcliff
specification
spin
sliced
proposition
abstracted
rop
dwyer
relevant
post
raise
temporal
fng
formula
bandera
node
attempt
criteria
traces
assignments
ada
jump
oc
jumps
refined
concurrent
pos
bs
hongjun
primitive
slices
safely
abstract
block
extract
extraction
checker
transitions
assignment
cdr
matthew
semantics
21209
branch
check
influence
weiser
satisfaction
identifier
nodes
dominated
proposi
yunja
loop
picking
successors
checked
interlocking
railway
laubach
throw
logic
syntax
conditional
deadlock
intuitively
robby
wehrheim
psreanu
reactive
verifying
l5
heike
else
label
statement
shawn
interpretation
abstractions
corbett
corina
ref
methodology
zheng
prelude
false
dominates
reusable
dom
identifying
nag
reveal
safety
preserve
software
dominator
java
refinements
domination
staging
predecessors
precedence
statements
semantic
exiting
specializing
program
automated
skip
compressed
flow
predecessor
write
dictates
prototype
programs
response
formalize
ccr
projection
translating
referenced
compressing
appearing
infor
entering
successor
connectives
symbolic
return
unconditional
statisfaction
incomputable
ksu
marieke
satifac
turnidge
gigliola
hitch
satisfication
trentelman
nkg
dezvouz
fzero
nusmv
huisman
9701418
satification
next_req
formal
exam
extracting
dependence
nasa
correctness
executions
rc
threaded
abstracts
halt
controlling
john
mation
choi
def
operator
portions
holzmann
check reqs
slicing criterion
residual program
start read
power program
stop write
stop read
attempt stop
model checking
program slicing
start write
goto check
attempt start
state verification
the slicing
slicing criteria
activereaders 0
slice set
reqs 2
ai s
finite state
writerpresent 0
next req
the slice
control dependent
relevant variables
if req
of slicing
p stuttering
else attempt
reqs 1
raise error
program p
transition system
point ai
primitive propositions
and writerpresent
write attempt
flowchart language
partial evaluation
the residual
criterion c
test 1
loop 2
program specialization
program ps
post dominated
extraction function
fcl program
2 goto
and activereaders
an fcl
the program
l i
a program
relevant at
abstraction based
program point
abstract interpretation
branch set
end else
slice of
the conditionals
software systems
0 c
of ps
node n
dwyer john
then end
and slicing
the transition
the cfg
temporal logic
is control
activereaders 1
initial slice
activereaders activereaders
identifier l
write else
slicing as
1 activereaders
1 writerpresent
obligatory nodes
goto test
writerpresent and
john hatcliff
the power
a slicing
slicing and
matthew b
read if
b dwyer
write control
req 1
return 1
concurrent software
the formula
execution trace
program with
ai for
to slicing
a trace
of program
1 loop
the sliced
initial block
with identifier
being checked
node m
slicing can
then start
of variables
semantic features
the property
satisfaction of
variables in
slicing of
become true
then stop
action ff
writerpresent 1
cdr reqs
null reqs
write start
that safely
appropriate ai
write stop
sliced program
language fcl
in bs
state operator
refined slicing
reqs end
read stop
read start
variable propositions
req 3
reqs cdr
req next
reqs 5
how slicing
read goto
req reqs
simple flowchart
read attempt
model checker
write if
an ai
a residual
flow graph
at node
s i
level control
propositions in
for verifying
property being
linear temporal
pos ai
property specifications
zero pos
slicing a
ltl specification
are control
influence the
2 else
the satisfaction
for finite
temporal operators
is relevant
using slicing
is post
5 check
hongjun zheng
if null
assignments to
the criterion
program of
presents the
software engineering
not influence
irrelevant information
else next
else check
ps is
checking of
of propositions
the node
control flow
label of
the specification
reason about
trace of
using partial
of conditionals
the flowchart
conditionals that
statement level
variables v
the variables
all information
the power program
the residual program
goto check reqs
finite state verification
in the residual
the slicing criterion
the point ai
attempt stop write
check reqs 2
residual program is
s 0 c
is control dependent
then end else
attempt stop read
else attempt stop
attempt start write
power program of
and activereaders 0
attempt start read
in the slice
slicing criterion c
a slicing criterion
a program p
dwyer john hatcliff
b dwyer john
for finite state
post dominated by
and writerpresent 0
an fcl program
with identifier l
0 1 activereaders
activereaders activereaders 1
write if req
writerpresent 0 1
is relevant at
initial slice set
1 then stop
stop write attempt
activereaders 1 1
read if req
activereaders 0 1
2 else attempt
check reqs 1
identifier l i
1 activereaders activereaders
control dependent on
matthew b dwyer
for the power
read write control
abstraction based program
based program specialization
the initial block
a residual program
level control flow
program of figure
the transition system
of the formula
at node n
model checking of
the model checker
in the cfg
0 c is
b 0 c
are control dependent
figure 5 presents
property being checked
read stop read
write attempt start
check reqs 5
reqs 2 goto
the sliced program
if null reqs
reqs 1 return
is post dominated
read start read
trace of ps
req reqs cdr
write attempt stop
reqs cdr reqs
statement level control
else next req
null reqs 1
the initial slice
stop read attempt
next state operator
return 1 then
end if null
activereaders 0 2
read goto check
s for variables
initial block of
cdr reqs 2
control dependent upon
reqs 2 else
end else next
next req next
else check reqs
appropriate ai s
1 return 1
residual program ps
simple flowchart language
write start write
5 check reqs
of relevant variables
slice set s
reqs 5 check
req next req
reqs end if
check reqs end
ai s for
jump in bs
stop read if
system that safely
the flowchart language
flowchart language fcl
next req reqs
the slicing algorithm
1 1 then
of program slicing
the property being
the satisfaction of
linear temporal logic
set of variables
program with respect
with respect to
zero pos ai
using abstraction based
of primitive propositions
state verification techniques
requires that its
the conditionals that
slice of p
program p and
reduce the size
given a program
the label of
is the label
not influence the
s c then
r i c
1 then end
to the property
5 presents the
in s c
to become true
i c n
node l i
transition system that
label of the
of concurrent software
do not influence
given program p
the change from
the semantics of
the variables in
state transition system
criteria based on
must appear in
finite state transition
of figure 1
in the specification
variables in v
of the power
of the transition
the jump in
respect to c
on software engineering
with the point
model checking and
abstract interpretation of
program p is
verification of concurrent
p with respect
are replaced with
the temporal logic
to make automatic
nasa under award
and nasa under
how slicing can
at test 1
fcl program p
using specification driven
1 writerpresent and
ai s that
power program figure
the initial branch
1 2 goto
slicing p with
tractable yet it
stop write stop
of variables defined
ps running with
picking out an
safely abstracts the
the previous slice
write else check
writerpresent and writerpresent
that its argument
start read 1
that safely abstracts
