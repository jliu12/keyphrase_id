astoot
adt
eqn
delete
priority
specification
testing
driver
simplifier
queue
lobas
observationally
axiom
protest
daists
buggy
eiffel
object
specifications
algebraic
transformers
observational
sequences
drivers
generator
create
heap
oriented
constructors
axioms
abstract
prolog
bug
sorted
add
checking
objects
observers
s103050ffl
expval
gaudel
equivalence
sigsoft
informal
supplied
oracle
export
observer
phi
inheritance
returned
studies
omega
expexc
actval
tags
format
child
hsia
tree
formal
limerick
andrews
abstractions
tools
hoffman
tag
outputs
notes
adts
cut
largest
automation
automated
ireland
swap
intended
kung
nb
likelihood
generation
trace
bernot
yingjun
hypotheses
syntax
simplified
dg
messages
abstraction
pei
oo
classes
centre
sending
syntactic
binding
facilitates
phyllis
empty
engineering
languages
perimeter
module
strooper
huo
polytechnic
toronto
ontario
void
checks
automatically
oracles
psreanu
methodology
root
simplification
person
collaborative
xiaolin
tosem
incorrect
software
children
invoking
inequivalent
tse
target
tended
correctness
corina
willem
visser
qk
says
executes
compiler
insight
randomly
effects
tool
ada
erroneous
message
frequencies
constructor
queues
transformer
polygon
tested
pi
dump
mauro
maine
rise
symbolic
manually
hinder
boolean
1996
sept
else
box
roadmap
batch
modules
fifo
instantiation
compiles
errors
exported
manual
file
tests
preconditions
o1
chen
apparently
prototype
suites
check
writing
termination
james
pq
generates
mode
exposing
smalltalk
ending
young
22nd
black
deleting
list
programs
detect
26th
indicating
complicated
create add
test cases
priority queue
test case
adt tree
original sequence
add 3
algebraic specification
driver generator
add 5
object oriented
the adt
test driver
the simplifier
observationally equivalent
add x
original sequences
abstract data
test execution
add y
sorted list
case studies
observational equivalence
algebraic specifications
an adt
class under
the driver
testing object
operation sequences
oriented programs
delete create
the eqn
5 add
under test
the specification
the test
test generation
3 tree
software engineering
the priority
class c
of test
to testing
of parameters
informal specification
test drivers
omega omega
formal specification
x add
y delete
in lobas
simplified sequence
execution tools
eqn operation
of testing
parameters p
a test
object of
target object
of operations
generate test
a buggy
trace specifications
data types
a priority
side effects
phi phi
3 delete
add 2
add 1
data abstractions
o 2
a largest
be observationally
eqn function
of astoot
swap with
largest then
and transformers
test checking
the bug
specification of
of sequences
objects of
on software
of class
not equivalent
each test
of priority
data abstraction
empty priority
data type
test generator
notes v
sigsoft software
engineering notes
on testing
case generation
axiom 6
returned object
sequences should
acm sigsoft
being tested
an object
generates test
generation test
software testing
nb elements
substantial automation
astoot is
add delete
long original
testing classes
adt trees
sequence create
e s103050ffl
buggy implementation
syntactic part
simplified sequences
functions observers
an algebraic
two case
tools based
of add
theta theta
add s
the class
each original
dynamic binding
symbolic values
h andrews
in eiffel
automation of
oriented programming
for testing
to objects
o 1
testing process
to swap
the returned
a class
delete s
of adt
these case
operation sequence
oriented languages
paths through
sequences of
engineering p
oriented software
the heap
an axiom
for substantial
representation function
to eqn
path condition
abstract states
of tools
range of
the root
queue and
constructors and
the user
bottom row
s 1
3 add
axiom to
operations of
a formal
a specification
root s
objects o
of messages
intended to
equivalent states
parameter range
sequence and
heap resulting
s103050ffl omega
astoot and
pi range
equivalent tags
protest 2
gaudel s
case create
astoot s
restricted format
adding 5
queue add
class testing
adding 3
omega pi
simplifier will
delete add
supplied equivalence
checking mechanism
empty b
lobas and
phi range
sequence affect
the driver generator
create add 5
the class under
add 5 add
class under test
range of parameters
the priority queue
the original sequence
2 3 tree
the adt tree
create add x
delete create add
object oriented programs
testing object oriented
approach to testing
of parameters p
5 add 3
an algebraic specification
of test cases
add x add
x add y
a priority queue
a test case
abstract data types
in the root
of the adt
the test driver
generate test cases
specification is available
add 3 delete
an adt tree
test execution tools
create add 3
add y delete
algebraic specification of
of priority queue
abstract data type
each test case
of class c
priority queue and
intended to implement
each original sequence
be observationally equivalent
an empty priority
constructors and transformers
through the adt
to swap with
of add s
an object of
omega omega omega
software engineering notes
engineering notes v
acm sigsoft software
sigsoft software engineering
empty priority queue
test case generation
observationally equivalent to
object of class
the target object
on software engineering
test cases in
the test generator
two case studies
sequences of messages
of the class
tools based on
s to delete
swap with the
substantial automation of
these sequences should
to testing object
3 delete create
invoking a user
to delete s
s e s103050ffl
automatically generates test
parameters p c
original sequence and
long original sequences
add 3 add
create add 1
pair of sequences
for substantial automation
the eqn operation
y delete create
allows for substantial
generates test drivers
sequence create add
add 2 add
the eqn function
of the priority
paths through the
object oriented programming
and o 2
sequences of operations
object oriented software
theta theta theta
software engineering p
1 and o
the parameter range
o 2 of
of an adt
of tools based
james h andrews
and dynamic binding
a test driver
test cases of
a s e
set of tools
a user supplied
object oriented languages
of object oriented
to generate test
the root s
equivalent with the
priority queue in
the path condition
original sequence the
c a s
these case studies
objects o 1
the returned object
of abstract data
add s to
p c a
the bottom row
o 1 and
our approach to
to the specification
test cases that
test cases from
test cases with
of operations of
detect an error
an abstract data
of sequences of
supplied by the
the path conditions
supplied equivalence checking
create add y
adt tree arising
case will detect
of many aspects
3 add 2
1 add 2
heap resulting from
indicating whether these
under test into
the syntactic part
a buggy implementation
a largest then
a empty and
approximation of observational
generation test execution
user supplied equivalence
messages along with
an informal specification
largest then a
frequencies of different
for the priority
the operation sequences
r 100 10
should be observationally
empty a and
executed by sending
priority queue add
abstract states of
2 add 1
omega omega pi
whether these sequences
phi phi range
test driver which
returning an object
phi range of
test case create
sequence affect the
buggy implementation of
the simplified sequence
driver generator can
case create add
pi range of
e s103050ffl omega
tree arising from
s103050ffl omega omega
affect the likelihood
the sequence create
of sorted list
add 4 add
create an empty
testing data abstractions
log file analysis
4 add 3
original sequence affect
automation of many
add 1 add
the simplifier will
the edge conditions
by the user
of the specification
phi phi phi
