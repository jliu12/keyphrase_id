ruby
fst
sig
fork
vhdl
circuit
int
snd
rubyint
convolution
tri
rdrf
relational
butterfly
combinational
circuits
implementable
relations
combinators
dff
combinator
rewriting
2r
causal
rewrite
clk
prover
fstcompdist
dub
relates
equivalences
spread
causality
relation
rules
acc
specification
port
delay
wire4546
conv2
nlist
conv264
rossen
fstsndcomm
stream
cr
butterflies
vlsi
pointwise
serial
inputs
wiring
composition
graphical
streams
style
adder
burdens
bits
translated
repetitive
outputs
signals
map
rubybit
frule
colf
reorg
wire20273
tacticals
rubyt
rubybool
rubychar
wire20128
wire20478
wire20746
forkmap
wire20378
retimecol
maptricomm
wire20596
wire4548
instantiated
spec
transformational
wire
conv1
equality
systolic
representable
behaviour
equalities
definitions
sheeran
interpretation
subterm
translator
fi
timing
pure
expressions
subtractor
sml
offset
extracted
instantiation
floorplan
instantiations
ff
partitioning
wires
manipulate
impl
tactics
synthesis
conditional
kernel
signal
assignments
body
translation
parameterised
apr
integers
anti
assembling
partitionings
transformation
extraction
expanded
reflecting
subtype
interpretations
postponed
entity
lifting
dimensional
mathematical
id
functional
describes
commute
polymorphic
analysed
bool
fnow
ocnquer
d320
wire4552
wire20928
repetive
irt
loop4
readibility
concretisaion
inversecomp
correlator
tranformation
prettyprinter
wire19732
latchc
foreseeing
wire4554
mapf
bint
wire4550
unimplementable
rubydef
rubyetyp
etyp
d319
wire1983
wire19943
instantantions
wire21142
sandum
wire2540
wire4556
wire19730
sumspec
wire4558
950201
summation
correctness
conjectured
mid
descriptions
enumerated
fulfilled
drawn
derivation
quantification
philosophy
concrete
sigmar
hutton
output1
synthesise
00
t ruby
fst fork
fork 2
snd d
dimensional convolution
d w
r 1
2 r
sig sig
1 fst
ruby system
delay elements
k int
tri 2
int fst
2r 1
the relation
in ruby
the ruby
fst tri
ff sig
butterfly r
int theta
ruby relation
int sig
1 snd
dff rubyint
of ruby
rubyint port
g fst
theta int
of type
port map
pure ruby
the circuit
type ff
the t
2 dimensional
rewrite rules
elements d
1 d
r d
the domain
convolution relation
fst d
sig int
domain side
ruby the
fst r
serial composition
graphical interpretation
int n
theorem prover
the vhdl
to vhdl
relation is
circuit for
a circuit
bits n
style of
streams of
sig fi
of fst
r fst
causal partitioning
implementable circuit
pointwise relates
sig fst
ruby type
ruby design
an implementable
relational constraints
range side
the combinational
adding relational
causality analysis
in t
a relation
which relates
d r
relations which
the range
the combinator
a vhdl
id n
design process
free variables
elementary types
r sig
fork 5
rdrf 2r
target expression
ruby expressions
ruby types
graphical interpretations
ruby is
spread f
combining forms
nlist n
way fork
ruby to
sig r
fork butterfly
1 butterfly
proof burdens
relation describes
vlsi circuits
n bits
w k
design system
inputs and
the convolution
the relational
r r
circuit as
a 2r
and combinators
acc p
of acc
vhdl code
delay element
term variables
combinational part
output so
vhdl description
initial specification
relates a
mathematical specification
of values
relations in
int int
representable by
by instantiation
cr 2
specified by
of pure
causal relations
relation into
the extracted
relation can
described by
in vhdl
for 2
circuit and
the type
d 2
describes a
b 0
data flow
integers to
map 2
translated into
convolution is
1 list
the graphical
type t
their behaviour
circuits in
the design
a 0
part which
simple type
prover and
r w
the user
a stream
3 r
side and
interpretation of
the rewriting
mid line
ruby language
tri n
combinational elements
into vhdl
combinator to
pointwise relation
component dff
assembling 1
the butterflies
ruby it
vhdl translator
a ruby
ruby elements
repetitive combinators
extracted part
proved equivalences
by rossen
each combinational
d 59
implementation conditions
systolic version
instantiated 2
r tri
or combinator
ruby expression
generic circuits
relation conv2
general rewrite
relational inverse
2 r 1
fork 2 r
fst fork 2
the t ruby
r 1 fst
in t ruby
t ruby system
r 1 d
k int fst
2 dimensional convolution
tri 2 r
1 d w
r d w
fst tri 2
butterfly r d
1 fst tri
int fst fork
dff rubyint port
theta int sig
sig sig sig
r 1 snd
1 snd d
int theta int
of type ff
rubyint port map
delay elements d
w k int
d w k
for 2 dimensional
snd d w
g fst fork
circuit for 2
fst d r
snd d 2
the domain side
d 2 r
of the circuit
int sig int
adding relational constraints
1 k int
d w 2
r fst fork
of pure ruby
the range side
dimensional convolution relation
1 fst fork
that the relation
the relation can
the design process
graphical interpretation of
in the t
r 1 k
of a circuit
on the domain
d w r
graphical interpretations of
fork butterfly r
2r 1 d
the delay elements
rdrf 2r 1
as output so
the relation describes
a 2r 1
fst fork 5
dimensional convolution is
elements of pure
t ruby design
map 2 r
1 butterfly r
by adding relational
type ff sig
2r 1 q
translation to vhdl
fst fork butterfly
ff sig fi
the target expression
int n 1
ruby system a
r 1 butterfly
the ruby relation
ruby design system
d r d
of the relation
output so that
by n bits
specified by b
style of design
on the range
stream of values
relation can be
as inputs and
functions and relations
a circuit for
in the domain
is of type
r r r
the domain and
w 2 r
the form of
and z as
1 d r
relations which are
in terms of
the circuit and
and the range
the relation is
in the relation
functions known as
ff sig dub
1 way fork
z as inputs
delay elements corresponding
type ff fi
offset dependent on
t ruby is
domain side of
a 0 values
2 a 2r
d rdrf 2r
sig fst fork
circuits and combinators
circuits starting from
where the combinator
circuit described by
1 an offset
1 dimensional convolution
0 values at
the graphical interpretation
1 map 2
representable by n
a separate theorem
the ruby type
general rewrite rules
g fst d
2r 1 way
the circuit described
each tuple of
implementable circuit as
an equality with
and extraction the
the rewriting process
pure ruby elements
r d rdrf
interpretation of cr
the graphical interpretations
and relational inverse
the relation given
d r fst
of the ruby
0 butterfly 2r
of acc p
fst r sig
and add circuit
pointwise relates two
n int n
the serial composition
n 1 int
4 assembling 1
convolution relation cr
relational constraints to
ruby can be
of t ruby
ruby it is
conv2 r w
assembling 1 3
for designing vlsi
of their behaviour
part which relates
between relational expressions
describing vlsi circuits
vhdl code which
equalities between relational
circuit or combinator
relates a x
lifting to streams
the range up
find a relation
the mid line
b 0 butterfly
the relational description
separate theorem prover
r w q
fork such that
the conventional graphical
available in vhdl
r sig sig
used in ruby
fixed offset such
spread f is
the relation conv2
causal partitioning can
n bit n
00 specified by
int sig fst
t ruby the
ruby relation is
relation conv2 r
over serial composition
in ruby the
two dimensional convolution
