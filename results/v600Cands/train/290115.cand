fault
utilization
spare
tasks
faults
recovery
rms
achievable
deadlines
task
spares
duplex
deadline
priority
schedule
instant
processor
scheduling
crash
periodic
tolerating
intermittent
policy
tmr
transient
tolerated
priorities
arrival
meet
redundancy
completion
permanent
release
monotonic
feasibly
preempts
tolerant
infeasible
feasible
5t
schedulability
nmr
processors
du
responsive
scheduled
period
occurrence
periods
69
69e
interrupted
preempted
utilize
utilizes
incorrect
tolerance
primary
utilized
feasibility
faulty
arrives
prior
345
reexecution
fully
arrivals
5e
aperiodic
tolerate
preemptive
executed
miss
guaranteed
doubled
departure
executing
hardware
preempt
laxity
melhem
rami
santos
doubling
execution
moss
edf
hot
frees
subcases
guarantees
kt
critical
presence
depart
dt
scenario
suspended
meeting
exceed
susceptible
maintaining
resources
ghosts
uncompleted
5we
sasikumar
ccomm
punnekkat
liberato
lauzac
completed
tradeoff
periodically
providing
lesser
response
overhead
reexecutions
feat
ln2
chenyang
alternate
350
uniprocessor
spends
action
consensus
completes
worst
guaranteeing
orozco
nineties
subsequent
satisfying
layland
914
35e
limiting
rate
affects
execute
endeavor
abdelzaher
handled
supposed
delta
rodrigo
icy
906
partially
safer
electrostatic
sylvain
spite
interval
survives
tarek
pol
th
misses
departs
0and
puting
evenly
preferred
55
ready
prespecified
sharma
modeled
lemmas
hostile
proven
54
increment
gamma1
executions
modular
maintained
external
avionics
49
catastrophic
daniel
remapping
expiration
sporadic
confirmation
realm
considers
criticality
restarting
confident
warm
vivek
causes
met
detected
replicas
task set
utilization factor
achievable utilization
minimum achievable
the task
task 2
the utilization
0 5
a fault
of task
task 1
fault occurs
n tasks
feasible schedule
the spare
the processor
just prior
utilization is
duplex system
the tasks
time systems
of tasks
the recovery
the rms
task i
tasks is
task n
software faults
real time
rms policy
occurs just
incorrect computation
is 0
periodic tasks
the deadlines
priority task
a task
single fault
the minimum
rate monotonic
processor is
release times
at time
for recovery
their deadlines
utilization for
the fault
a feasible
re execution
0 69
common spare
rms analysis
two tasks
first instance
fully utilize
th instance
computation time
tasks satisfying
primary processor
intermittent and
deadlines even
crash faults
tasks are
higher priority
all tasks
time instant
factor is
executed tasks
a duplex
that fully
its deadline
be tolerated
prior to
scheduling policy
fully utilizes
fully utilized
partially executed
feasibly scheduled
perform recovery
spare is
meet their
arrival of
task sets
guaranteed a
completion of
and transient
the occurrence
of faults
of periodic
u 0
fault tolerant
of processors
factor u
recovery action
a spare
will meet
monotonic scheduling
the deadline
instance of
tmr system
du 0
transient hardware
spare for
0 345
single spare
critical period
1 5t
the duplex
rms is
permanent crash
computation faults
computation fault
be feasibly
occurrence of
tasks the
faults can
recovery of
s n
task is
meet its
priority tasks
infeasible schedule
responsive systems
tolerant processing
fault tolerance
recovery is
the schedule
tasks that
of release
s 0
the schedulability
utilization factors
redundancy is
the priorities
set s
utilize the
utilizes the
total utilization
faults where
time redundancy
instant of
processors required
space overhead
the arrival
task will
the completion
is fully
largest period
tolerating software
5t 1
0 69e
du s
priority of
fault is
scheduled by
re executed
lower priority
to 0
deadlines in
factor on
tasks will
schedulability of
a processor
the feasibility
n gamma1
spare processor
5e 1
fault assumptions
enough spare
0 5e
next arrival
hard real
or equal
l u
fixed priority
utilization of
factor of
as long
execution of
deadline of
set has
fault affects
tasks s
and intermittent
space redundancy
a tmr
2 du
regular execution
task k
of n
presence of
primary and
is guaranteed
than or
critical applications
long as
one task
of fault
for periodic
the priority
minimum achievable utilization
the minimum achievable
the utilization factor
the task set
is 0 5
of the task
achievable utilization is
of n tasks
utilization factor is
a feasible schedule
just prior to
real time systems
set of tasks
utilization is 0
of task 2
achievable utilization for
utilization factor of
of task 1
of a fault
fault occurs just
occurs just prior
of two tasks
for a set
that the minimum
task set is
the task 2
a single fault
a task set
processor is fully
to 0 5
utilization for a
the processor is
the first instance
of tasks is
intermittent and transient
tasks is 0
instance of task
utilize the processor
is fully utilized
utilizes the processor
a fault occurs
the computation time
to the completion
fully utilize the
of the tasks
can be tolerated
as the utilization
meet their deadlines
of a task
th instance of
at time instant
recovery of task
the rms policy
their deadlines even
partially executed tasks
utilization factor u
guaranteed a feasible
occurrence of a
fully utilizes the
the occurrence of
set of n
prior to the
of periodic tasks
higher priority task
a set of
achievable utilization of
be feasibly scheduled
the task n
the tasks are
of release times
meet its deadline
task set has
rate monotonic scheduling
s n gamma1
of the utilization
l u 0
is guaranteed a
set of periodic
task set with
presence of a
number of processors
a single spare
incorrect computation fault
incorrect computation faults
that fully utilize
a common spare
factor is less
of the rms
tasks satisfying the
if the utilization
a duplex system
the partially executed
the th instance
utilization factor on
arrival of task
and transient hardware
u 0 5
values of release
set of two
computation time of
0 5 for
if the task
re execution of
the set s
1 the minimum
faults can be
equal to 0
the recovery action
the re execution
fault tolerant processing
to perform recovery
all the partially
on a processor
the completion of
that the utilization
completion of task
the total utilization
arrival of the
the task i
set s 0
first instance of
of processors required
be re executed
set s n
if a fault
is less than
arrives at time
or equal to
as long as
task i is
system with a
modeled as the
the schedulability of
set has a
tasks the minimum
and the spare
u 0 69
recovery action is
0 5e 1
is just prior
tasks that fully
the fault occurs
n tasks the
task set on
utilization factor for
the deadline at
task is expected
next arrival of
with a spare
schedule in presence
n tasks satisfying
0 5 proof
du s 0
an incorrect computation
limiting the utilization
that fully utilizes
and software faults
n tasks is
duplex system with
two tasks satisfying
the largest period
values of utilization
deadline of time
software faults where
1 5t 1
has an infeasible
tolerating software faults
total utilization factor
the critical period
tasks will meet
to completion of
a tmr system
spare for recovery
that the task
less than or
long as the
5 for a
the rate monotonic
than or equal
priority of the
hard real time
for a task
task set the
task 2 can
has a feasible
a fault if
the next arrival
0 69 2
set is guaranteed
an infeasible schedule
deadlines even in
the primary processor
can be feasibly
factor is 0
will meet their
entire task set
processors required for
the entire task
its computation time
j th instance
