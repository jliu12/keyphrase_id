getx
tbe
snooping
putx
queue
ld
cache
mandatory
protocol
retry
multicast
transseq
head
requestor
directory
controller
st
incoming
gets
ima
imd
coherence
stj
issued
pulse
broadcast
optional
invalid
ops
clocks
forwardprogress
mia
transaction
tj
owner
prefetch
imdi
request
specification
isa
mask
legal
busy
timestamp
block
retrycount
forwardid
isad
nack
sma
actions
isd
queues
imad
config
verification
transient
transitions
forwardidretrycount
msi
sharers
processor
protocols
clock
invariants
message
outgoing
enqueue
dj
tbes
consistency
iia
methodology
outstanding
trss
lamport
address
gy
pop
victim
history
logical
imds
zot
caf
imdsi
aqp
mxa
timestamps
unsuccessful
cag
msd
tla
hk
augmented
events
memory
multiprocessors
sc
requests
manual
checker
shared
sequentially
specifications
transition
automated
rmo
isdi
getsx
sj
saw
automata
send
timestamping
op
wk
own
messages
histories
flash
verifying
tag
unordered
network
read
lazy
fifo
cpu
mismatch
specifica
runway
replacement
tables
arrives
service
specify
sts
sender
home
records
ai
implementable
field
bugs
count
uwdi
smds
dsj
qsxj
wdj
sgwdj
smad
gwdi
rmreattrcyh
bilir
ingests
suwdj
multifacet
mccurdy
witness
id
timestamped
gibbons
equals
controllers
served
murj
requestors
msa
smd
21364
load
caching
requested
atomic
omits
node
lds
marty
relinquishing
o1
insert
increment
listed
mad
ag
store
tedious
masks
multiprocessor
event
atomically
collin
proofs
seq
mj
fischer
serviced
room
at head
z z
mandatory queue
address queue
broadcast snooping
head of
multicast snooping
getx have
snooping protocol
ld st
cache controller
data queue
not seen
optional queue
above same
seen data
busy invalid
invalid issued
of incoming
incoming address
address network
l z
issued getx
queue address
gets have
seen getx
the ld
block b
the tbe
a ld
z l
legal global
data yet
seen gets
outgoing address
data message
prefetch at
address of
the protocol
global history
of mandatory
the cache
table based
the mandatory
retry count
in outgoing
this block
logical clocks
of optional
incoming data
from tbe
have seen
the multicast
transient states
st at
have not
st data
own getx
service ld
issued gets
enqueue the
write prefetch
other getx
then saw
saw other
own gets
snooping memory
putx have
other gets
data network
as above
send data
snooping cache
specification methodology
memory model
sequentially consistent
observe our
address b
sequential consistency
augmented protocol
recent st
victim block
getx request
global order
based specification
the address
cache coherence
coherence protocol
memory controller
the retry
tbe to
i tj
a getx
pop mandatory
mask at
unsuccessful mask
forwardprogress bit
in ops
insert message
b sender
ld at
tbe pop
stj dj
order occurs
only prefetch
sender n
controller transitions
cache block
the block
local clock
level specification
the directory
occurs when
dj i
to requestor
hk l
is sequentially
the augmented
clocks and
a processor
processor node
transaction for
events actions
of transaction
program order
message at
address messages
modified have
own putx
gets request
isa ima
ld or
of sharers
busy shared
retry field
lamport clocks
ld enqueue
a putx
global histories
a tbe
controller actions
incoming queues
directory node
pulse number
gets or
requestor is
incoming queue
shared issued
seen putx
detailed low
data from
a gets
states events
memory nodes
queue is
a cache
model checker
request in
data field
same as
lazy caching
outstanding transaction
action description
a retry
low level
is set
the broadcast
another processor
and transitions
equals that
read write
a directory
the head
coherence requests
st from
processor n
is legal
queue and
we observe
to memory
o automata
actions action
current owner
queue for
for verification
actions and
snooping protocols
description block
to tbe
legal with
gets putx
isad imad
event description
owner equal
queue incoming
of victim
an msi
i invalid
optional replacement
issued putx
at head of
z z z
head of incoming
have not seen
z l z
above same as
as above same
busy invalid issued
same as above
queue address of
getx have not
the ld st
incoming address queue
issued getx have
head of mandatory
broadcast snooping protocol
of mandatory queue
not seen data
of incoming address
the mandatory queue
l z z
occurs when we
head of optional
outgoing address queue
multicast snooping protocol
seen getx have
of optional queue
getx have seen
prefetch at head
for this block
when we observe
incoming data queue
invalid issued getx
in outgoing address
of incoming data
st data queue
seen data yet
table based specification
ld st data
gets have not
z z l
of the mandatory
of the protocol
snooping memory controller
st at head
observe our own
we observe our
issued gets have
send data from
invalid issued gets
snooping cache controller
read write prefetch
then saw other
on the ld
enqueue the data
message at head
not seen getx
l z l
the cache controller
most recent st
have seen data
have seen getx
logical clocks and
seen gets have
the augmented protocol
the multicast snooping
the address network
mandatory queue is
legal global history
the broadcast snooping
not seen gets
mandatory queue and
the global order
is sequentially consistent
request from another
putx have not
ld st at
global order occurs
queue with type
mandatory queue address
address queue with
read only prefetch
mask at head
insert message in
address b sender
message in outgoing
pop mandatory queue
gets have seen
write prefetch at
a legal global
tbe pop mandatory
from tbe pop
b sender n
optional queue address
order occurs when
dj i tj
retry count of
request in the
of the augmented
the states events
actions and transitions
events actions and
the head of
from another processor
head of the
the data on
based specification methodology
ld enqueue the
outstanding transaction for
a ld or
saw other gets
from the tbe
busy shared issued
a ld enqueue
have seen gets
a detailed low
actions action description
shared issued getx
detailed low level
which no cache
no cache block
ld st from
states events actions
the retry count
if a ld
or data yet
service ld st
block is available
multicast snooping cache
cache coherence protocol
for block b
at the head
transition of the
low level specification
with logical clocks
equals that of
in the global
a memory model
i o automata
data on the
the current owner
controller actions action
address of transaction
not seen putx
events event description
snooping protocol with
in the tbe
ld at head
in ops relative
legal global histories
of the tbe
st from tbe
address queue data
st in ops
above address of
modified issued putx
queue is for
address queue for
own getx own
processor occurs when
for a retry
the tbe to
mandatory queue read
description block b
i modified issued
cache controller transitions
methodology for proving
ops relative to
own gets own
of victim block
room in outgoing
multicast snooping memory
of message at
event description block
address of read
forwardprogress bit is
owner equal to
recent st in
of incoming queue
data yet then
owner at head
unsuccessful mask at
n s clock
tbe to the
address of message
stj dj i
of transaction at
address of victim
another processor occurs
data from cache
yet then saw
data field of
from cache to
address queue same
the stable state
a multicast snooping
is legal with
manual proof that
broadcast snooping memory
a ld st
