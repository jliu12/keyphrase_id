views
warehouse
materialized
query
selection
maintenance
cubes
queries
olap
heuristics
competitive
constraint
heuristic
select
selected
optimize
materialize
polynomial
maintained
guarantee
view graph
view selection
greedy algorithm
view graphs
selection problem
benefit per
level greedy
unit space
absolute benefit
view v
benefit function
data warehouse
per unit
monotonicity property
update costs
graph g
views in
without updates
optimal benefit
space occupied
greedy interchange
achievable using
benefit achievable
interchange algorithm
views m
algorithm 3
materialized views
much space
solution m
whose benefit
total query
data cubes
selected views
space constraint
total space
function b
b satisfies
maximum benefit
outgoing edges
maintenance cost
2s units
algorithm algorithm
c selected
query response
node u
views to
view maintenance
selection of
algorithm produces
already selected
base relations
structures selected
greedy manner
incremental benefits
given quantity
materialized view
total maintenance
time heuristics
performance guarantee
set o
cost associated
greedy heuristic
query q
views that
heuristics for
arbitrary sets
see algorithm
graph without
data cube
minimum set
g without
running time
set of views
view selection problem
view graph g
per unit space
benefit per unit
level greedy algorithm
units of space
absolute benefit of
query view graph
inner level greedy
selection problem in
m is at
space occupied by
monotonicity property for
benefit of m
greedy interchange algorithm
graph with indexes
benefit achievable using
view graph with
used by m
optimal benefit achievable
much space as
using as much
achievable using as
space as that
selection of views
ao greedy algorithm
total space occupied
unit space of
view graph for
solution m that
m that uses
greedy algorithm algorithm
expression ao dag
satisfies the monotonicity
algorithm algorithm 3
benefit function b
select a set
greedy algorithm produces
also the absolute
view selection in
expression a dag
maximum benefit per
function b satisfies
total query response
b satisfies the
occupied by the
constraint that the
produces a solution
uses at most
m with respect
respect to m
query response time
benefit of the
updates the benefit
minimizes the quantity
benefit of c
view graphs in
without updates and
updates and a
whose benefit per
set of structures
unit space with
without updates the
m that minimizes
2s units of
query view graphs
algorithm produces a
property for any
graph g and
satisfy the monotonicity
times the optimal
set c selected
space with respect
set of queries
associated with it
g and a
unit space is
data warehouse we
minimum set cover
view graphs with
time heuristics for
given a quantity
cost function associated
given quantity s
see algorithm 3
computing u from
g without updates
respect to arbitrary
algorithm given g
