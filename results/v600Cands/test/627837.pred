analogical
reuse
specifications
matching
analogies
analogy
specification
spec
query
reusable
similarity
software
hierarchy
retrieved
library
reasoning
reusing
program
retrieval
candidate
reusability
formal
similarities
descriptions
postcondition
analogous
component
investigations
facilitate
relationships
grained
determination
retrieve
development
facilitates
logic
semantic
matching process
analogical matching
analogical matches
query specification
software reuse
software components
branch subproblems
query spec
algorithm match
formal specifications
two terms
sort hierarchy
analogical match
two expressions
match term
based heuristic
matching algorithm
equivalence class
reusable software
analogical reasoning
modification process
partial matches
program modification
existing components
specification of
analogies between
query specifications
query component
tiered hierarchy
dbllist ensures
input expressions
reusable components
components based
software component
specifications of
candidate specifications
reuse system
component specification
ff 7
reuse framework
dbllist element
existing component
existing specification
argument order
automated reasoning
matching algorithms
process generates
hierarchy of
commutative operators
method specification
similarity based
formal methods
reuse based
reasoning systems
determine software
program synthesis
sorted predicate
analogical relationships
identical associations
given component
equivalence based
doublelist modifies
e matching
two specifications
candidate components
predicate connectives
implementation query
method destroy
formally specified
domain knowledge
specifications can
conceptual distance
computing similarity
modifying an
specification query
sorted specifications
knowledge base
incorporated into
two methods
analogical matching process
set of analogical
distance between two
algorithm match term
matching two terms
analogical matches between
based on analogy
branch subproblems are
tiered hierarchy of
subproblems are generated
matching process generates
algorithm match expr
modifies dbllist ensures
two tiered hierarchy
algorithm for matching
reusable software components
components based on
components to satisfy
matching two expressions
query specification and
modifies stack ensures
analogical match is
specification and the
reuse based on
case based reasoning
call this approach
software components the
components that are
two input expressions
determine software reuse
numbers of arguments
based on analogies
domain specific information
stack ensures top
method doublelist modifies
order sorted predicate
specifications is used
matches two operators
sorted predicate logic
match else return
ensures top stack
specification query spec
existing and query
doublelist modifies dbllist
analogical relationships between
match term case
implementation query program
similarity based techniques
stack modifies stack
relationships between the
used to determine
formal specifications of
program that satisfies
match can be
order sorted specifications
components that have
method of a
specifications can be
set of candidate
incorporated into the
based on the
satisfy the query
process generates a
based on similarity
used to guide
similarity between the
order to increase
specification of the
applied to the
specification of a
empty lists case
query specification are
else return case
head dbllist element
generated whenever the
determination of reusable
sought between the
grained determination of
structure based heuristic
match input two
software reuse the
program modification model
question when are
