invariants
invariant
incremental
optimizations
program
detection
upgrades
refactoring
operational
executions
optimization
implementations
isolation
incompatibilities
abstraction
likely
mentation
verifying
predicting
dynamic
timizations
program points
program point
incremental algorithm
invariant detection
simple incremental
incremental algorithms
invariant detector
pass algorithm
variable hierarchy
target program
dynamic invariant
equal variables
derived variables
constant variables
equivalence set
likely invariants
space usage
equivalence sets
dynamic detection
trace file
sample dependent
batch algorithm
trace data
operational abstraction
different program
component upgrades
dependent invariants
pass batch
hierarchy optimization
properties are
partial order
multiple program
properties that
exit point
detection of
algorithms and
test suites
variables optimization
weaker invariants
candidate invariant
optimization opportunities
antecedent properties
redundant properties
extracting implicit
invariant x
algorithm section
checking invariants
candidate invariants
observed values
test cases
section 8
g v
program executions
two variables
simple incremental algorithm
multi pass algorithm
multi pass bottom
top down algorithm
number of invariants
dynamic invariant detection
program points the
algorithms and optimizations
top down incremental
dynamic detection of
flex multi pass
bottom up incremental
detection of likely
number of program
multiple program points
utilities multi pass
sample is processed
pass batch algorithm
incremental algorithm and
memory before processing
sample dependent invariants
incremental algorithms and
program points are
multi pass batch
invariant detection is
properties are checked
dynamically discovering likely
number of samples
variables for example
invariant detector may
top down algorithms
d the corresponding
suppression of weaker
antecedent is falsified
program point is
invariant detection and
incremental algorithms are
incremental algorithm section
remote program sampling
grammar of properties
incremental algorithm the
time and space
discovering likely program
likely program invariants
properties that are
number of variables
run the target
automatic anomaly detection
algorithms run out
properties hold other
without the optimizations
processed independently the
variables are equal
equivalence sets of
quickly detecting relevant
invariant detection dynamic
object oriented component
algorithm the bottom
invariant is suppressed
four optimizations and
algorithms for invariant
relevant program invariants
invariants over the
processed the samples
comparison of algorithms
non leaf program
hold other properties
incremental algorithm can
via operational abstraction
top down figure
program points at
debugging algebraic specifications
simple java classes
algorithms section 8
falsification of the
must be instantiated
program point then
case runtime is
