oading
surrogate
engine
device
mobile
inference
offloading
pervasive
triggering
platform
bandwidth
trigger
prototype
partition
partitioning
oad
devices
candidate
resource
composite
con
adaptations
runtime
guration
adaptive
driven
delity
constrained
execution
overhead
decision
adaptation
delivering
oading inference
inference engine
mobile device
oading platform
candidate partition
application execution
partition plan
execution graph
adaptive of
pervasive computing
oading system
fuzzy control
partition plans
wireless bandwidth
oading triggering
average interaction
decision making
program objects
interaction stretch
mobile devices
application partitioning
bandwidth requirement
memory size
remote data
linguistic variable
data accesses
control model
memory constraint
oading rules
partitioning cost
triggering inference
remote function
splitting large
prototype experiments
threshold based
javanote application
memory utilization
java class
available memory
cost metric
wireless network
total memory
plan generation
membership function
execution time
total execution
oading action
interaction delay
engine decides
remote interaction
composite metric
approaches figure
smaller memory
oading decisions
surrogate discovery
runtime of
computing environment
remote execution
graph edge
graph node
partition selection
java heap
simple threshold
approach different
resource constrained
available bandwidth
current prototype
component based
function calls
constrained devices
expensive application
application speci
oading inference engine
adaptive of oading
candidate partition plan
decision making approaches
different decision making
candidate partition plans
average interaction stretch
fuzzy control model
total of oading
application execution graph
pervasive computing environment
partition plan generation
generic fuzzy inference
runtime of oading
four different decision
fuzzy inference engine
bandwidth requirement by
mobile device and
total execution time
program objects should
mobile device to
splitting large classes
making approaches figure
utilization on the
simple threshold based
inference engine decides
triggers of oading
oading triggering inference
memory utilization on
approach different decision
remote data accesses
new memory utilization
objects should be
mobile device is
total bandwidth requirement
function calls and
classes that are
illustrated by figure
remote function calls
complete of oading
largest edge cost
linguistic variable availmem
simulations and prototype
mobile device then
available memory is
2 resource monitoring
4 surrogate discovery
oading platform the
application partitioning the
bandwidth requirements and
application execution monitoring
java classes that
lru algorithm compared
whether of oading
amount of free
trigger approach different
remote function call
stochastic con dence
inference engine uses
response time stretch
making problems in
partitioning cost metric
expensive application rewriting
requirements and interaction
transparent rpcs between
fuzzy control based
resource constrained devices
frequencies and have
best partition plan
memory of oading
uses a composite
linguistic of oading
partition plans generated
con gurability and
target memory utilization
enable more precise
decision making problems
best partitioning from
