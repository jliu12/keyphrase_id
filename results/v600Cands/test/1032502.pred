cache
fetch
instructions
instruction
trace
branch
branches
blocks
reordering
workloads
reorder
code
rate
hardware
executed
consecutive
prediction
optimizations
aggressive
compile
target
processor
hit
optimize
temporal
mapping
software
frequent
traces000000000000000000000000000000000000111111111111111111111111111111111111111111111
ecuted
basic blocks
fetch unit
trace cache
basic block
cache miss
instruction cache
miss rate
core fetch
sequence breaks
branch misprediction
software trace
instruction fetch
conditional branches
instructions per
per access
branch threshold
code reordering
subroutine calls
branch prediction
code layout
integer codes
branch predictor
htc alone
popular traces
useful instructions
hardware trace
per cycle
better results
results than
cache lines
taken branches
code sequences
execution path
blocks in
large codes
misprediction rate
code sequentiality
fill buffer
fetch mechanism
double size
fetched instructions
instructions from
codes with
prediction accuracy
cache line
code replication
unconditional branches
consecutive instructions
profile information
execution sequences
instructions executed
memory positions
reordering technique
loop branches
sequential fetch
subroutine call
size alone
predictor throughput
32kb instruction
small htc
popular sequences
indirect jumps
execution core
fixed behavior
consecutive basic
execution paths
high instruction
rate reduction
fetch performance
cache misses
sequentially executed
cache miss rate
core fetch unit
software trace cache
basic blocks in
instruction cache miss
hardware trace cache
similar or better
results than a
branch prediction accuracy
blocks in a
fetched instructions per
instructions per access
loop basic blocks
stc and the
branch misprediction rate
number of fetched
codes with few
instructions per cycle
number of instructions
stc and a
consecutive basic blocks
execution core of
josep torrellas and
trace cache the
instruction cache i
double size alone
miss rate reduction
percentage of sequence
break the execution
basic blocks executed
basic blocks to
branch predictor throughput
32kb instruction cache
large codes with
running the training
unused basic blocks
htc of double
subroutine calls the
basic block transitions
code reordering technique
trace cache htc
consecutive instructions executed
sequential fetch unit
trace cache stc
sequences of basic
instruction cache misses
branches with a
fetch unit is
number of useful
number of consecutive
average number of
combination of both
fetch performance the
offer similar or
10 3 instructions
per cycle obtained
pc relative unconditional
sequentially executed basic
instruction cache hit
decreasing frequency of
reduction offered by
floating point codes
popular traces in
main execution path
reorder the basic
