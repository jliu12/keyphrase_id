circuits
circuit
abstract
optimizations
interpretation
hardware
posteriori
stage
languages
resource
reconfigurable
generator
configurable
verilog
programmer
generation
fourier
abstraction
language
combinatorial
correctness
verified
express
transform
generic
guarantees
programs
abstract interpretation
generated code
let rec
fun x
rap languages
code value
floating point
input vector
resource bounded
hardware description
deployment platform
staging constructs
aware programming
monadic style
combinatorial circuits
complex arithmetic
type system
posteriori optimizations
manifest interfaces
multiplications additions
efficient circuits
fft function
static type
fast fourier
development platform
languages provide
abstract domain
code duplication
partial evaluation
description languages
stage computation
tukey recurrence
look inside
programming rap
generated circuits
stage programming
concrete type
specific optimizations
generated programs
circuit realizable
monadic sharing
staging annotations
reconfigurable hardware
fft algorithm
fourier transform
domain specific
type systems
code type
program generators
generation of
complex number
abstraction mechanisms
generator and
connect operator
generated computations
double double double
mg l1 l2
resource aware programming
use of abstract
fast fourier transform
let rec mg
floating point multiplications
rec mg l1
hardware description languages
cooley tukey recurrence
abstract interpretation is
generated by fftw
abstract interpretation on
programming v 62
multi stage programming
bind liftcm retn_v
abstract interpretation and
development platform and
aware programming rap
bind liftcm retn_va
concrete type to
domain specific optimizations
generated code we
guarantees about the
number of floating
abstract interpretation of
information about the
computer programming v
avoiding code duplication
advantage of configurable
round off errors
expressed within the
multiplications additions in
languages are primarily
single assignment programming
use abstract interpretation
embedding a microarchitectural
int __fun_def double
solutions in configurable
intensional analysis of
add staging annotations
non standard run
complex arithmetic functions
circuits are correct
abstract interpretation just
bind rets mult_s
staged fft function
paper proposes the
language to reconfigurable
interpretation just as
computes the fft
