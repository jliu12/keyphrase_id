pebble
automata
fo
string
automaton
strings
alphabets
register
xml
francez
kaminski
alphabet
positions
alternation
expressiveness
infinite
languages
monadic
logics
position
deterministic
logic
exp
expressive
regular
variants
erence
trees
decidability
language
finite
express
undecidability
pebble automata
infinite alphabets
input string
register automata
kaminski and
data values
weak 1d
strong 1d
string w
weak 1n
state q
communication complexity
position l
automata models
decision problems
automata and
theoretic assumptions
regular languages
current symbol
head automata
current pebble
weak pas
finite alphabet
finite set
transition relation
strings over
string u
initial configuration
form u
automaton can
place new
pebble assignment
stack discipline
n di
pebble model
k pebble
strong pebble
consider strings
split strings
register assignment
final configurations
finite alphabets
infinite alphabet
standard decision
communication protocol
non deterministic
q 0
initial register
current position
monadic second
first position
assume w
containment of
kaminski and francez
pebble is placed
u and v
complexity theoretic assumptions
strings of the
hypersets over d
multi head automata
pebble automata and
sets of configurations
finite set of
set of states
decision problems for
hard for nlogspace
standard decision problems
initial register assignment
reverse closed i
based on communication
configuration of a
set of symbols
string w is
monadic second order
position of the
placed on the
set of transitions
second order logic
v where u
q is the
state q and
erent data values
lift current pebble
notion of regular
b on w
strong pebble automata
new pebble is
ras and pas
w a configuration
ra a that
finite memory automata
strings over infinite
non emptiness of
pebble automata are
register and pebble
concatenation and kleene
definable in mso
set of pebbles
automata and their
non emptiness is
k pebble automaton
defined in mso
first introduce some
