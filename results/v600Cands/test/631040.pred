versions
module
configuration
software
principle
revision
prog
comp
gandalf
jasmine
intensional
relevant
controlling
families
development
component
integrated
programs
configurations
environments
language
versions of
fast version
version control
relevant version
version language
complete system
version of
structure principle
version names
version v
vanilla version
variant structure
version space
possible world
software configuration
different versions
software development
complete systems
o files
least upper
refinement relation
every file
one version
configuration manager
variant substructure
appropriate version
substructure principle
join versions
relevant versions
y version
software configurations
every component
c programs
software engineering
would allow
different components
formally presents
versions would
integrating noninterfering
different programmers
russian bulgarian
possible versions
software databases
version instead
version name
local significance
configuration systems
intensional logic
version algebra
dictionary order
maria orange version
keir apple version
orange keir apple
maria orange keir
variant structure principle
versions of the
least upper bound
version of the
version of component
keir apple fast
version v of
version of a
version of each
string to string
variant substructure principle
software engineering environment
development control based
relevant version of
software development control
complete systems and
versions of components
versions of complete
concept of variant
version of every
version which is
suppose for example
used to create
example one could
different versions of
representation of families
set of versions
proc keir apple
version is not
user interface would
relation between versions
using the variant
version language is
notion of version
software system modelling
general version possible
maria and keir
integrated environments such
version most relevant
efficient applicative data
require that every
managing reusable software
component if it
approach to version
appropriate version of
upper bound operator
hierarchically structured entities
notion of versions
modules that it
large software development
extension and contraction
infinite precision arithmetic
configuration manager the
configuration management systems
software configuration systems
engineering software configurations
noninterfering versions of
interface would be
system modelling facility
exists otherwise we
integrating noninterfering versions
extensible software environments
