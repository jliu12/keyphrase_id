students
participants
testing
compilation
continuous
developer
regression
developers
tests
worked
statistically
feedback
development
student
prioritization
tool
productivity
impressions
experiment
distracting
distract
factoring
monitoring
software
recommend
code
experimental
empirical
dev
controlled
programming
cont
methodology
assignment
continuous testing
continuous compilation
test suite
problem set
time worked
test suites
statistically significant
students who
regression errors
emacs plug
testing tool
problem sets
development environment
regression testing
regression error
control group
mode line
success rate
regression test
course staff
participants were
provided test
test cases
tests in
testing in
manual testing
using continuous
throughout development
incremental compilation
java experience
non participants
development time
software engineering
development environments
likely to
statistically significantly
rapid feedback
would recommend
significant effects
experimental treatments
run tests
java ide
participants reported
failing tests
testing group
recommend the
programming experience
testing were
complete the
work habits
wasted development
modern ide
test frequency
student solutions
student developers
emacs development
junit test
better code
qualitative feedback
regression tests
tested throughout
testing during
students used
used continuous
test prioritization
qualitative results
continuous execution
asynchronous notification
test errors
driven development
first development
compilation errors
running tests
initial development
programming task
continuous testing tool
continuous testing can
run the tests
likely to complete
continuous testing in
continuous compilation and
continuous testing and
continuous testing group
regression test suite
years of java
tool to others
statistically significant effects
recommend the tool
would recommend the
continuous testing were
threats to validity
using continuous testing
complete the assignment
tests in the
regression tests in
continuous testing uses
continuous compilation a
asynchronous notification of
provided test suite
90 would recommend
first problem set
test first development
compilation and continuous
provided test suites
wasted development time
students were encouraged
perceptions of the
continuous testing to
continuous compilation group
volunteered for the
significantly more likely
participants who were
david saff michael
completed the assignment
provided by continuous
running the tests
programming by demonstration
number of participants
michael d ernst
see section 3
whether the extra
continuously run regression
participants using continuous
feature in modern
treatment predicts correctness
participants did not
background as the
practice of test
participants and non
testing during development
students who volunteered
reducing wasted development
state based formal
feedback to developers
used continuous testing
testing and continuous
tests this paper
4 years of
multiple choice questions
initial failing tests
excess cycles on
likely to participate
effective regression testing
prioritization 36 26
second problem set
run regression tests
striving for compatibility
evolution of software
