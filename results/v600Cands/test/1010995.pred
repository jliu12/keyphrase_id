erlang
client
starvation
clients
specication
resource
exclusion
verication
server
ericsson
checking
pathfinder
alternation
transition
translate
translation
calculus
tool
ication
development
lock
verify
programs
crl specication
model checking
client 3
mutual exclusion
client 1
generic server
erlang programs
pending list
demanded resources
transition system
handle call
model checker
critical section
pending processes
locker algorithm
gen server
supervision tree
erlang code
two resources
erlang modules
call function
repeatedly request
erlang september
erlang program
locker resources
clients repeatedly
three clients
get access
verication of
starvation problem
demanded resource
erlang processes
locker process
case study
specication language
source transformation
case statements
checking tool
formal verication
design patterns
deadlock mutual
resource b
requests b
within ericsson
process identier
check_availables resources
implementation language
translate erlang
gen_server_reply client
obtainables locks
erlang transformation
3 requests
causes client
classical properties
starvation since
ald ebaran
formally veried
atm switch
resources are available
gen server call
crl specication the
clients repeatedly request
demanded resources are
mutual exclusion property
mutual exclusion and
access pending access
clients and locker
pending access pending
absence of deadlock
clients and resources
access pending 3
handle call function
gets access to
one crl specication
loop locker resources
functions with side
access to the
number of clients
resource and the
model checking tool
source to source
model checking for
3 access pending
access 2 pending
implementation in erlang
list of resources
specication the erlang
pending list access
28 2005 tallinn
want to access
deadlock mutual exclusion
causes client 3
erlang september 26
resource a client
client 3 requests
client is notied
resource the client
callback module the
check_availables resources locks
list of clients
csar ald ebaran
generic server design
specication is used
request of a
locker is implemented
access 1 pending
alternation free calculus
exclusion and no
erlang program for
request an arbitrary
repeatedly request an
server call function
301 atm switch
requests both resources
pending list in
client 2 releases
locker process is
client 1 releases
erlang september 16
transition system the
starvation is an
gen_server_reply client ok
client 1 requests
implemented in erlang
requests resource a
starvation in the
releases and requests
self locker self
end locks false
september 26 28
client 3 to
using the generic
non deterministic choices
functions that contain
transition system is
16 2006 portland
september 16 16
using model checking
