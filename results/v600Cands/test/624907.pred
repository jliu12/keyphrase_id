decisions
maintenance
specialization
delocalized
program
software
decision
abstraction
engineering
specifications
understand
documenting
generalization
understanding
activities
design decisions
design information
reverse engineering
design decision
software engineering
software maintenance
maintenance and
delocalized plans
programming languages
programming language
program development
software reuse
maintenance programmer
representation must
interrelated decisions
reuse activities
toronto ontario
assignment statements
computing logarithms
decisions in
target machine
computations may
programming constructs
languages provide
information hiding
program specification
limited set
several approaches
maintenance and reuse
representation for design
program indicates that
generalization and specialization
design decisions in
software engineering notes
engineering notes v
sigsoft software engineering
examination of the
toronto ontario canada
compensate for delocalized
documentation to compensate
encapsulation and interleaving
save the result
reverse engineering and
trying to understand
design decisions can
specifications are often
designing documentation to
decision to use
design information to
function and relation
representation must be
function that when
buss john henshaw
example of generalization
transformation approaches and
categories of design
composition and decomposition
understand the program
erich buss john
variables fa fb
data and procedure
program transformation approaches
thought of as
harder to understand
decisions can be
makes the resulting
responsible for computing
software maintenance and
early stages of
effort required to
limited set of
another example of
structure of the
program can be
parts of the
software engineering p
design of a
software engineering v
