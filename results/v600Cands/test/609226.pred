reflective
reification
interpreter
reified
reflection
java
interpreters
exp
object
specially
metaobject
tailored
transformation
generic
exemplified
meta
languages
semantics
oriented
prototype
interpretation
security
environment
transformational
selective
objects
protocols
prog
base
programming
programs
program
lightweight
reflective interpreter
dispatch object
reified representation
generic reification
class instance
method call
reflective programming
reification technique
base representation
class pair
environment locale
eval environment
reification scheme
data eval
arg m11
reflective systems
original class
reflection in
extends exp
reification operator
interpreter definition
specially tailored
original interpreter
interpreter in
see figure
class name
method m1
datalist datalist
instancelink datalist
interpreter is
class class
object oriented
program transformation
dispatch objects
reified object
reflective interpreters
field referent
class expmethod
active representation
tailored mops
local environment
accessible representation
reflective tower
reflective programs
oriented interpreters
interpretation layer
using reflection
data lookupdata
method reify
class expid
reflective towers
reflective languages
prototype based
dispatch class
reflective system
lookupdata string
exemplified in
runtime system
level n
interpreter program
return new
security properties
user programs
provides access
syntax tree
language designers
reflective one
metacircular interpreter
metaobject protocols
eval_original locale
method eval
datalist lookup
field instancelink
expmethod extends
representation instance
deification operators
reification process
field list
reification operation
side expression
global environment
reflective capabilities
definition of
current representation
non reflective interpreter
data eval environment
eval environment locale
arg m 1k
fst and snd
specially tailored mops
reflective interpreter in
reification of the
interpreter at level
generic reification technique
representation to the
exemplified in section
object oriented interpreters
class instancelink datalist
system out println
instancelink datalist datalist
reified representation is
instance see figure
extends exp private
representation is active
environment argse add
reflective interpreter is
interpreter in order
generic reification scheme
data lookupdata string
dispatch object and
interpreter s memory
lookupdata string name
definition of the
provides access to
work on reflective
use of reflection
datalist datalist field
reflective programming in
class expmethod extends
dispatch object instance
return this datalist
examples of reflective
accessible representation of
hand side expression
string name return
original interpreter definition
datalist lookup name
name return this
efficiency and security
reified representation of
expmethod extends exp
smith s seminal
see figure 12
list of methods
provide access to
value denoted by
representation of the
object oriented languages
dispatch class instance
add reifiedrep this
smith like reflection
reflective programming is
points back from
incoming method calls
baseinstance say b
meta_level booleanvalue return
representation and a
object protocols mops
infinite tower of
parser java jjt
instancelink denotes the
generated dispatch class
level n interprets
method lookupmethod string
constraints are different
extra interpretation layer
interest in practical
others expressive power
datalist datalist instance
called meta object
fn name referent
called metaj metaj
seminal work on
new tower level
java java2expvisitor java
