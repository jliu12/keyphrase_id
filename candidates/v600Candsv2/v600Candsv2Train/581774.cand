assertions
inference
rules
syntactically
firings
meta
rule
unification
antecedent
closure
union
henglein
database
assertion
equivalence
transitive
hs
jdj
antecedents
merge
bottom
congruence
ground
cubic
presentations
oe
ti
pi
calculus
parses
atom
logic
grammar
en
predicate
prefix
grammars
datalog
subtype
jp
transitivity
typed
cardelli
parsing
asserted
clashes
interned
satta
bilexical
flow
slot
expressions
abadi
appearing
typability
cky
subtransitive
horn
subterms
obsolete
substitutions
oei
jjdjj
typable
accepts
semantically
subscrpt
firing
chaining
recursive
clauses
clearer
closed
bn
runs
deductive
inspection
closedness
pseudo
quadratic
log
erasure
decidable
theorems
pushdown
zi
polylog
erase
nonterminal
automaton
subtyping
language
wi
invariant
unbound
substitution
fig
argues
equate
subexpression
phi
running
sub
inferring
hy
classical
derivable
doubles
equality
interconvertbility
glein
multitext
intercovertability
polakow
fahndrich
alyze
kasimi
cons
pairing
predicates
expression
atoms
assignment
languages
string
presentation
renamed
tecedents
jii
pij
sertions
jorgensen
jpr
reachability
static
presenta
pretation
tabled
nederhof
typing
conclusion
analyses
proportional
enumerate
italic
ml
involving
correctness
givan
nff
melamed
xsb
clean
hu
singleton
object
cocke
sting
chomsky
pfenning
watkins
eisner
relation
nondeterministic
breaking
maintain
converse
hoe
sentations
bondorf
barrier
variety
bols
assign
inferential
unprocessed
tabulation
parsers
essence
mcallester
evalu
check
beats
younger
acceptability
caption
palsberg
distinct
online
indexing
renderings
giorgio
relational
covariant
ackermann
programs
bottleneck
pablo
plus
meta complexity
syntactically local
complexity theorem
rule set
union find
local rule
find assertions
r d
inference rules
rule sets
equivalence relation
o n
find rule
terms involved
type expressions
o en
congruence closure
unification algorithm
union operation
flow analysis
sub cubic
running time
set r
cubic time
linear time
prefix firings
jp r
sub transitive
classical pseudo
closure algorithm
hs ti
type expression
transitive closure
every term
rules maintain
recursive types
analysis algorithms
n log
equivalence class
occurs check
semantically local
merge graph
o jdj
find value
dynamic transitive
database e
logic programs
single rule
first order
context free
appropriate equivalence
efficient inference
closed type
algorithm runs
union operations
input database
simple terms
type inference
data flow
database d
logic program
form find
well typed
analysis algorithm
d j
second meta
derived assertions
transitive data
derived assertion
rules generate
complexity theorems
prefix firing
en running
obsolete find
slot name
y path
jdj jp
cardelli object
common find
n find
given term
pi 1
order terms
complexity analysis
transitivity rule
form input
pi 2
abadi cardelli
partial types
oe 1
x y
assign x
arbitrary rule
quadratic algorithm
find consistent
database contains
n time
terms appearing
rule appears
time decidable
union u
find values
static analysis
pseudo code
object calculus
based analysis
theorem 3
log n
n terms
meta complexity theorem
syntactically local rule
bottom up logic
rule set r
bottom up bound
union find rule
rules in r
set of assertions
rules in figure
r d j
sub cubic time
local rule sets
runs in o
find rule set
solved in sub
classical pseudo code
assertions in d
o n log
static analysis algorithms
flow analysis algorithm
r r d
jp r r
dynamic transitive closure
determined by inspection
find s f
n find assertions
maintain the invariant
first order terms
appropriate equivalence relation
e is closed
local rule set
en running time
henglein s algorithm
henglein s quadratic
abadi cardelli object
log n find
cardelli object calculus
o en running
o n terms
union find consistent
obsolete find assertions
meta complexity theorems
transitive data flow
n terms involved
complexity than classical
jdj jp r
clearer and simpler
find w f
second meta complexity
values are terms
sub transitive data
d using rules
x y path
p t w
presentations are clearer
transitive closure algorithm
atom i e
arbitrary rule sets
d we let
congruence closure algorithm
database is assumed
closure of d
computed in o
n log n
data flow analysis
number of assertions
set based analysis
o n 3
p x y
polynomial time decidable
use the term
type inference algorithm
oe i 1
set of ground
