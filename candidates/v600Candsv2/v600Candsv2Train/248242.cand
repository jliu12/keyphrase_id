codefinder
repository
retrieval
activation
henninger
peel
repositories
spreading
indexing
pane
emacs
kandor
query
reuse
frakes
faceted
document
users
reusable
lisp
retrieved
reformulation
vm
items
text
delete
salton
kill
fischer
classification
prieto
belew
facets
retrieve
nieper
furnas
helgon
documents
people
mozer
lemke
item
decay
associative
reusability
devanbu
vocabulary
seeding
caldiera
kintsch
idf
relevance
enumerated
organizations
basili
az
biggerstaff
effectiveness
indexes
buckley
developers
libraries
objects
software
keywords
gnu
gnus
foltz
gandel
yunwen
quit
gerhard
empirical
adaptive
front
mcgill
curtis
incrementally
feedback
alta
rabbit
aka
pole
studies
freeman
aliasing
click
relationships
editor
attribute
button
megaprogramming
belkin
cognitive
efforts
weights
queries
matching
evolve
scribe
halasz
fan
extracted
unix
schneider
artifacts
investments
richter
retrieving
mail
unlimited
df
weighting
patel
subjects
reply
thesaurus
weight
activity
word
vista
croft
hierarchy
evolutionary
assets
link
files
cues
discrimination
adequately
phrases
slots
ill
locating
synonyms
tools
argon
lassie
nejmeh
maarek
indexers
sillitti
stoplists
frame
supporting
certification
compensating
development
displaying
connectionist
toward
labor
unfamiliar
descriptive
lexical
learning
documentation
relevant
browsing
organization
bellettini
fugini
idiosyncratic
reseeding
symbolics
esoteric
idiomatic
harter
genvoca
costly
aliases
effectively
extracts
categories
intelligent
indexed
inconsistent
facet
ye
burton
surveying
discriminators
structures
message
representations
adjusted
structuring
spreading activation
adaptive indexing
software reuse
henninger 1994
emacs lisp
reusable software
information retrieval
software components
faceted classification
activation values
retrieval methods
source code
retrieval systems
enumerated classification
component repositories
prieto d
software repositories
d az
retrieval techniques
net input
items pane
activation value
repository structure
mozer 1984
henninger 1993
information needs
text indexing
free text
development organizations
nieper lemke
retrieved items
relevance feedback
gnu emacs
associative spreading
pane shows
furnas et
frakes pole
lemke 1989
codefinder also
devanbu et
belew 1987
pole 1994
fischer nieper
gerhard fischer
retrieval effectiveness
et al
information space
al 1991
delete message
query construction
al 1987
retrieval system
link weight
ill defined
basili 1991
salton buckley
az freeman
kandor objects
unlimited aliasing
pane see
find reusable
inconsistent indexing
freeman 1987
salton mcgill
term usage
repository structures
vm delete
caldiera basili
previous activation
query pane
schneider et
retrieval set
retrieve information
domain analysis
empirical studies
patel schneider
retrieval algorithms
word relationships
component representations
mcgill 1983
associative network
software libraries
frame based
retrieval process
activity level
software development
sparse matrix
link weights
text retrieval
indexing scheme
attribute value
curtis 1989
valuable assets
minimal indexing
retrieve button
knowledge structures
based reuse
finding components
halasz 1988
repository seeding
biggerstaff richter
functions variables
induced structure
e lisp
efforts allowing
terms delete
terms pane
vm quit
structuring efforts
term item
locating relevant
document decay
lisp source
williams 1984
ye gerhard
repository construction
gandel 1990
yunwen ye
frakes gandel
delete remove
lisp repository
text methods
matrix creation
components even
richter 1987
repository users
adequate retrieval
precision problems
buckley 1988
codefinder user
content induced
codefinder uses
reusable components
al 1984
decay rate
software design
figure 6a
alta vista
soft matching
retrieval by reformulation
prieto d az
reusable software components
nieper lemke 1989
devanbu et al
associative spreading activation
retrieved items pane
furnas et al
frakes pole 1994
fischer nieper lemke
studies have shown
et al 1991
et al 1987
free text indexing
patel schneider et
vm delete message
salton mcgill 1983
caldiera basili 1991
schneider et al
d az freeman
az freeman 1987
log n d
number of documents
support the process
related terms pane
emacs lisp repository
codefinder user interface
created by peel
biggerstaff richter 1987
frakes gandel 1990
structuring efforts allowing
adequate retrieval effectiveness
terms and phrases
document decay rate
different information needs
components and terms
find reusable software
salton buckley 1988
pane see figure
yunwen ye gerhard
ye gerhard fischer
content induced structure
free text methods
al 1991 patel
et al 1984
used to index
number of terms
function to keep
sparse matrix multiplication
context of use
methods are needed
terms are used
process of finding
information retrieval systems
fischer et al
improving legal research
activation is passed
spreading activation algorithm
based software design
issues in reusing
software system generators
human system communication
low cost repository
helgon fischer nieper
qualifying reusable software
software reuse repositories
pole 1994 maarek
attribute value methods
static and unable
environment short form
classification for software
locating and comprehending
rose belew 1991
n d df
advantage of valuable
minimal up front
organizations to take
lisp functions variables
spreading activation retrieval
message and delete
analysis and stoplists
based on lexical
total retrieval set
used in codefinder
methods for reusable
help users find
items pane shows
become more effective
items it indexes
spreading activation process
evaluation of codefinder
