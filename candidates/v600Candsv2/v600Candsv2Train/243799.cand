cache
budget
hierarchy
crossover
budgets
workload
money
locality
dollars
stack
disk
hierarchies
eq
technologies
configuration
ram
associative
configurations
mbytes
afs
curve
chip
backing
lru
jacob
caches
psi
levels
analytical
recommended
cumulative
dram
misses
kbytes
fig
spent
dollar
storage
curves
eqs
hits
traces
probability
hit
simulator
density
buys
phi
predicted
fit
simulated
jukebox
references
tape
slope
simulations
device
slopes
ij
reference
axis
miss
cheapest
spend
raw
workloads
mb
touched
access
cpu
designing
fi
catthoor
distance
umich
fastest
predicts
bytes
memory
proportion
trace
eecs
tanja
achteren
ignores
vol
server
compulsory
ff
optical
beneath
mudge
costs
intercept
ms
cpf
chelmsford
simulation
speeds
funds
temporal
sizes
polynomial
lauwereins
topmost
processor
exhaustive
magnetic
copyright
lowest
technology
slowest
denominator
negative
specs
francky
managed
rudy
catch
quanta
tall
fully
faster
file
designers
silverman
recommend
stream
exponent
exploration
simplifications
accesses
decreases
cached
hitting
steep
undoing
lagrange
extrapolated
bars
pdf
recommends
sults
closed
store
dx
seth
configuring
reuse
logging
trevor
sizing
welch
unknowns
month
analyses
poor
chow
measurement
ffl
shape
datum
analytic
specifications
pyramid
capacities
allocate
infinity
characterization
appropriation
fetchstatus
crippling
removefile
system budget
stack distance
cache level
crossover budget
storage hierarchy
cache levels
cache hierarchy
budget dollars
distance curves
access time
chip cache
crossover budgets
workload locality
psi ij
fully associative
optimal size
processor cache
cumulative probability
curve fit
optimal configurations
memory hierarchy
optimal configuration
designing memory
memory hierarchies
p x
backing store
probability density
phi phi
hierarchy levels
jacob et
three level
lru stack
budget values
cache size
analytical model
hierarchy level
axis represents
level hierarchy
lowest cache
optimal hierarchy
vol 45
every dollar
configuration recommended
temporal locality
eqs 9
level increases
density curve
hierarchy simulations
cache kbytes
form solution
average access
probability function
level n
october 1996
optimal sizes
model ignores
computers vol
within 5
associative cache
worst observed
mbytes mbytes
money spent
afs server
access times
density function
closed form
fixed proportion
lru managed
hierarchy simulation
probability curve
total system
y axis
cost performance
exhaustive simulation
level processor
raw data
reference stream
n level
configuration predicted
o hierarchy
money available
predicted optimal
fastest cache
budget size
predicted via
real technologies
kbytes 0
configurations recommended
becomes cost
system budgets
budget value
dollars 500
ram system
level 1
running times
better temporal
configurations fig
level size
disk level
data touched
hierarchy optimization
model predicts
eq 7
cache configuration
every level
system budget dollars
processor cache hierarchy
stack distance curves
designing memory hierarchies
model for designing
al an analytical
jacob et al
phi phi phi
cumulative probability function
size of cache
size of level
computers vol 45
lowest cache level
probability density curve
fully associative cache
closed form solution
model of workload
average access time
probability of reference
level processor cache
costs and access
hierarchy the optimal
size of mbytes
three level processor
lru stack distance
cache of size
ffl the model
cost performance ratio
y axis represents
transactions on computers
fully associative caches
probability density function
shows the optimal
time to access
amount of money
x axis represents
ff and fi
average time per
p x dx
non fully associative
fastest cache level
polynomial curve fit
ffl the configuration
chip cache l2
level increases linearly
subset of technologies
speeds and costs
optimal configurations fig
chip cache l1
system budget size
levels will increase
dollars 500 01500
budget dollars 500
becomes cost effective
cumulative probability curve
budget for level
better temporal locality
eecs umich edu
two level hierarchy
