rtg
register
dag
dsps
dsp
dags
instruction
datapath
schedule
dismanteling
allocation
snf
sacl
optschedule
lac
aho
instructions
acyclic
dismantle
trees
mpy
architectures
isa
edges
registers
rtgs
spill
olive
operands
sc
tree
araujo
breaking
sethi
subtrees
expression
spac
deadlock
reconvergent
subtree
dspstone
schedules
johnson
edge
spills
generation
pseudo
pac
leaf
malik
code
scheduled
processors
heterogeneous
memory
raw
architecture
apac
fanout
biquad
wess
heuristic
operand
selection
yunheung
paek
benchmark
allocated
marwedel
instruments
broken
optimality
homogeneous
kernel
sharad
iir
assembly
disconnected
scheduler
subexpressions
transfer
dismantles
tjiang
zivojnovic
goosens
campinas
guido
lt
disconnect
chip
motorola
accumulator
jeonghun
unicamp
processor
spilling
ir
optimally
princeton
architectural
loop
fig
notice
ullman
nodes
embedded
expressions
mul
signal
compiling
binate
scheduling
cycles
adpcm
deadlocks
files
const
matching
store
trellis
lee
heuristics
bring
covering
lms
spam
texas
target
self
whalley
paths
fraser
garey
fug
digital
node
outgoing
programmable
devices
grammar
delta
brazil
locations
dot
cyclic
floating
quality
ti
compiled
file
temporary
storage
lemmas
cho
np
sibling
permissions
location
blocks
pass
live
rooted
routing
compromising
arithmetic
go
marked
goes
pegatoquet
prabhala
lapsley
lanner
mpyk
minwook
bianco
twig
multireg
natural edges
expression tree
code generation
instruction selection
component trees
register allocation
pseudo natural
optimal code
point dsps
expression trees
register architectures
expression dag
allocation deadlock
dsps delta
leaf dags
acyclic rtg
natural edge
fixed point
sc schedule
dsp architectures
heterogeneous register
self loop
partial register
memory register
memory position
dsp kernel
architecture rtg
u v
sc schedules
purpose architectures
johnson 1976
three address
dsp processors
homogeneous register
edge u
multiple fanout
register transfer
nodes u
basic blocks
single register
node r
full dags
left first
snf schedule
spill free
mpy m5
acyclic rtgs
algorithm optschedule
sacl m5
r 1
digital signal
optimal instruction
reconvergent paths
instruction corresponding
operation v
register r
aho et
m 5
position m
general purpose
w v
register files
texas instruments
dag edge
lac m
subtrees p
add m2
breaking edge
trees leaf
instruments 1990
raw edge
delta guido
allocation deadlocks
generation task
component tree
fanout nodes
mpy m0
one biquad
architectural information
kernel benchmark
ir patterns
iir one
quality code
target architecture
r j
arithmetic expressions
first followed
edge e
common subexpressions
phase section
tree scheduler
memory positions
algorithm aho
expression dags
point dsp
memory spills
aho johnson
register file
memory operation
hand written
register machine
add m
free schedule
embedded processors
r 2
yunheung paek
guido araujo
processor instruction
pseudo natural edges
fixed point dsps
point dsps delta
generation for fixed
go through memory
rtg is acyclic
dag of figure
partial register allocation
rtg of figure
optimal code generation
general purpose architectures
aho and johnson
edge u v
selection and register
homogeneous register architectures
mpy m5 p
sacl m5 m5
heterogeneous register architectures
p t m5
consider for example
expressions with common
optimal instruction selection
allocation and instruction
aho et al
memory position m
iir one biquad
spill free schedule
mpy m0 p
pass through memory
phase section 5
generation for dsp
produce optimal code
memory register architectures
breaking edge e
natural and pseudo
delta guido araujo
texas instruments 1990
multiple fanout nodes
code generation task
p t m0
araujo and sharad
trees leaf dags
pac a p
figure 6 observe
generation of optimal
free of allocation
goes through memory
dsp kernel benchmark
fixed point dsp
result of operation
result of m
subtrees t 1
code generation using
generation for expression
number of cycles
instruction selection using
p a 1
edge e 1
generation for embedded
digital signal processors
et al 1994
path from r
breaking natural edges
