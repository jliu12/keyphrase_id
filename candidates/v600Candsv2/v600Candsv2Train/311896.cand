checkpoint
checkpoints
stagger
staggering
checkpointing
plank
logical
staggered
marker
logged
storages
stable
chandy
markers
lamport
messages
cl
message
physical
coordinator
storage
logging
anti
synchronization
contention
processes
channel
ncube
recovery
incremental
sync
consistent
delivered
asynchronous
initiates
saved
infrequent
overhead
sent
phase
staggers
sends
named
asynchronously
volume
iter
rollback
sarathi
failure
guohong
fft
cluster
measurements
synchronize
mukhopadhyaya
krishnendu
partha
sim
mukesh
mandal
incident
dimension
saving
singhal
received
mutable
evolutionary
mbyte
legend
breakpoints
receives
controlled
establishing
synchronous
clusters
frequent
loop
recover
undo
multicomputer
cao
unidirectional
variations
letency
akhilesh
interrupts
multicomputers
latency
initiation
processors
pointing
causal
sending
receipt
copy
save
gered
vidya
records
ensuring
establish
communication
zwaenepoel
libckpt
stag
interval
saves
multiplications
installations
manetho
summarize
fifo
presents
share
imitate
stor
debugging
wang
converse
coordinators
log
enforced
sender
fowler
beneficial
cube
progress
breakpoint
desirable
transparent
corner
rolls
iyer
away
receiver
concurrent
recreate
axis
kbyte
circumstances
extrapolating
disk
abstracta
clustering
channels
retry
taking
synchronizations
contend
noted
schemes
defeat
undone
progressive
directed
adequate
swapped
reproduced
consisting
warp
evaluates
degrading
wormhole
illustration
fault
elaborated
shrinks
stabilizing
labels
tolerance
logical checkpoint
physical checkpoint
stable storage
checkpointing phase
cl p
chandy lamport
consistent logical
process p
logical checkpoints
take checkpoint
stable storages
logical checkpointing
checkpoint message
lamport algorithm
stagger algorithm
consistent checkpointing
checkpoint overhead
physical checkpoints
plank 13
process state
message volume
sync loop
checkpoint staggering
multiple stable
checkpoint coordinator
recovery line
synchronization interval
physical checkpointing
checkpoint logical
messages delivered
checkpoints taken
anti message
incremental checkpoint
sent asynchronously
anti messages
ncube 2
channel c
proposed algorithm
checkpointing algorithm
consistent recovery
original stagger
staggered checkpointing
marker message
algorithm stagger
storage contention
channel incident
p 0
overhead second
coordinator p
proposed scheme
directed away
incremental state
various processes
controlled staggering
checkpoint p2
lamport plank
staggered consistent
staggering checkpoints
markers sent
messages m4
asynchronous markers
fft 15
staggering works
marker messages
recent physical
staggered physical
line consisting
lamport 2
asynchronous marker
stagger d
p 00
checkpoint size
state size
works best
checkpointing algorithms
processes synchronize
memory copy
consistent checkpoints
processes take
messages received
small message
p algorithm
check pointing
state s1
simulation program
message m
process figure
second dimension
essentially identical
entire process
take checkpoint message
time t 1
chandy lamport algorithm
consistent logical checkpointing
logical checkpointing phase
checkpoint at time
takes a physical
consistent logical checkpoints
multiple stable storages
checkpoint is taken
physical checkpointing phase
checkpoint logical checkpoint
takes a logical
stable storage contention
physical checkpoint logical
stagger the checkpoints
degree of synchronization
taken by various
checkpoint overhead second
staggering the checkpoints
original stagger algorithm
sends a take
time t 0
message to process
process p 0
message from process
consistent recovery line
summarize this approach
receives a take
entire process state
initiates the consistent
recent physical checkpoint
storages are available
staggering of checkpoints
taking a physical
physical checkpoints taken
consistent checkpointing algorithms
take a physical
second dimension d
taking a logical
establishing a logical
physical checkpoint p2
checkpoint by logging
degree of staggering
staggering works best
overhead second dimension
checkpoint a process
small message volume
markers are sent
lamport algorithm 2
chandy lamport plank
recovery line consisting
checkpoint are logged
consistent checkpointing algorithm
cl p algorithm
state at time
process is said
sent by process
time t 2
results on ncube
algorithms require different
take consistent logical
copy of entire
staggered checkpointing phase
fft 15 application
processes to save
physical checkpoint taken
incremental state saved
long et al
guohong cao mukesh
process p 00
saves a consistent
determine a recovery
save their state
establish a logical
messages m1 m2
saved to establish
receiving a marker
checkpointing phase process
coordinator p 00
approach as physical
better than cl
cl p increases
coordinates logical checkpoints
partha sarathi mandal
