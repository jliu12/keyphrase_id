dfe
lpt
offloaded
cores
cache
drr
snort
bus
core
consumption
tl
rou
accesses
instructions
nat
offload
segment
misses
caches
ipchains
locality
instruction
dh
url
lreg
npus
inst
netbench
offloading
temporal
cycles
ssl
sadd
processor
simplescalar
filtering
register
segments
kb
execution
crc
chip
linesize
eadd
power
energy
processors
networking
activated
activity
engine
byte
pc
spatial
accessed
avg
contention
defcon
powernp
split
mcs
code
streaming
acc
exec
registers
strongarm
simulator
associative
subscrpt
cmu
caused
accessing
dissipation
reg
field
mechanism
snoop
caching
selective
communicates
irwin
prediction
compiler
simulations
executed
miss
gonzalez
delay
load
intelligent
bypassing
explained
gate
dram
latencies
request
req
smp
switches
controller
bypass
reduction
transferred
prefetch
loop
concentrate
sbu
dfes
jetty
offloadable
benitez
montanaro
opensll
interrupt
mapped
predictability
arm
stores
execute
originated
communicated
suite
bhuyan
ixp
offloads
switching
massively
consumes
processed
architectural
fields
limitations
enhancing
microprocessors
laxmi
bahar
temporality
effectiveness
master
equipped
memories
causing
stream
dissipate
cacti
contending
consume
array
initiate
mpps
aggressiveness
grain
surrounding
servers
workload
deactivated
streamed
iram
bits
fee
reducing
tradeoffs
uncached
intel
hit
simulation
tuned
pass
ram
execution cores
execution core
power consumption
code segment
low temporal
execution cycles
split cache
bus accesses
l snort
data cache
code segments
data filtering
dfe figure
system bus
single core
lpt dfe
snort n
way 8k
nat l
rou l
drr l
tl l
dh drr
snort l
overall power
multi core
networking applications
l nat
filtering engine
dfe code
l tl
drr drr
lreg field
energy delay
register values
network processors
temporal data
temporal locality
rou rou
ssl tl
ipchains md5
cache technique
url avg
l ipchains
offloaded code
avg reduction
dfe data
nat rou
core processor
n ssl
tl url
delay product
byte lines
temporal cache
locality prediction
data caches
level 1
cycles 2
base processor
selective cache
spatial cache
exec cycles
temporal accesses
instructions causing
sadd field
simulation numbers
bus activity
proposed dfe
technique reduces
accessing data
cache misses
caching strategies
values transferred
caches using
pass gate
performance processors
direct mapped
containing loop
prediction table
misses caused
network processor
instructions executed
data accessed
multiple execution
processor systems
call return
cache accesses
power reduction
cache locality
proposed method
level 2
dfe table
dfe first
bus transitions
eadd field
dfe communicates
examined pc
powernp 12
arguments inst
ibm powernp
defcon n
bypass instructions
logic chip
netbench suite
n 10000
low temporal data
way 8k lpt
lpt dfe figure
overall power consumption
snort l snort
tl l tl
nat l nat
energy delay product
data filtering engine
misses are caused
reduce the power
ssl tl l
cycles 2 way
l ipchains md5
n ssl tl
url avg reduction
l snort l
ipchains md5 nat
nat rou rou
l nat rou
dh drr drr
drr drr l
single core processor
l snort n
rou l snort
l tl url
rou rou l
split cache technique
tl url avg
snort n ssl
drr l ipchains
locality prediction table
number of instructions
dfe data cache
low temporal locality
procedure call return
low temporal accesses
processor with execution
data with temporal
exec cycles 2
register values transferred
segment is executed
multiple execution cores
explained in section
number of execution
high performance processors
number of bus
level 1 data
increases the execution
able to reduce
reduction in execution
data and instruction
number of register
level 2 cache
data cache misses
multi core systems
segment the dfe
level 1 instruction
core network processors
bus accesses significantly
temporal locality temporal
resource it might
ibm powernp 12
request has originated
cache prefetch buffers
computer with intelligent
cycles for snort
associative cache prefetch
defcon n 10000
reducing address bus
offload code segments
access execute mechanism
design the dfe
register values required
reduces the bus
