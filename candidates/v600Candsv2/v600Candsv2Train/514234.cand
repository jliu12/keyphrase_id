atr
worker
condor
master
workers
ssn
planning
iterate
pool
mw
flock
adaptive
scenarios
wi
debug
grid
tasks
runtime
iterates
variability
loggp
execution
heterogeneous
stochastic
homogeneous
lightly
isolated
flocks
hosts
legion
logp
scheduling
cactus
cv
linderoth
basket
argonne
task
configuration
histogram
magnetohydrodynamics
trust
iterations
trip
globus
validates
update
autopilot
sec
jobs
msec
host
pvm
job
loaded
thumb
tomography
subgradient
allocated
measured
mips
processor
heymann
andcompute
condors
measurements
interrupts
grids
configurations
apples
metasystem
metacomputers
processors
conserve
secondary
efficiencies
diminishing
samr
worldwide
incumbent
avg
predictive
gene
multistage
iteration
histograms
subgradients
unpredictable
storm
round
contracts
jeff
nt
communication
updating
benchmark
unpredictably
predicted
candidate
stage
develops
groups
cut
objective
wavefront
widely
min
subproblem
eia
karmarkar
recommended
speedups
sara
greatly
balancing
message
analyzes
nodes
administrative
bologna
tunable
costs
load
omitted
near
platforms
revealed
middleware
govern
exposing
collections
evaluated
speeds
submit
experimentally
impact
minimize
assigned
wisconsin
capacities
group
maximizing
peak
wright
doubles
ripeanu
grads
coap
ssage
obyte
eachiteration
surmised
ribler
livny
totalmaster
jichuan
avgerage
condorpvm
karamcheti
senar
flocking
uncertain
resource
angular
parallelism
environment
unavailable
adapts
preferences
codes
ax
tunability
atr execution
execution time
execution times
worker execution
total atr
model function
m x
new iterate
master execution
isolated master
planning problem
planning problems
update m
wi pool
master processor
adaptive code
master worker
homogeneous workers
condor pool
pool ssn
task groups
computational grid
task execution
task group
stage linear
non adaptive
iterate x
total execution
adaptive execution
new iterates
adaptive version
ssn 10
distributed condor
reduced debug
worker applications
grid environment
ssn planning
stochastic optimization
minimize total
function m
problem n
new adaptive
linear programs
atr application
condor mw
adaptive atr
master processing
local condor
scenarios n
widely distributed
runtime environment
compute nodes
optimal adaptive
adaptive control
new x
lightly loaded
near optimal
task scheduling
total master
ssn 20
heterogeneous workers
solve secondary
argonne flock
loaded master
secondary stage
flock ssn
condor flocks
worker nodes
x sec
condor pvm
wi argonne
condor jobs
communication costs
trust region
performance model
g 50
n g
average time
stochastic programming
per iteration
grid applications
round trip
level scheduling
configuration parameters
compute new
atr algorithm
default debug
o level
debug level
workers master
scenarios evaluated
workers changes
performance contracts
single worker
basket size
candidate iterate
updating m
avg min
atr run
gene sequence
atr running
parallel tomography
conserve space
n scenarios
condor runtime
jeff linderoth
overall atr
magnetohydrodynamics application
trip time
parallel tasks
next iterate
grid application
cut model
true objective
worker tasks
node processing
heterogeneous nodes
compute x
computing new
grid nodes
second stage
processing time
iterates n
stochastic linear
sequence comparison
region subproblem
atr execution time
update m x
time to compute
total atr execution
worker execution times
task execution times
number of scenarios
number of workers
wi pool ssn
function m x
master execution times
model function m
planning problem n
debug i o
total execution time
time to update
stage linear programs
number of tasks
pool ssn 10
ssn 10 000
master worker applications
ssn planning problem
new iterate x
distribution of work
widely distributed condor
worker execution time
version of atr
master and workers
local condor pool
compute each new
problem n 10
number of iterations
n 10 000
number of task
solve secondary stage
second stage linear
wi argonne flock
secondary stage linear
ssn 20 000
lightly loaded master
application level scheduling
new adaptive code
minimize total execution
non adaptive version
near optimal adaptive
task scheduling algorithm
number of iterates
compute a new
rules of thumb
compute the next
round trip time
updating the model
flock ssn 20
model of total
compute new x
compute x sec
amount and distribution
total master execution
time a worker
first cut model
master execution time
distributed condor flocks
updating m x
master processing time
new adaptive atr
basket size b
omitted to conserve
atr running time
avg min max
argonne flock ssn
gene sequence comparison
overall atr execution
computing new iterates
minimize total atr
atr execution times
task groups g
model based adaptive
iteration number time
processing and communication
trust region subproblem
computes a new
time for computing
values of n
