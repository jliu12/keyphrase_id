sender
sr
sting
receiver
recv
message
sent
seqnum
messages
protocol
crashes
viable
msg
stung
crash
recvrs
stings
link
transit
vrecv
item
rs
links
sentrs
cleanpaths
alternating
bitseq
lp
arrives
acknowledgment
token
processor
items
path
protocols
resilient
vsentrs
recvsr
configuration
fifo
clean
processors
send
retransmitted
infinitely
tolerate
sending
border
costing
reliable
stabilizing
paths
cleaned
fseqnum
nonviable
vsent
intermediate
reordering
nil
arrived
crashed
bit
viability
delivery
admissible
tokens
delivered
duplicated
forever
retransmissions
duplication
th
st
ath
retransmission
ideal
receives
pending
lost
impossibility
od
prs
networks
failures
bare
undirected
communication
tag
fich
permanent
corrupted
elapsed
cut
faith
network
eventually
duplex
array
receiving
retransmit
prefix
memoryless
inductive
atomic
welch
successive
sends
transmission
stable
travels
infinite
eventual
designated
permanently
amir
topology
arrays
queues
reordered
resynch
stingtag
fseqnumrsg
vrecvsr
cleanpathssr
npl
reenters
seqnumrs
vrecvrs
bitrs
received
layer
storage
ends
ll
liveness
neighbor
transmitted
receipt
abstractan
herzberg
fresh
timeout
weaker
travel
srg
expiring
resynchronization
reuven
rationale
unreliable
header
concerning
faulty
tamu
micah
gavoille
track
keeps
net
configurations
black
var
fraigniaud
ruppert
ceived
duplicate
period
box
physical
hinge
executes
inputs
presidential
crashing
retransmits
withstand
dequeued
hypothesis
succeeds
sent sr
sequence number
recv sr
data item
viable path
sr path
sr p
sent rs
alternating bit
sequence numbers
th sting
o lp
intermediate processor
sender receiver
dynamic networks
path path
data items
sender uses
processor crashes
end communication
vrecv sr
receiver path
crash resilient
end protocols
stable storage
th data
end protocol
data link
path msg
sting tag
cleanpaths sr
one viable
lp new
sting sr
partial step
message complexity
bounded sequence
bit protocol
new messages
intermediate processors
path p
infinitely often
atomic step
number 1
message sent
path whenever
seqnum sr
sender eventually
msg path
m infinitely
send procedure
link cut
th acknowledgment
lp time
concerning recv
sequence sent
sender path
admissible run
resilient end
receiver link
sting rs
line 02
physical links
infinite number
self stabilizing
costing o
stabilizing version
receiver uses
two successive
log p
receiver sender
od fig
message size
link protocol
sender receives
message msg
o np
o l
inductive hypothesis
reliable data
must show
message m
sr sent
stung whenever
path seqnum
stability infinitely
th stings
tolerate crashes
arrays sent
memoryless networks
sender executes
bare network
ll show
nil sentrs
vsent sr
ideal runs
end to end
message with sequence
sent sr path
th data item
sent sr p
sender receiver path
sender and receiver
sequence number 1
messages in transit
alternating bit protocol
least one viable
lp new messages
o lp new
one viable path
sting the receiver
arrives the sender
whenever the sender
receives a message
number of messages
step that starts
sender receiver link
token for p
receiver link cut
costing o lp
crash resilient end
receiver is stung
path the sender
recv sr path
msg path msg
concerning recv sr
bounded sequence numbers
messages and o
o lp time
sting the sender
receiver sender path
m infinitely often
information concerning recv
self stabilizing version
data link protocol
time and message
c i 1
execution of line
set of sequence
receiver as well
number of paths
data link layer
complexity is o
number of steps
sequence of messages
path is clean
transit along p
note that sting
token has arrived
viable path p
message is fresh
communication in memoryless
uses sequence number
definition of ideal
equal to sting
stings in r
msg 6 nil
form x j
next sequence number
sr p since
rationale for condition
