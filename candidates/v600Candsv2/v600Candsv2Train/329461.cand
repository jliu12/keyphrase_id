bb
motions
motion
bbs
pruning
cdfg
bbcg
scheduled
scheduling
resource
tbs
exi
schedule
speculative
conditional
constructor
permutation
synthesis
waka
duplication
compulsory
predicate
conditionals
branch
hra
explorer
scheduler
causal
ps
code
pbs
guard
inside
cvls
predicates
topological
compaction
parallelism
maha
adder
ready
link
merge
controller
percolation
resources
nopru
ruv
dependencies
redundancies
constructive
constrained
links
shadowed
afap
wewill
terminal
parallelization
lengths
sharing
gss
criterion
causality
freedom
pipelined
visited
compensation
assignment
moved
density
permutations
flow
grey
solutions
latest
executed
induce
delay
allocates
alu
imposed
boosting
trace
guards
search
unscheduled
pru
smg
grc
pipel
scheduledpreds
inefficient
slot
prune
unrestricted
linked
condensed
capability
circles
ts
behavioral
exis
committed
traversed
oracle
occupied
execution
cosynthesis
brewer
precedence
conflict
cpu
traversal
superscalar
speculatively
dependency
exclusion
cast
accommodated
runtime
preventing
terminals
infeasible
priority
heuristic
neat
accommodate
conditionally
orthonormality
revoked
timely
cycle
downward
heuristics
boolean
selection
succeeds
quality
asips
selectors
assignments
subsection
exploitation
engine
earliest
enclosed
dsps
transformations
affordable
6d
allocated
mutual
optimum
exploration
outcome
mult
availability
encode
explored
obeyed
idle
symbolic
longest
primitive
operation
asics
brazil
encoding
benchmark
paths
benchmarks
path
microcode
transistor
comparator
seeds
utilization
reordering
predecessor
phases
completeness
discard
static
downwards
hw
shortened
summarized
reached
code motions
code motion
motion pruning
bb v
initial link
initial links
search space
speculative execution
quality solutions
criterion 1
topological permutation
conditional c
bb j
resource constrained
operation u
pruning technique
level synthesis
schedule length
schedule lengths
generalized code
scheduled inside
inside bb
branch capability
execution condition
solution constructor
conditional resource
global scheduling
resource sharing
pipelined control
resource constraints
control delay
control selection
predicate g
based scheduling
time step
visited bb
ready operation
permutation scheduler
limited branch
bb c
operation q
time sequence
path based
operation m
static predicate
c d
available resources
optimal solutions
dynamic predicate
inefficient code
data selection
merge node
causal solutions
without pruning
bb k
guard value
allocated steps
basic code
bb b
search time
code duplication
high quality
control flow
boolean oracle
alternative solutions
cost range
first ready
constrained parallelization
local search
high level
behavioral description
control dependencies
merge nodes
final assignment
synthesis applications
global resource
constructive method
linear time
control dependent
branch merge
operation n
cost values
larger search
d f
basic block
design flow
dynamic predicates
e description
waka 2
guard values
cost ranges
operations m
allocates steps
bb l
permutation construction
bb d
bb p
scheduler engine
current bb
output node
extra step
constraints imposed
exact method
primitive transformations
motions figure
steps inside
machine graph
branch node
u inside
d e
code motion pruning
freedom for code
high level synthesis
high quality solutions
pipelined control delay
generalized code motions
linear time sequence
conditional resource sharing
motion pruning technique
topological permutation scheduler
solution s n
inefficient code motions
terms of schedule
scheduled inside bb
conditional c 1
basic code motions
inside bb v
first ready operation
number of solutions
global resource constrained
larger search space
resource constrained parallelization
c d e
path based scheduling
level synthesis applications
description in figure
local search algorithm
assigned to r
e c d
available before control
state machine graph
pruning is applied
steps to accommodate
else e description
complete and causal
operation u inside
limited branch capability
latest in bb
q in bb
linked to bb
allocates steps inside
splitting the linear
solution s m
j into bb
code motions figure
density of high
time of operation
assigned to q
tree based scheduling
share a resource
constrained parallelization technique
copy of q
must be available
d e f
technique is presented
given time step
synthesis and code
used to induce
types of code
scheduling and code
see section 6
could be scheduled
e d f
d d d
