forest
profile
makespan
policy
ms
forests
epoch
tasks
st
policies
processors
scheduling
stochastically
js
successors
psi
coffman
precedence
monotonic
stochastic
fa
hlf
task
fvg
preemptive
epochs
embedding
uniform
priority
graphs
intree
fastest
instants
completion
schedule
strassen
interval
assigns
decision
processor
nonidling
pinedo
kulkari
chimento
exponential
ae
majorized
vertices
predecessors
optimality
minimizes
roots
vertex
ordered
liu
preemptions
deletion
referred
distributions
root
warmuth
dolev
opposing
idling
schedules
fc
profiles
papadimitriou
completions
memoryless
jv
counterexamples
weiss
running
finished
ir
permutation
successor
tg
frostig
sanlaville
remaks
outforests
superposition
immediate
resp
jobs
list
assigned
repair
convention
nonpreemptive
monotonicities
zigzag
unconditioning
leaf
priorities
coupled
marginals
majorization
tsitsiklis
subtrees
trivially
cf
availability
ff
subtree
unfinished
flat
deleting
deterministic
minimization
said
assertion
fug
garey
repairs
identical
varies
executions
mimicking
yannakakis
multiprogrammed
preempted
fictitious
antisymmetric
acyclic
subcases
oe
failures
enabled
inductive
chandy
underway
indexed
confine
preliminaries
lemma
reynolds
changed
integers
random
beside
injective
finishing
ullman
concluding
generality
closure
sg
continually
owing
proofs
modification
inequalities
establishment
relation
straints
tree
bruno
induction
surely
probability
jp
omitted
fd
closed
speed
reader
embed
classes
partially
imply
subgraphs
modifications
paid
helped
finishes
graph
minimize
failure
expectations
reversed
couple
singleton
induced
isomorphic
degenerate
ambiguity
investigated
finish
showed
predecessor
coupling
ties
highest
belong
forest g
interval order
decision epoch
ms policy
st g
g 2
profile scheduling
profile fa
o f
initial tasks
first decision
available processors
g 1
p monotonic
policy ae
task graphs
fa n
r uniform
list schedule
uniform processors
variable profile
epoch policy
ms policies
task graph
stochastic scheduling
precedence constraints
ordered tasks
liu 3
stochastically minimizes
assigns tasks
tasks k
relation 12
js u
running times
j js
js v
priority list
task running
fastest available
processors q
stochastically minimize
embedding relation
stochastic profile
constant profile
interval ordered
tasks u
r o
identical parallel
initial task
policy assigns
order graph
st ae
processors respectively
decision epochs
random variables
task completion
c o
identical processors
time except
stochastic minimization
ms g
remaining running
policy stochastically
profile modification
time epoch
parallel identical
x st
embedding function
list schedules
root embedding
psi denote
order graphs
intree precedence
common exponential
list scheduling
u o
optimal policy
exponential distributions
parallel processors
gamma fvg
st y
c r
probability space
scheduling policies
constraints scheduling
available processor
ae 1
scheduling problem
g gamma
two roots
v j
processor k
scheduling policy
u j
n 1
processing requirements
g st
v h
exponential distribution
n g
equivalent definition
ff k
processors available
c u
let g
detailed proof
completion times
running time
task v
profile modifications
profile bounded
chimento 9
uniform forest
epoch corresponds
whereas policy
common probability
g 2 c
first decision epoch
uniform out forest
uniform out forests
fa n 1
profile fa n
g 1 n
r o f
minimizes the makespan
c r o
task running times
coffman and liu
forest g 2
c o f
decision epoch policy
j js v
u j js
js u j
c i o
js v j
g 1 oe
relation 12 holds
stochastic profile scheduling
n 1 bounded
interval ordered tasks
interval order graph
assigns tasks k
identical parallel processors
minimize the makespan
tasks of g
u o f
c u o
fastest available processors
e 2 c
n g 1
use the fastest
variables with exponential
common exponential distribution
st g proof
epoch policy assigns
policy stochastically minimizes
holds for case
x st y
list scheduling policy
intree precedence constraints
precedence constraints scheduling
parallel identical processors
closed under deletion
interval order graphs
follows the priority
epoch policy ae
policies in psi
g gamma fvg
makespan of g
increasing function f
tasks in g
c i f
varies in time
class of graphs
bounded by 2
tasks are independent
set of tasks
let g 2
d n 1
profile and precedence
r uniform forest
kulkari and chimento
common probability space
scheduling with variable
processors q 1
necessarily immediate successors
st ae 1
unit execution time
respectively r uniform
policy which follows
