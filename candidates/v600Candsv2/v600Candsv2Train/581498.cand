names
pfenning
meta
nanevski
calculus
substitution
davies
freshml
substitutions
modal
pitts
syntax
box
typing
gabbay
staged
dom
regexp
metaml
acc
wickline
int
syntactic
necessity
object
constructor
polymorphism
name
contexts
boxed
abstraction
expressions
expression
binding
bool
calcagno
taha
fresh
judgment
val
weakening
matcher
hongwei
closed
abstract
orelse
logic
staging
intensional
operational
uck
di
nielsen
derivations
modality
char
chiyan
erent
typed
constructors
nominal
typeful
fun
polymorphic
irrelevancy
erms
urmann
subterms
redexes
alues
dead
scope
formed
induction
code
sigplan
ml
prefixed
moggi
reification
destruct
rgensen
star
gl
semantics
untyped
explicit
postponed
reduct
fn
xi
judgments
appearing
binder
stand
elimination
declared
notices
helper
freely
inspect
classifies
despeyroux
sqbox
distinction
escape
language
classifiers
composition
ershov
necessitation
alue
fiore
sch
exponentiation
specialization
residual
temporal
metalanguage
cbn
join
open
fragment
substitutes
developments
stages
propositions
typings
encode
binds
setup
reformulation
trees
accomplishments
indeterminates
typechecking
binders
translucent
girard
leone
primitive
programs
const
exp
determinacy
formedness
rules
specialized
compiled
sound
parametric
simultaneous
stage
redex
preservation
functional
rule
irrelevant
ordinary
datatype
identity
insignificant
syntactically
harper
opposite
notion
annotating
modalities
discipline
lambda
pages
hypothesis
recursively
ectively
observable
concrete
substituting
syntactical
implicitly
empty
recursion
semantical
intended
inductively
checks
substituted
customary
let box
meta programming
open code
support set
f pfenning
nanevski f
object level
abstract syntax
explicit substitution
explicit substitutions
type system
object programs
support polymorphism
expression variables
closed code
object terms
well formed
free variables
name x
wickline et
gabbay 2000
order abstract
x int
staged computation
variable contexts
meta level
run time
davies 1996
support weakening
nominal logic
pfenning 2001
operational semantics
type constructor
modal type
list bool
syntax trees
expression variable
time code
names appearing
order syntax
davies pfenning
object expression
char list
introduction form
nanevski 2002
value variables
elimination form
higher order
modal logic
fresh name
support variables
expression e
object expressions
name context
box let
davies 2001
let fun
pfenning davies
pitts gabbay
box e
substitution principle
syntactic representation
choose e
choose x
regular expression
e 2
dead code
e 1
meta variables
hongwei xi
support sets
code generation
simultaneous induction
bound variable
typing rules
partial evaluation
object term
choose list
postponed code
gabbay pitts
empty support
proof term
substitution application
closed syntactic
expression matcher
binding structure
pitts 2002
star e
unknown support
calcagno et
int x
typing judgment
variable u
di erent
type int
holds 1
capture avoiding
gl uck
set c
temporal logic
meta language
level variables
chiyan chen
support x
syntactic expressions
environment classifiers
e choose
term e
al 1998a
al 1998b
provide definitions
y int
generating extensions
else let
acm sigplan
box x
taha 1999
boxed expressions
sch urmann
object stage
code expressions
x a e
names and necessity
nanevski f pfenning
order abstract syntax
set of names
wickline et al
higher order abstract
support set c
run time code
time code generation
davies pfenning 2001
x int x
higher order syntax
char list bool
pitts gabbay 2000
pfenning davies 2001
abstract syntax trees
following holds 1
closed and open
box in box
definitions for names
term with support
regular expression matcher
gabbay pitts 2002
calcagno et al
variables of object
x u x
escape the scope
et al 1998a
et al 1998b
substitutions with finite
orelse in loop
regexp char list
run time context
residual object programs
closed syntactic expressions
notion of closed
logic and freshml
meta and object
else let box
int x u
box x int
gl uck j
given a substitution
pitts 2002 pitts
appear in e
uck j rgensen
al 1998b wickline
box let box
c 1 dom
well formed relative
substitution of expression
moggi et al
object level variables
variable for variable
discrete temporal logic
well formed support
subsequent time moment
programs at run
pitts 2001 gabbay
support set d
loop s end
expression variable u
sigplan notices v
acm sigplan notices
u a d
introduction and elimination
capture avoiding substitution
modal logic s4
variables and names
e choose e
u a c
notion of open
notices v 38
chen hongwei xi
terms of type
chiyan chen hongwei
et al 1999
structure of e
used in e
set of free
