du
trn
coverage
ppfg
thread
wait
post
pathw
worker
testing
dfs
pasta
node
covered
della
dominator
path
paths
threads
pthread
ine
dt
queue
rendezvous
synchronization
runnable
matching
traversed
concurrent
manager
cover
nodes
infeasible
programs
phase
temporal
interprocedural
rpo
queues
coverages
og
working
sequential
nondeterminism
optional
flow
synchronizations
loop
passing
terminate
jej
criteria
adequacy
shared
successor
annotate
pcreate
delaware
dflo
message
traversal
branches
edges
finds
hybrid
traversals
jv
accept
associations
writer
var
pairs
annotated
synchronous
decision
pr
analyzer
claiming
calls
numbering
mpi
def
creation
accomplishes
acceptability
finding
request
increment
grunwald
generating
execution
suif
intra
deadlock
tool
unconstrained
advocate
send
included
create
readers
de
researchers
ensures
iterate
decremented
reproduce
statements
paradigm
decrement
effectiveness
statically
compiler
covering
army
acceptable
route
nsharlit
bron
ttc
magid
farchi
postdominates
pervade
essed
yarden
atirp
runnability
handler
srinivasan
traverse
receive
infinite
aid
displaying
reaching
calling
reached
automated
implied
reverse
grams
oe
mr
arkady
bertolino
yonit
testings
overstreet
ogi
unacceptable
regarding
branch
sub
limitations
paradigms
asynchronous
downfall
allelism
covers
trees
structural
scheduled
automatically
automatic
termination
dependencies
subprocess
deos
engstrom
penix
maheshwari
weininger
pasareanu
controlled
preserved
communication
successfully
screen
execute
hurdle
executed
nondeterministic
statement
completing
eitan
seungjoon
path coverage
du path
du pair
du pairs
parallel programs
parallel program
required nodes
de f
matching post
use node
della pasta
f ine
working queue
decision queue
define node
temporal testing
du paths
p path
pthread create
infeasible paths
path finding
memory parallel
w runnable
path testing
post node
first phase
infinite wait
final path
rendezvous communication
working queues
shared memory
finding algorithm
test data
concurrent programs
manager thread
temporal test
optional nodes
matching wait
loop node
message passing
node add
sub paths
post wait
flow graph
data flow
program testing
control flow
pair coverage
pr og
path 9
controlled execution
synchronization nodes
wait node
wait 2
testing criteria
dominator tree
parallel software
test case
sequential programs
post dominator
second phase
testing process
test cases
structural testing
parallel programming
path generation
hybrid approach
phase 2
adequacy criteria
data adequacy
thread creation
successor node
sub path
annotated ppfg
decision queues
ine oe
scheduled execution
dominator trees
wait nodes
testing parallel
nodes 28
testing aid
finding du
matching nodes
accept node
worker thread
oe use
node 22
thread containing
worker 2
trn 0
software testing
end node
partial path
software test
flow analysis
intra thread
traversal control
use nodes
post 2
k jv
static analyzer
worker 1
generated path
using dfs
use associations
concurrent program
du path coverage
de f ine
shared memory parallel
coverage for parallel
find a path
path finding algorithm
post and wait
du path testing
dt it approach
du path finding
finding all du
memory parallel programs
path to cover
testing of concurrent
find all du
equal to o
memory parallel program
define and use
final path coverage
du pair coverage
p path 9
wait is covered
two sub paths
providing all du
o 2 k
set of matching
statement in thread
control flow graph
data adequacy criteria
set of paths
test data adequacy
software test data
coverage for shared
parallel software testing
scheduled execution time
wait or post
nodes in thread
node s trn
phase the required
f ine oe
temporal test cases
path generation phase
finding du pairs
trn by one
complete the sub
finding a path
cause an infinite
data flow analysis
node is found
definition of path
test data generation
algorithm to find
time is equal
message passing parallel
message passing programs
