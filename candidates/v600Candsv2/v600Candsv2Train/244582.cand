schedule
prefix
schedules
redundant
harmonic
redundantly
height
processors
dependence
fringe
thr
sums
strict
scheduled
clusters
trailing
slots
pipelined
amortizing
dependences
cluster
depended
crew
pram
delayable
circuits
optimality
loop
yen
idle
pascal
chun
dep
delayed
distance
min
tn
legal
utilization
processor
cutting
snir
iteration
depth
odd
array
circuit
constructs
instantiated
resource
prefixes
speedup
ladner
inner
final
triangle
fringes
nodes
computes
graphs
allowable
tree
fan
corollary
body
top
loops
carried
epilogue
fischer
mp
allocations
unambiguous
recurrence
parallelization
sequential
lin
fich
iterations
inequalities
grand
auxiliary
parallelizing
fewer
compile
ops
devise
graph
period
jth
recurrences
ms
pt
strictly
connections
gave
log
subgraph
maximally
arcs
trees
armita
corallaries
unextended
tailing
gnote
mathord
gwe
abstractprefix
vphantom
gprocedure
bilgory
ahi
timp
muraoka
koc
gexample
egecioglu
correst
conquers
nulldelimiterspace
peymandoust
interchangeably
associative
heights
instantiate
evidence
characterize
row
parallelize
derive
nice
optimization
associativity
conjecture
empirical
epilogues
rceil
ofman
taniguchi
ffind
lceil
suranauwarat
kogge
sukanya
gthe
suffix
columns
preceding
supercomputing
existence
iff
resources
decribed
throught
hideo
extendibility
unwind
keng
ppc
directedness
concise
yielding
operand
inequality
claim
subject
kern
kuck
devised
source
kruskal
lengthened
facilitate
drawing
operands
group
lemma
hwan
amortization
wondered
ratio
rudolph
gajski
generates
redundant operations
harmonic schedule
right dependence
schedule h
optimal schedules
prefix sums
redundantly scheduled
cost vector
strict time
time optimal
p processors
final operations
prefix computation
redundant clusters
top fringe
scheduled elements
dependence distance
parallel prefix
harmonic schedules
full graph
strict optimal
redundant values
redundant cluster
final values
non redundantly
find min
height k
optimal time
given prefix
prefix problem
dependence graph
processors p
size n
schedule p
operation nodes
full thr
min time
theorem 7
thr graph
left source
n p
n elements
prefix circuits
final results
time steps
extended schedule
tree height
o r
pipelined schedules
algorithm 8
p steps
loop carried
processor slots
strictly time
amortizing scheme
right source
dependence graphs
sequential schedule
parallel schedule
optimal schedule
minimum number
minimum time
parallel step
height reduction
pipelined schedule
j right
time min
scheduled element
odd p
m tn
redundant tree
p final
construct cost
resource constraints
p p
min p
p independent
carried dependences
procedure construct
chun lin
construct graph
yen chun
p gamma
p 1
containing loop
single parallel
optimal parallel
loop body
trailing elements
optimization condition
dep distance
schedule computes
constructs strict
determining key
idle slots
even p
delayed operations
right dep
allowable height
computes prefix
procedure find
strong empirical
size processors
program space
fewer steps
h computes
gamma 1
vector c
th step
depth size
full tree
computation graph
final operation
time optimality
p subject
given p
n s p
right dependence distance
time optimal schedules
strict time optimal
redundantly scheduled elements
graph of height
sums of size
strict optimal time
number of redundant
non redundantly scheduled
find min time
n and p
o i j
algorithm 8 1
number of processors
prefix of size
schedules for n
elements on p
n p p
prefix of n
number of operations
parallel prefix computation
theorem 7 2
full thr graph
schedules for prefix
extended schedule h
time min p
min time min
tree height reduction
number of final
p processors p
processors p independent
schedule for prefix
achieve the strict
strictly time optimal
p 1 2
pascal s triangle
optimal parallel prefix
theorem 7 1
problem of size
cost vector c
single parallel step
containing loop carried
distance of j
redundantly scheduled element
optimal time steps
construct cost vector
number of depended
number of redundantly
procedure find min
number of operation
p gamma 1
p n p
loop carried dependences
parallel prefix circuits
yen chun lin
p in n
independent of n
right dep distance
full tree height
schedule h computes
maximum allowable height
determining key parameters
constructs strict time
j right source
n p f
min p n
slots in step
computes prefix sums
parameters of time
theorem 8 1
p p 1
using algorithm 8
strong empirical evidence
n on p
class of n
n in n
using p processors
