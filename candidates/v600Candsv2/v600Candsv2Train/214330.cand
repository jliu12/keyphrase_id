pool
pools
buffer
sender
receiver
cache
message
buffers
ksr
warp
processor
misses
phold
megabytes
processors
page
fossil
partitioned
degradations
miss
send
messages
committed
reclaimed
lps
executive
simulation
allocated
pcs
pages
event
redistribution
hogging
multiprocessor
memory
reside
caches
fujimoto
simulations
kendall
lock
ring
passing
invalidations
sending
multiprocessors
management
coherence
cancellation
events
mechanism
writes
destination
locality
overheads
caching
shared
returned
accesses
outperforms
severe
workload
sends
protocols
sec
allocates
declines
schemes
prefetch
hits
thrashing
cell
samir
decline
referenced
contents
workloads
synthetic
allocate
unallocated
portable
hypercube
amounts
mechanisms
carothers
population
coherent
virtual
richard
enqueuing
poor
granularity
transmitted
hundreds
receiving
measurements
serviced
update
das
phone
radio
enqueues
residing
rings
locks
timestamp
megabyte
gvt
copy
migration
knee
combat
utilized
unnecessary
invalidation
benchmark
lp
channels
thousands
central
sector
protocol
simulator
utilizing
excessively
neighborhood
aborted
modest
mb
secondary
routing
packed
benchmarking
roll
rollback
migrate
strategies
contention
msg
approximately
thirteenth
unallo
althoughsimple
ditional
kirton
redistributioncan
cellation
smtw
schwan
relf
mistic
ctlin
globalpool
ural
girindra
unmapping
continuouslyrouted
simmonds
scoop
traffic
minutes
subdivided
maximize
excess
platform
queue
winter
formance
proces
flags
aforementioned
disadvantage
machines
exceeded
invalidate
executing
grid
laboriously
bloated
popu
throughthe
extras
panesar
radharamanan
allocation
concerned
sized
queuing
restore
hardware
prefetching
pool scheme
receiver pool
sender pool
receiver pools
buffer pool
sender pools
time warp
partitioned pool
partitioned buffer
message buffer
page misses
pool approach
buffer management
ksr 2
buffer pools
message send
pool schemes
free pool
buffer redistribution
performance degradations
page miss
global pool
pools figure
partitioned pools
buffer memory
fossil collection
message passing
shared memory
pools sender
cache misses
three buffer
event rate
small granularity
committed event
message buffers
distributed simulation
performance events
simulation executive
sub cache
pools receiver
miss problem
memory allocated
original sender
cache miss
passing mechanism
message sends
simulation applications
parallel simulation
events sec
large simulations
severe performance
processor j
coherence protocols
kendall square
message population
event simulation
local cache
message cancellation
memory multiprocessor
destination processor
update based
synthetic workloads
management strategies
discrete event
sending processor
pool strategy
redistribution mechanism
pool mechanisms
sender writes
pool mechanism
allocated mb
buffer hogging
virtual memory
m fujimoto
misses occur
richard m
cache coherence
free buffers
neighborhood sizes
invalidations occur
research ksr
square research
additional caching
warp executive
sec processors
based cache
sends messages
processors partitioned
efficient buffer
cache coherent
processor allocates
warp system
cache hits
simulation p
update protocol
memory buffers
send time
maximize performance
receiving processor
buffer may
k equal
cache behavior
hardware platform
benchmark applications
message based
partitioned buffer pool
sender pool scheme
receiver pool scheme
sender and receiver
receiver pool schemes
partitioned pool scheme
buffer pool scheme
processor s cache
pools sender pools
receiver pool approach
receiver pools figure
three buffer management
amounts of memory
severe performance degradations
amount of memory
message passing mechanism
writes the message
committed event rate
performance events sec
page miss problem
lps and message
sender pools receiver
partitioned pools sender
pools receiver pools
buffer management strategies
discrete event simulation
shared memory multiprocessor
amount of buffer
b i j
richard m fujimoto
must be allocated
efficient buffer management
allocates a buffer
update based cache
message send time
via the buffer
population of 1024
improvement that results
memory allocated mb
processors partitioned pools
sec processors partitioned
ksr 2 multiprocessor
buffer redistribution mechanism
events sec processors
processor s buffer
research ksr 2
receiver pool strategy
number of page
cache coherence protocols
virtual memory system
processor s working
time warp executive
buffer management schemes
square research ksr
kendall square research
receiving the message
buffer management scheme
decline in performance
time warp system
megabytes of memory
sending the message
based cache coherence
number of buffers
processor to another
shared memory multiprocessors
number of pages
distributed simulation p
allocates the buffer
page memory allocated
receiver s cache
time in sender
memory is changed
pool i e
one million committed
additional caching overheads
pools figure 3
