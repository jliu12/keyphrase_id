epa
pa
automaton
post
nite
automata
ioe
reachability
regularity
pre
paj
subterms
regular
rules
simpli
nal
decidability
inria
rewrite
rr
hyp
schnoebelen
viewpoint
bpa
mayr
transition
paral
seq
ef
processes
mod
tree
bisimulation
ind
checking
nition
shu
decidable
lugiez
axioms
ned
recognizing
rule
decomposition
ne
modulo
pushdown
cation
eoeectively
accepting
rewriting
ed
languages
deltaj
ingredients
bpp
de
entails
gtt
permutative
delta
speci
ground
isnil
niteness
petri
telling
var
sos
gurations
eld
act
jaj
resp
algebra
complementation
theorems
induction
congruence
blowup
ftg
reachable
igiven
inon
uples
rpps
recursionj
ithere
ph
hci
nets
normed
decomposable
hc
terminated
language
def
alt
constructions
negations
algebras
iit
nullary
structural
rst
satis
iterated
decomposability
eoeective
connectives
equivalence
trs
behaviour
polynomial
philippe
congruences
corollary
arity
interprocedural
undecidable
determinism
tj
accepted
ax
transducers
ug
variants
accepts
np
fug
proposition
jqj
nitely
rewrites
propositions
ccs
insights
deterministic
recognizable
reach
abbreviations
veri
lemma
alternation
symbols
syntax
theoretic
alphabet
build
neutral
ku
fragment
easiness
isubset
constructionj
constructibility
labroue
astrees
cng
nowj
accouting
ipaj
approches
positionj
lodaya
usingtree
touili
tayssir
pa processes
gamma q
regular tree
model checking
post c
regular viewpoint
tree automata
pre c
tree languages
n 0123456789
tree language
post l
seq decomposition
nal state
transition rules
rr n
paral decomposition
q l
de ne
q 0
modulo j
ind hyp
pre l
tree automaton
reachability problem
regularity theorems
simpli cation
type 0
rewrite step
type 3b
completely speci
type 3a
last rewrite
process algebra
nal states
de nition
automaton accepting
q q
q type
nite decomposition
subterms delta
type 4b
type 2
step used
c 0
decomposition system
type 4a
de ned
recognizing l
l type
speci ed
type 3
lugiez ph
ground rewrite
automaton al
d lugiez
type 1a
cation axioms
shu e
automata techniques
checking pa
c 00
form x
rule q
x 7
action names
telling whether
ph schnoebelen
f q
w 0
form q
proposition 8
deterministic tree
states q
structural equivalence
context free
nite number
nite set
ef logic
u al
hyp gives
rule use
l epa
al recognizing
var delta
deltaj states
pa process
pa terms
c act
regular equations
ed automaton
recursive parallel
permutative axioms
rewrite system
state processes
q 7
checking problem
petri nets
free languages
x rewriting
ne l
c components
process variables
n alt
c component
viewpoint on pa
rr n 0123456789
regular tree languages
inria the regular
decomposition of c
regular tree language
used a type
gamma q l
rewrite step used
x 7 gamma
last rewrite step
completely speci ed
form x 7
q l type
type 3 rule
nite decomposition system
gamma q q
type 2 rule
regularity of post
l and pre
gamma q type
c c 0
q q l
form 0 7
simpli cation axioms
q 7 gamma
model checking pa
state of al
regularity of pre
checking pa processes
lugiez ph schnoebelen
u 2 epa
d lugiez ph
q q 0
use a type
c 0 l
y a y
lemma 5 3
k q 0
set of iterated
tree automata techniques
automaton for mod
al recognizing l
pa process algebra
q 0 7
set of pa
pre c c
j deltaj states
gamma q 7
rule to show
states from q
type 4a rule
let the nal
type 4b rule
automaton al recognizing
type 3a rule
ind hyp gives
type 3b rule
problem in paj
pre c l
type 4 rule
rule in delta
pre x rewriting
recursive parallel programs
deterministic tree automaton
speci ed automaton
taking the requirements
model checking problem
context free languages
nite state processes
de ne l
rule we need
decidable for normed
exists some u
c 2 c
gamma q 0
