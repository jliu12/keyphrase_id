fj
fgj
java
erasure
gj
stupid
snd
typing
setfst
featherweight
casts
newfst
soundness
typed
fst
pairofa
subtyping
calculus
cast
object
ok
superclass
declarations
ct
invocation
extends
sigplan
downcasts
lambda
upcast
expression
safe
subtype
rules
field
fields
subexpression
notices
subclass
constructor
nonvariable
downcast
mbody
generic
supertype
millstein
declared
casting
stuck
noble
syntax
mixins
delta
synthetic
gt
substitution
cl
lookup
erased
jvm
auxiliary
felleisen
confinement
upcasts
viroli
invk
potanin
dcast
languages
constructors
judgment
body
core
mtype
biddle
nipkow
jej
semantics
overriding
names
flatt
operational
abadi
erase
expressions
wadler
vitek
ownership
derivation
mirko
pizza
todd
super
calculi
preserves
cardelli
fn
warning
classes
generics
erases
oriented
declaration
safety
bleckner
scast
typecasts
typecast
drossopoulou
riely
fieldsmax
eisenbach
oheimb
igarashi
genericity
sion
james
subtleties
style
rule
jaj
language
dom
krishnamurthi
stoutamire
odersky
syme
bracha
andreae
wildcards
tian
parametric
reduction
typedness
slogan
jnj
override
foundations
formalizing
overloading
erasures
glew
toplas
receiver
expres
polymorphism
metavariables
sanity
typechecking
abbreviate
sensible
checked
aspect
typ
keyword
inference
rigorous
jens
induction
compactness
cn
overlooked
signment
shorthand
formal
capturing
stylized
palsberg
vancouver
reflexive
inheritance
atsushi
definitions
derivations
invocations
october
scoped
steele
datatypes
covariant
gamma
xi
formed
jan
alex
inner
neal
myers
zhao
parameterized
reflection
recursion
omit
instantiated
new b
new pair
pair new
class c
well typed
extends object
new c
delta gamma
featherweight java
gamma e
type parameters
class table
method invocation
type soundness
stupid casts
extends d
c extends
b new
typing rules
c x
synthetic casts
field access
e gamma
reduction rules
gamma new
environment delta
acm sigplan
k m
x n
expression e
f k
stupid cast
fj program
b snd
lambda calculus
type variables
notices v
sigplan notices
m class
method declarations
subject reduction
return new
inner classes
class pair
object snd
syntax typing
snd pair
object fst
environment gamma
core calculus
fst object
c written
type environment
result type
well formed
operational semantics
jej delta
c new
object oriented
new n
e reduces
james noble
generic classes
c f
typed expression
class declarations
typing class
term substitution
pair newfst
snd gamma
fgj programs
stupid warning
b setfst
newfst return
x extends
mbody m
gamma fgj
erasure preserves
todd millstein
typing judgment
expression new
table ct
auxiliary definitions
fst snd
lookup class
jaj delta
auxiliary functions
e includes
n 10
n n
oriented languages
c e
n e
includes new
written x
soundness proof
small step
e 0
object calculus
class definitions
type variable
nonvariable type
highest superclass
pair setfst
m ok
using fj
gamma fj
fj programs
setfst method
class pairofa
raw types
setfst object
mirko viroli
mtype m
extends c
typed fj
new c0
potanin james
maximum type
safe expression
object newfst
alex potanin
fgj expression
fj expression
new a new
new pair new
class c x
c x n
f k m
class c extends
x n n
c extends d
c f k
gamma e 2
e gamma e
acm sigplan notices
sigplan notices v
m class c
type environment delta
pair new pair
k m class
new b snd
new c e
extends d c
n 10 october
new n e
d c f
information about type
jej delta gamma
object fst object
class c written
new b new
fst object snd
newfst this snd
well typed expression
classes and methods
n s f
syntax typing rules
b new b
new b setfst
fgj to fj
class table ct
typing class c
jaj delta gamma
new c new
newfst return new
new pair newfst
safe in gamma
delta gamma e
object snd pair
e includes new
lookup class c
proof of soundness
features of java
k m m
proof of type
defined in m
c a new
e 2 c
notices v 41
notices v 40
column of figure
f as short
gamma e 0
field and method
snd gamma new
snd pair setfst
term substitution lemma
b snd gamma
well typed fj
gamma new b
setfst object newfst
c the typing
d x e
calculus of classes
new b gamma
m v d
class pair x
e gamma fgj
nonvariable type n
object newfst return
well typed fgj
new a f
return new pair
new c0 e
pair setfst object
potanin james noble
setfst new b
parameters at run
alex potanin james
b setfst new
forms of expression
extends object object
expression e reduces
x n d
well formed types
e is safe
derivation of gamma
n d u
classes and mixins
well typed programs
class based object
step operational semantics
n t f
v 41 n
