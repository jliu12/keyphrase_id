mutation
petri
reliability
mutants
mttf
godzilla
correlation
exec
firing
mothra
module
mutant
accelerometer
testing
retry
failures
kill
lander
failure
planetary
correlated
faults
transitions
nets
enhancement
timing
stochastic
fault
distributions
versions
net
acceleration
incorrect
enabled
xpsc
modules
nasa
voting
mutated
transition
programmers
oeae
token
timer
ammann
synchronization
sensor
score
adequacy
stressful
unhealthy
constraint
functional
phi
knight
success
conservative
gradient
diversity
ms
killed
independence
adequate
unachievable
attached
software
evan
fire
multiversion
restart
randomly
probability
littlewood
execution
cov
successes
accelerations
status
retries
surviving
theta
specifications
tolerant
estimates
definitive
regarded
fail
experiment
automated
fired
exhibited
necessity
dead
empirical
sufficiency
votes
random
lend
inputs
hyperplanes
yes
dramatic
vote
reveal
sampling
variation
kuball
thetafl
muppala
lorrie
conservativeness
precipitous
silke
jogesh
downward
upward
failing
five
forced
guidance
ranged
fortran
programs
tight
demillo
reinitializes
strigini
tomek
popov
answers
timeout
statement
covariance
tokens
reachability
estimated
eckhardt
vigorous
kishor
offutt
timed
queueing
fails
profiles
independently
automatically
clemson
optimistic
criteria
inconsequential
lending
gauging
healthy
datapoints
fared
psi
minor
executed
responses
places
operators
analytically
thereon
genuinely
cbt
voters
retrying
asp
majority
concern
tested
ae
trivedi
regeneration
deposits
percentiles
offered
clarification
discs
strikingly
substantial
density
test cases
stochastic petri
mutation testing
n version
petri net
time distributions
version software
test case
test data
reliability enhancement
multi version
firing time
functional failures
execution time
n versions
mutation analysis
mutation generated
planetary lander
mutation gradient
module execution
synchronization model
lander control
accelerometer sensor
petri nets
timing constraint
extended stochastic
reliability estimates
correct output
control software
system reliability
generated test
sensor processing
mutation kill
theta b
version programming
mutated statement
data diversity
theta x
time software
e theta
processing module
based testing
input space
phi phi
execution times
generalized stochastic
must cause
system failure
empirical execution
among versions
hold greater
functional failure
correlated firing
reliability estimate
version voting
place success
correlation factor
versions nevertheless
voting system
failure points
software testing
r j
random testing
constraint based
equivalent mutants
tolerant software
version real
greater potential
o pairs
correlated sampling
automatically generated
timing constraints
b x
mutation operators
mutation based
independence among
chosen input
mutation score
tight timing
x theta
path expression
independent model
program test
incorrect output
randomly chosen
case must
automated test
single version
net model
ae ae
enabled transitions
original program
model parameter
among n
cov theta
short firing
obtaining numerical
place failure
version system
failures surviving
incorrect intermediate
combining queueing
stressful input
developed implementations
versions exhibited
acceleration m
generalized timed
mutation adequate
surviving retry
sample correlation
exhibited functional
improved modules
majority yes
significant reliability
chosen program
godzilla generated
yes decision
relative adequacy
evan martin
non equivalent
draw definitive
five independently
net simulation
perhaps unachievable
adequate tests
k small
reveal faults
gradient retry
programming k
definitive conclusions
execution time distributions
multi version software
theta a x
theta b x
stochastic petri nets
extended stochastic petri
planetary lander control
lander control software
stochastic petri net
nasa s planetary
x theta b
accelerometer sensor processing
exec i transitions
constraint based testing
sensor processing module
real time software
generalized stochastic petri
generated test cases
cause the mutant
module execution times
represent the synchronization
independence among n
empirical execution time
n versions nevertheless
independent model parameter
automatically generated test
correlation factor k
hold greater potential
version real time
ammann and knight
firing time distributions
based on mutation
generated i o
version voting system
among n versions
n version programming
case must cause
randomly chosen input
distributions the results
potential for reliability
new test cases
phi phi phi
represented by figure
fault tolerant software
j i j
designed to reveal
test case must
design of fault
petri net model
ae ae ae
test cases theta
solution of complex
version programming k
testing could hold
sampling of module
group with correlation
independently developed implementations
since these test
points at 1
correct output distribution
significant reliability enhancement
based testing could
cases are designed
non equivalent mutants
modules on test
exec i versions
statistics with reliability
mttf of correlated
perhaps unachievable goal
execution time profiles
goal of independence
e theta x
executing the modules
majority yes decision
mutation adequate tests
correlation of success
programmers were given
module execution time
faults as mutation
recorded the synchronization
combining queueing networks
networks and generalized
petri net 11
five independently developed
programming k small
complete case study
set a status
could hold greater
obtaining numerical estimates
exhibited functional failure
theta 5 versions
n version real
execution time time
knight s data
select a firing
