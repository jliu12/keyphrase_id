fusion
ow
purdue
loop
dependence
array
shifting
nests
loops
fused
coalescing
contraction
cache
dv
coalesced
dependences
laplace
locality
ek
reference
window
climate
combustion
live
benchmarks
edge
nest
ldg
dierent
simplication
dk
lexicographically
register
gs
tiling
jb
spills
predicted
os
distances
memory
edges
misses
legal
regions
nested
static
denition
lucas
privatization
compiler
enhancement
annotated
zb
constraint
peeling
collective
miss
retiming
distance
native
jn
iteration
fuse
kth
transformed
yonghong
fs
scalar
dene
satised
objective
contracted
shortest
za
rst
rice
scalars
benchmark
zhiyuan
legality
inequality
ck
residue
vk
counts
arrays
nonnega
requirement
optimality
footprint
mid
legally
rk
parallelism
skewing
codes
kn
fraboulet
hth
innermost
spilling
referenced
improving
kandemir
replacement
darte
lm
jacobi
dened
simultaneously
kennedy
simplied
enabling
sth
normalized
network
references
unied
nonnegative
nds
count
jam
ref
unrolling
nd
reduction
tive
interchange
node
originated
body
subscripted
nesting
minimization
mg
gure
successive
region
prefetching
flows
reuses
imperfectly
anti
perfectly
song
trip
eect
speedup
transfor
statements
perfect
zz
collection
mckinley
hpf
preventing
lexically
compilers
programs
eectiveness
culties
unroll
livermore
transformations
reject
lemma
sarkar
temporary
spanning
np
statistics
stencil
temporal
loop fusion
reference window
static write
memory reduction
loop shifting
write reference
array contraction
network ow
local array
predicted reference
array regions
distance vector
loop nests
loop dependence
ow dependence
loop coalescing
reference input
dependence distance
simultaneously live
memory requirement
m edge
l edge
live local
dependence edges
purdue set
problem 2
shifting loop
node l
problem 1
dependence graph
dependence distances
window size
ow dependences
successive shortest
coalesced dependence
laplace gs
kth static
laplace jb
problem 3
data locality
array region
l j
elements due
collective loop
purdue 03
array elements
nested loops
reference r
optimal solution
dependence edge
objective function
program model
scalar replacement
loop nest
problem 4
p l
function 2
jb laplace
purdue 12
climate laplace
purdue 13
shifting factors
legal network
purdue 08
purdue 07
f ek
fused loop
shifting factor
register spills
m edges
loop levels
cache misses
edge e
memory minimization
constraint 9
loop l
path algorithm
iteration space
constraint 3
ow problem
reference counts
reduction technique
loop l2
simplication process
lexicographically minimum
vector dv
purdue 04
shortest path
k values
constraint 4
level h
loop body
loop peeling
ow values
array languages
input 2
l edges
ow value
dependences due
code form
locality enhancement
miss count
output array
array privatization
perform loop
ow algorithm
constraints 8
inequality 8
network flows
native compiler
constraint 5
array data
dv e
dierent loop
cache statistics
lexicographically maximum
ow property
nest l
perform scalar
static write reference
predicted reference window
reference window size
loop dependence graph
local array regions
simultaneously live local
live local array
solution for problem
local array elements
end do end
objective function 2
number of simultaneously
kth static write
loop shifting loop
successive shortest path
due to r
fusion and array
memory reduction technique
array elements due
m i k
dependence distance vector
write reference r
edges from l
reference in l
among all dependence
laplace jb laplace
reference input 2
collection of loop
coalesced dependence distance
legal network ow
purdue 12 purdue
shifting loop fusion
climate laplace jb
jb laplace gs
shortest path algorithm
network ow problem
collection of loops
r in l
due to local
purdue 07 purdue
vector is lexicographically
collective loop fusion
form after loop
ow dependences due
purdue 13 climate
purdue 04 purdue
purdue 08 purdue
purdue 03 purdue
distance vector dv
edge in g
l i j
shows the code
figure 3 c
array data ow
edges in g1
l j due
purdue 02 purdue
simultaneously live array
node in g1
given any optimal
shifting and coalescing
originated from l
loop nest l
loops are coalesced
many loop levels
reference input 3
program from spec95fp
pick and reject
reference window due
total reference counts
perform scalar replacement
loop nests l1
fusion preventing dependences
shifting factor p
static write references
l i due
