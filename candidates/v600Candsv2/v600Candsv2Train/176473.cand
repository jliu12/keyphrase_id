slice
hrb
slicing
roll
vertex
sdg
interprocedural
slices
verticesofslice
vertices
executable
dependence
binkley
statements
weiser
sites
mismatch
intraprocedural
calling
edges
mismatches
inducedgraph
def
site
isomorphism
executableslice
horwitz
loyola
danicic
edge
isomorphic
unwanted
reps
calls
harman
statement
reachingvertices
connects
kos
syntactically
formal
terminates
korel
transfer
maintenance
pdg
kiss
gyimthy
graphs
amorphous
debugging
sebastian
produces
tibor
tcs
contexts
precise
indivisible
induced
subgraph
bogdan
procedures
predicates
assignment
labeled
restricting
aliases
dependences
division
semantics
dave
flow
caught
insert
infinite
summary
regression
pass
pdgs
vertexset
handler
college
kinds
expansion
mark
meanings
programs
execut
delcher
slic
holdsworth
ptran
projecting
integration
backwards
reachability
affect
lyle
subcomputation
occurrences
sigsoft
treats
untransformed
mismatched
encountered
noninterfering
gallagher
sloane
globals
semantic
producing
passing
passes
cs
parallelization
sliced
produced
brief
zhongqiang
xiaofang
tices
entry
legal
baowen
escapes
monolithic
descend
expanding
traversal
np
scope
unsolvable
tmp
correctness
occurrence
chief
execu
ponents
boundaries
actual
accounts
exception
formalisation
cedure
removes
syntactic
david
approximations
lexically
aborts
parameter
loop
program
summer
safe
included
susan
interfering
correctly
extends
multiprocessing
differencing
keith
pro
divisible
predicate
qian
ver
aids
versions
illegal
unsatisfactory
street
optimizations
designate
fills
connecting
avoids
preserving
missing
transformation
integrating
notes
imprecise
print
synchronizing
anthony
conservatively
naming
g roll
hrb algorithm
hrb slice
program slicing
call sites
v hrb
interprocedural slicing
def order
dependence graphs
call site
dependence edges
system dependence
slicing algorithm
dependence graph
g slice
calling context
call statements
interprocedural slice
executable interprocedural
point p
interprocedural slices
called procedure
executable slice
vertex mismatches
vertex mismatch
summary edges
program integration
second call
edge connects
single procedure
procedure program
every parameter
hrb slicing
slice includes
isomorphism lemma
executable slices
inducedgraph g
infinite program
procedure dependence
induced graph
procedure calls
calling contexts
procedure programs
call vertex
software maintenance
call statement
david binkley
program point
insert figure
two call
entry vertex
slicing using
version 2
version 1
slicing theorem
edges control
unwanted call
call edges
include different
variable x
g v
dependence edge
using dependence
might affect
graph isomorphism
flow dependence
intraprocedural slicing
sebastian danicic
order edge
precise executable
multi procedure
binkley sebastian
executable programs
different actual
parameter passing
actual parameter
pass 1
mark harman
first call
global variable
control edges
assignment statements
x consists
y represents
g 1
original system
vertex v
edge set
vertex u
algorithm produces
vertex set
original program
program dependence
infinite loop
interprocedural data
may include
slice terminates
produces slices
slice executable_slice
actual in vertex
roll out slice
actual out vertex
actual out vertices
verticesofslice s v
system dependence graph
solution to version
executable interprocedural slices
x at point
formal in vertex
program point p
transfer in statement
hrb slicing algorithm
produce an executable
graph isomorphism lemma
procedure dependence graphs
induced graph isomorphism
p and variable
variable that may
vertex or edge
sequence of values
set of vertices
respect to program
using dependence graphs
unwanted call sites
actual in vertices
def order edge
call in main
include different actual
variable x consists
statements and predicates
slice of g
affect the value
taken with respect
division by zero
program with respect
program that might
effects of procedure
formal out vertex
single procedure programs
precise executable interprocedural
y and e
binkley sebastian danicic
flow dependence edges
two call sites
interprocedural slicing algorithm
semantics of program
restricting the original
set of g
x at p
vertices in v
represented by v
provides a solution
interprocedural slicing using
slicing using dependence
interprocedural data flow
boundaries of procedure
procedure s parameters
weiser s interprocedural
edges and parameter
v def order
g 1 onto
flow edges control
syntactic correctness theorem
semantics preserving transformation
along def order
edges control edges
contexts for c
theorem for intraprocedural
values when evaluated
weiser s original
g s v
edges summary edges
