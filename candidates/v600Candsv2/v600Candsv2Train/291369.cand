checkpointing
checkpoint
diskless
checkpoints
disk
fork
processors
simp
parity
processor
failures
incremental
pstswm
pcg
nbody
recovery
pages
forked
mat
encodings
raid
mirroring
encoding
ckp
coordinated
latency
overhead
diff
compression
page
pvm
rollback
failure
megabytes
tests
failed
reed
solomon
bytes
wholesale
mtbf
fan
fault
roll
workstations
nockp
diffs
sec
checkpointed
nfs
days
inc
latencies
clone
coding
chunks
tolerated
storage
checkpointers
cannon
chunk
spare
stable
memory
slave
grid
evenodd
checkpointer
mbytes
sending
plank
libckpt
cell
mbyte
particles
condor
copy
cpu
registers
replacement
bitwise
compressed
disks
particle
tolerant
calculated
variants
running
tolerance
vaidya
coverage
tolerate
yookun
jiman
junyoung
transparent
modifies
grids
roughly
employed
calculates
lowers
mist
relinking
sangho
bandwidth
protection
survive
redundancy
cho
ramification
heo
unmodified
plus
tolerating
optimizations
gluing
compressibility
assessed
hours
anew
transputer
submatrices
faults
saurabh
remote
cellular
stored
message
shared
proportional
uniprocessor
massively
ethernet
yuanyuan
encode
iterations
cloning
updated
dma
automaton
entirety
denser
unused
opt
usage
overwrites
sync
iteration
tolerates
file
copies
sends
discard
sixteen
vastly
eq
swapped
compressing
demands
shallow
entail
calculating
penalty
session
usenix
extra
resilient
salient
lowest
unix
xor
recommendations
hamming
fails
saving
tucek
angskun
expendable
tckp
triplicate
camargo
xiaojuan
thara
outnumbers
orau
gamut
agbaria
mprotect
celso
ssi
diskless checkpointing
disk based
based checkpointing
application processors
incremental checkpointing
application processor
checkpoint size
checkpoint processor
checkpointing processors
disk fork
checkpoint processors
checkpoint latency
dimensional parity
stable storage
raid level
processor failures
coordinated checkpoint
expected running
fork tests
running time
diff based
based compression
level 5
per checkpoint
address space
recent checkpoint
checkpoint latencies
inc fork
standard disk
previous checkpoint
solomon coding
recovery time
failed processor
checkpoint mirroring
forked checkpointing
failure coverage
failed application
checkpoint encoding
c inc
simple diskless
reed solomon
non failed
checkpointing system
recovery times
diskless checkpoint
fork checkpointing
checkpointing processor
c fork
forked diskless
megabytes per
roll back
failed processors
checkpoint overhead
rollback recovery
coordinated checkpointing
long running
sec mat
checkpoint sec
processor address
checkpointing variants
checkpointing systems
simp tests
replacement processor
registers application
size mbyte
mbyte processor
replacement processors
spare processor
slave processors
two checkpoints
fault tolerance
processors use
failures may
sec sec
checkpoint interval
per processor
instance used
modified pages
pvm session
based checkpoints
parity calculations
checkpointing improves
checkpoint encodings
sun nfs
checkpointing interval
remote disk
incremental diskless
overhead latency
checkpoints may
parity figure
processors roll
fork c
diskless checkpoints
incremental forked
disk based checkpointing
raid level 5
expected running time
diff based compression
standard disk based
copy on write
reed solomon coding
performance of checkpointing
latency and overhead
checkpointing to disk
presence of failures
single processor failures
simple diskless checkpointing
forked diskless checkpointing
disk fork checkpointing
disk fork tests
one dimensional parity
fan in algorithm
latency and recovery
simp and fork
may be tolerated
bytes of memory
checkpoints are taken
checkpointing and recovery
size mbyte processor
registers application processor
checkpointing with compression
failed application processors
checkpoint size mbyte
application processor address
two dimensional parity
per checkpoint sec
processor address space
non failed application
overhead of checkpointing
networks of workstations
bytes per page
incremental diskless checkpointing
two processor failures
cannon s algorithm
calculates the parity
function of checkpoint
level 5 encoding
overhead of disk
impact of checkpointing
diskless checkpointing may
absence of checkpointing
encoding the checkpoints
pages between checkpoints
performance of stable
pages are modified
encode the checkpoints
mat and pcg
following a failure
disk based checkpoints
processor failures may
application s address
megabytes per second
compared to standard
checkpointing in parallel
due to checkpointing
sec sec sec
assess the performance
time is proportional
