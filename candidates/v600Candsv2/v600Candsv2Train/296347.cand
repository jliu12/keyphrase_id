errors
verification
ssl
coverage
boes
bses
verilog
microprocessor
bse
microprocessors
mses
asaad
wrong
gate
bus
hayes
missing
mudge
campenhout
tests
error
modeled
dominated
category
rtl
boe
module
detectable
lc
cvs
erroneous
sensitizing
adder
isa
dlx
alu
cssln
cboe
mutation
testing
brown
methodology
inversion
signals
fault
mux
bug
hardware
designs
dxxd
isab
unverified
circuit
generation
observability
projects
circuits
modules
targeted
undetectable
bugs
incrementer
faults
conditional
signal
xnor
detected
specification
stuck
inv
sensitization
detect
behavioral
instruction
unconnected
metrics
clg
logic
buses
combinational
revision
student
injecting
detects
automated
flipflop
van
statement
fsm
synthesis
zeljko
zilic
radecka
katarzyna
detection
effectiveness
declaration
experiment
generator
puma
mutants
dominate
lookahead
gates
categories
functional
xor
mse
mutant
chameleon
recorded
activate
systematically
questionnaire
industrial
modeling
validation
representative
redundant
ule
simulation
tao
simulator
lv
synthetic
excluding
designers
decoding
expose
physical
parity
revisions
hdl
register
propagate
designer
severity
extra
mistakenly
biased
confidence
faulty
bit
injected
inject
latch
tools
multiplexers
trevor
debug
vhdl
width
incorrectly
par
outputs
deployment
permissions
conceptual
adders
fanout
guide
inc
wei
emulation
pipelined
michigan
xiao
avpgenmyampersandmdash
uncondi
undetec
asadi
multibit
mce
cboen
robach
ghazanfar
lce
ssls
hayek
avpgen
decchip
hauke
error models
design errors
design error
design verification
actual design
test generation
actual error
modeled error
dominated modeled
basic error
modeled errors
actual errors
error modeling
microprocessors via
via error
physical fault
lc 2
verification methodology
al asaad
p hayes
asaad j
ssl errors
complete test
b brown
level design
van campenhout
high level
error collection
error instances
ssl error
conditional error
generate tests
design projects
functional verification
hardware design
error types
signal source
inversion errors
errors category
basic errors
test sets
error model
fault testing
extra missing
campenhout h
error data
d van
wrong signal
h al
d 1
correct design
guide test
statement _
corresponding dominated
category 16
always statement
test set
j p
level test
automated test
r b
wrong constant
error corresponds
design d
count error
gate level
software testing
simulation vectors
mutation testing
missing input
reference model
verification via
error design
synthetic error
ssl bse
bse cssl1
logical fault
verilog syntax
single actual
systematically recorded
error dominated
unverified design
cvs revision
cssln errors
ssl model
source errors
gate module
state _
error detection
instruction sequence
high coverage
conditional errors
gate errors
improve coverage
modeled design
erroneous design
verilog code
bit signals
errors 2
wrong operator
tests detect
observability based
library modules
synthesis tools
design bugs
level model
detection via
state machine
coverage metrics
code coverage
error coverage
logic synthesis
case statement
carry lookahead
bit width
final design
test generator
complete coverage
random test
hardware description
finite state
nature frequency
actual design errors
via error modeling
basic error models
verification of microprocessors
microprocessors via error
level design verification
mudge and r
dominated modeled error
high level design
asaad j p
r b brown
j p hayes
hayes t mudge
al asaad j
coverage of actual
actual design error
physical fault testing
hardware design verification
design error models
number of error
guide test generation
campenhout h al
d van campenhout
van campenhout h
h al asaad
wrong signal source
level test generation
corresponding dominated modeled
error in d
design error collection
logic synthesis tools
dominated modeled errors
high level test
design verification via
complete test sets
complete test set
automated test generation
behavioral and rtl
tests for ssl
errors on 1
synthetic error models
verification and physical
actual design bugs
ssl bse cssl1
test that detects
bses and mses
signal source errors
design verification methodology
conditional error models
design d 0
final design d
finite state machine
hence the error
high level model
test generation using
electronic testing theory
detection via fanout
cvs revision database
functional verification methodology
code coverage metric
prototyping the m68060
models for library
m done simulating
errors are grouped
actual errors corresponding
dynamic biased pseudo
errors are targeted
error collection system
injecting the dominated
modeled errors category
frequency and severity
verilog code excluding
modeled error corresponding
tests simulation vectors
verification of k5
verilog syntax error
total high level
errors corresponding dominated
input gate errors
component basic errors
latch flipflop _
biased pseudo random
projects design error
detectable with respect
design errors occurring
input s _
isa visible part
sequence that detects
error detection via
