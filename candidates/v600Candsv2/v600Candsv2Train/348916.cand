pointer
andersen
steensgaard
analyses
burke
cfg
alias
choi
precision
ref
lambdap
interprocedural
mod
benchmarks
live
landi
unexecutable
ptr
insensitive
client
mccat
ch
allroots
flow
eks
reaching
vs
sensitive
aliasing
sigsoft
dead
st
clients
bisect
heap
loader
assembler
propagation
benchmark
sensitivity
aliases
dependences
slicing
dereferences
anagram
ks
assignments
flex
dereference
bu
seg
compress
pointers
fixoutput
improvement
vor
ruf
precise
ryder
gaard
setjmp
undecidability
efficiency
sigplan
compiler
aliased
objects
longjmp
pcg
worklist
hind
referenced
wilson
snowbird
associates
empirical
austin
npic
asg
dakota
definitions
harrold
reports
named
usage
dummy
casting
conditional
lambdaq
montana
pct
fcts
milanova
utah
node
steens
prolangs
simulator
online
kill
java
atanas
zeller
formals
rountev
dereferenced
optimistic
hankin
pearce
donglin
suite
et
argc
unioning
metric
football
argv
hendren
mock
consumption
precomputed
locals
aix
measurable
counted
liang
dependence
object
eggers
diwan
effects
engineering
nodes
identification
array
avg
initializations
modula
void
statements
site
killed
chris
name
compact
ana
address
chambers
kelly
spec
tip
safe
susan
ibm
assignment
markus
isolating
suites
loc
five
unreachable
struct
average
calls
declared
tosem
foundations
andflowdependences
noncall
pointer analysis
burke et
address taken
choi et
taken analysis
client analyses
andersen burke
cfg node
mod ref
flow insensitive
flow sensitive
pointer analyses
et al
reaching definitions
live variable
variable analysis
constant propagation
b ch
cfg nodes
dead assignments
sensitive analysis
analysis time
program analysis
context sensitive
ptr mod
show 1
flow sensitivity
live variables
alias analysis
insensitive algorithm
bu ch
pointer alias
flow dependences
pointer aliasing
ch allroots
five pointer
analysis clients
unexecutable nodes
context insensitive
vs 1
ref analysis
precision results
sensitive pointer
alias information
precise analysis
pointer information
program slicing
sensitive algorithm
ptr ref
loader 129
definitions analysis
allroots 04
ref set
finding dead
four columns
c programs
interprocedural pointer
memory usage
alias relations
named objects
one object
software engineering
sigplan sigsoft
sigsoft workshop
vs 2
online cycle
conditional constant
acm sigsoft
main function
efficient context
acm sigplan
context sensitivity
modification side
analysis algorithms
solution set
alias representation
vs 20
constants found
precomputed kill
compiler assembler
dummy main
pointer algorithms
unexecutable code
ks 05
wilson 39
mccat 1
compress compiler
insensitive analyses
assembler simulator
analyses improved
one set
memory consumption
whole program
software tools
partial online
kill information
pointer expression
nodes detected
results show
data flow
formal parameter
aliasing efficient
analysis precision
alias set
burke et al
choi et al
al s analysis
address taken analysis
steensgaard s analysis
al s analyses
andersen burke et
live variable analysis
ch at st
st a b
results show 1
flow sensitive analysis
precision and efficiency
st an bu
ii an average
analysis and andersen
flow insensitive algorithm
points to analysis
mod and ii
andersen s analysis
difference between andersen
name at st
increase in precision
difference between steensgaard
analysis and steensgaard
andersen and burke
analyses and choi
analysis for c
sensitive pointer analysis
mod ref analysis
analysis of choi
pointer analysis clients
loader 129 compress
reaching definitions analysis
allroots 04 bisect
mod and ref
finding dead assignments
ch allroots 04
pointer alias analysis
sigplan sigsoft workshop
workshop on program
tools and engineering
acm sigplan sigsoft
analysis for software
whole program analysis
context sensitive pointer
efficient context sensitive
measure the precision
steensgaard s analyses
precomputed kill information
unexecutable nodes detected
aliased to lambdap
analyses of andersen
taken and steensgaard
analysis and dead
improvement in 5
b ch allroots
pointer analysis precision
improvement in 13
attempts to determine
pointer for ptr
pointer analysis time
benchmarks for ref
ks 05 eks
benchmarks for ptr
program and uses
flow insensitive analyses
difference for finding
dummy main function
precision of pointer
reports the average
context sensitive algorithm
partial online cycle
pointer analysis algorithms
conditional constant propagation
set of four
affect the precision
