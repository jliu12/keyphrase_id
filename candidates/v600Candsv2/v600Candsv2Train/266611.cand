java
bytecode
concurrency
bytecodes
hardware
specification
opstack
dataflow
cdfg
thread
automation
stack
co
rosenstiel
dependencies
operand
procaclass
proca
procbclass
synthesis
references
europe
grained
parallelism
instances
threads
winterholer
processmethod
dalpasso
ireturn
primitive
designer
language
kuhn
scenic
verilog
specifications
bogliolo
reaching
subsystems
handler
munich
flow
indirection
numbering
uncover
obj
designs
alessandro
resolve
languages
codesign
loop
esterel
blocks
alias
benini
marcello
validation
partitioner
buchenrieder
getxarray
xready
kashai
oppold
static
catch
loops
software
invocation
pop
jvm
yokohama
kress
invocations
aliasing
fields
ip
fummi
void
partitioning
reference
fleischmann
raytracer
haldar
conservatism
resolved
dependences
germany
luca
wolfgang
decoder
invoking
synchronized
nayak
josef
compile
exception
object
reactivity
tommy
behavioral
embedded
united
pacific
schulz
entry
statically
allocate
lev
exceptions
pointer
choudhary
asia
edwards
constructs
paris
louisiana
transfer
orleans
iterations
avg
fin
pre
core
rainer
virtual
functional
japan
fine
coarse
analyzing
linked
push
vhdl
trap
exhibited
operands
reads
array
els
dynamically
allocated
extract
invoked
aggressively
banerjee
concurrent
aggressive
oriented
accesses
mixed
south
instantiations
helaihel
pezzuol
arithmeticexception
schirrmeister
rming
conceptualized
shitsevalov
speccharts
shilman
kebschull
classing
putzke
javacad
davidmann
valk
radetzki
malay
robotarm
jmtp
srgio
procb
openj
setxar
udo
prith
subsytems
classfile
superlog
setxarray
disstributed
carro
klaus
public
hardware software
level concurrency
co design
class instances
control flow
design automation
grained concurrency
operand stack
basic blocks
specification language
x array
bytecode level
software languages
software co
functional validation
bytecode numbering
system specification
software systems
automation p
control dataflow
co synthesis
dataflow analysis
data dependencies
reaching definitions
java programs
europe p
global analysis
flow edges
transfer function
loop level
local control
design process
basic block
static fields
thread class
software partitioning
analysis technique
reference analysis
analyzing java
current bytecode
sample designs
compatible class
implicit concurrency
w rosenstiel
oriented hardware
extended parameters
dalpasso alessandro
m winterholer
bytecodes per
marcello dalpasso
core loops
munich germany
thread level
data parallelism
hardware description
handler code
multiple specifications
bogliolo luca
object oriented
class instance
mixed hardware
cdfg representation
design language
alessandro bogliolo
object references
run method
synthesis steps
hardware specification
primitive types
dynamically linked
java classes
run time
united states
specification languages
data field
input specification
method invocations
coarse grained
software system
pre allocated
based designs
embedded systems
luca benini
virtual machine
loop iterations
ip based
hardware synthesis
programming language
method call
june 21
winterholer w
linked objects
buchenrieder rainer
allocated class
distributed ip
pre allocate
virtual simulation
klaus buchenrieder
new obj
either primitive
catch blocks
kuhn wolfgang
c schulz
rainer kress
fleischmann klaus
pop entry
tommy kuhn
ip core
iterative dataflow
first bytecode
onto operand
aggressive reference
bytecode reads
france marcello
bytecode writes
class procaclass
stack opstack
scenic design
compiling java
requires analysis
reference aliasing
schulz key
josef fleischmann
target representation
concurrent behaviors
bytecode operations
benini virtual
process behavioral
java specification
march 27
language specification
louisiana united
yokohama japan
pointer analysis
hardware software systems
co design process
conference on design
software co design
hardware software co
design automation p
control and dataflow
test in europe
automation and test
control flow edges
partitioning and co
loop level concurrency
bytecode level concurrency
coarse grained concurrency
hardware software system
local control flow
hardware software partitioning
fields and methods
dalpasso alessandro bogliolo
thread level concurrency
analyzing java programs
concurrency is exhibited
marcello dalpasso alessandro
object oriented hardware
design of embedded
specification and design
alessandro bogliolo luca
bogliolo luca benini
run time environment
fine grained concurrency
number of bytecodes
ip based designs
form of concurrency
mixed hardware software
language for hardware
designer to specify
march 27 30
cannot be resolved
es january 1999
january 1999 munich
june 21 25
makes it difficult
entry and return
kuhn t oppold
oriented hardware specification
process behavioral synthesis
fields or methods
france marcello dalpasso
specification our results
bytecodes per loop
josef fleischmann klaus
hardware software specification
c schulz key
tommy kuhn wolfgang
operand stack opstack
bytecode reads data
computing the reaching
special control flow
implementation of reactivity
luca benini virtual
allocated class instances
klaus buchenrieder rainer
kuhn wolfgang rosenstiel
key m winterholer
method with entry
references are strongly
co design specification
distributed ip based
problem with dynamically
fleischmann klaus buchenrieder
entry as return
multiple process behavioral
either primitive types
co synthesis steps
dynamically linked objects
buchenrieder rainer kress
scenic design environment
onto operand stack
global reference analysis
reactivity for modeling
schulz key m
return from method
x array data
m winterholer w
benini virtual simulation
synthesis for mixed
using bytecode numbering
points to values
paris france marcello
winterholer w rosenstiel
analyze the specification
louisiana united states
orleans louisiana united
java virtual machine
co design tool
single specification language
control flow edge
control dataflow graph
hardware software partitioner
simulation of distributed
false data dependences
specification the java
embedded hardware software
set of reaching
