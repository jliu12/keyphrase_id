subnetwork
subnetworks
unsatisfied
machines
greedy
addressable
js
depth
preorder
si
subtree
subnet
satisfied
pred
prefix
offending
unprioritized
predecessor
addressing
prioritized
ith
priority
leftmost
parent
completely
nonempty
string
node
priorities
claim
depths
subtrees
log
cdots
rightmost
ni
satisfies
interchange
subnets
suffix
lemmas
ancestor
saying
lookup
sj
seek
interchanges
binary
interchanging
smallest
rooted
logarithms
lemma
cams
nolimits
subnetting
unulitilized
policy
traversal
leave
gammat
leaves
contradiction
repair
sorted
addresses
convention
unutilized
gammajs
placement
root
occupied
internet
assignment
maximization
bth
preferentially
moved
datagrams
ambiguity
simultane
bits
terminology
placed
sort
roles
surviving
repeat
correctness
placing
ously
fl
deleted
contrary
decrease
satisfy
infeasibility
child
promoting
partially
decreasing
abstractin
strings
arguing
modify
wasteful
moving
leaf
sibling
bit
preliminary
promotion
routing
nodes
unsatisfactory
partition
go
fixes
descendant
recommendations
lexicographically
address
interchangeably
maximize
portion
compensated
hole
positioning
resume
sis
choices
satisfying
dlog
surely
corollary
returned
dictated
summarizes
stop
alternatively
playing
specifies
decoding
resort
reader
violations
exposition
subroutines
restore
play
fix
violates
pairs
varies
old
digits
necessarily
violation
undefined
breadth
played
interfere
implicitly
integer
broadcasting
encounter
largest
dropping
stays
ignores
contradicting
refers
admits
mixture
violating
tracing
maximized
belongs
background
integers
multiplicative
stress
networking
transmit
kth
consist
completely satisfied
completely unsatisfied
ith subnetwork
optimal solution
o m
addressable machines
m subnetworks
completely satisfies
length subnetwork
pred d
subnetworks k
subnetwork addressing
many machines
depth d
lemmas 1
completely satisfy
partially satisfied
priority policy
binary search
variable length
log m
leftmost node
node v
v j
smallest l
unprioritized case
subnetworks completely
prioritized case
satisfied machines
l parent
fixed length
partition scheme
use greedy
m time
m log
greedy algorithm
proof among
parent v
necessarily optimal
k j
cannot satisfy
preorder traversal
l bits
l s_i
machine within
forward binary
satisfied subnetworks
offending pairs
y machines
length partition
fixed depths
length subnet
fewer offending
ni machines
target integer
means go
otherwise interchanging
fl machines
preorder number
addressing cannot
algorithm preliminary
offending pair
solution completely
subnetwork addresses
addressing si
number satisfied
k b
m 2
c 0
new solution
time complexity
smallest number
solution returned
l gammat
js proof
one subnetwork
pairs defined
machine belongs
subnet experiment
smallest depth
satisfies lemmas
previous step
n k
v i 1
number of machines
number of addressable
length subnetwork addressing
c i b
prefix of another
m log m
o m log
o m 2
satisfies all subnetworks
l parent v
subtree of y
solution not necessarily
subnetworks completely satisfied
solution s 0
satisfy as many
number of satisfied
n k j
solutions that satisfy
lemmas 1 3
satisfies the properties
log n k
repeat the following
exists a solution
o m time
parts a prefix
js proof among
satisfies as many
machines of subnetworks
least one fewer
pred d pred
forward binary search
another s j
one fewer offending
b its value
b s computed
node of level
roles of subnetworks
offending pair 2
least fl machines
class a subnet
subnetwork addressing si
pairs is zero
greedy or alternatively
l bit address
pred a b
variable length subnetwork
node of depth
machines as possible
subnetwork to another
satisfy all m
zero otherwise interchanging
fixed length subnetwork
defined as pairs
v at level
c k b
variable length subnet
satisfied by greedy
subnetworks the l
fi in case
