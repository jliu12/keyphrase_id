bisimilarity
bpa
const
bisimulation
normed
bpp
cl
decidable
weak
fff
unnormed
nm
processes
rks
delta
bisimilar
fif
pushdown
decidability
termination
automata
lin
ff
congruence
iff
cycling
grammar
fi
flf
deadlocked
infinite
automaton
act
refinement
xkfi
induction
equivalences
formed
reachable
exp
constructible
transitions
weakly
nets
expands
equivalence
ffi
polynomial
flfif
pspace
sensitive
petri
transition
rule
sequential
mayr
kuera
expansion
composition
checking
gnf
antonn
emptiness
rewrite
grammars
closure
cf
hypothesis
expressions
fkg
sequencing
algebras
fl
nbpp
ffikfl
fffih
rkg
flfih
xkae
rkskg
canonical
move
productions
ef
xfi
flh
constructions
preorder
hardness
undefined
pad
constants
accepts
deadlock
suffices
possibilities
relation
rules
subsumes
greatest
decomposability
graphes
subprocesses
xf
deciding
base
pairs
unsuccessful
ks
exptime
counter
distinguish
strong
fsg
greek
symbolic
subclass
deleted
emitted
kx
preprint
ctl
belongs
behaviours
elementary
add
remember
algebra
terminated
successful
terminate
ffl
intuitively
realize
letters
membership
intuition
gamma
ffikae
xzy
rkt
ffkfi
srba
vkt
klop
sentable
ukv
semidecidability
caucal
tative
skr
skukv
xkff
skg
ibrn
gkh
janar
qff
xfif
ffifih
tational
canoniques
flkfi
successfully
transitive
concurrency
internal
sentence
surely
subsets
interprocedural
production
omega
subclasses
stuck
baeten
ekf
louder
normedness
ebriques
ffifl
sameness
ffiff
xky
equivanlence
regular
verification
adapted
reachability
np
beginning
commutative
bases
actions
moves
checked
clarify
humboldt
cl k
weak bisimilarity
const delta
const gamma
formed relation
normed bpp
finite state
termination sensitive
lin ff
o nm
state processes
sensitive bisimilarity
well formed
nm 2
o n
g 2
free processes
infinite state
weak bisimulation
strong bisimilarity
bpp processes
bisimulation base
basic parallel
bisimulation like
process rewrite
context free
state systems
weakly bisimilar
congruence w
bpa processes
rks f
w r
g g
ff f
fff g
like equivalences
normed bpa
parallel processes
fi g
exp k
ff g
g x
theorem 24
definition 27
process expressions
model checking
definition 5
induction hypothesis
bisimulation equivalence
f 2
polynomial time
unnormed constant
lin fi
size o
system delta
transition y
one counter
sequential composition
definition 21
f g
partition refinement
k expands
bpp state
gamma const
bisimulation problems
bpp process
cl b
theta const
mentioned language
act delta
state ones
h g
let ff
pushdown automata
let k
state system
rewrite systems
y h
relation k
ffl induction
r 2
hold ffl
refinement step
process algebra
canonical form
fi 2
ff 2
let fff
theorem 26
lemma 22
process algebras
successful termination
definition 9
new system
k due
ffl ffi
computational steps
state process
cf grammar
infinite subsets
y fif
well formed relation
g 2 cl
finite state processes
termination sensitive bisimilarity
o nm 2
add the rule
context free processes
bpa and bpp
x 2 const
bisimilarity is decidable
delta and gamma
basic parallel processes
congruence w r
f 2 cl
ff f 2
bpa and finite
bisimulation like equivalences
g 2 const
decidable between bpa
fi g 2
elements of const
normed bpp processes
infinite state systems
r 2 k
decidable in o
h g 2
decidable in polynomial
due to lemma
f a g
g 2 k
k we add
expands in k
r t sequential
rule of definition
expressions over const
contains an unnormed
size o nm
bpp and finite
let ff f
form of lin
process rewrite systems
size of g
condition of definition
x r 2
finite state system
conditions hold ffl
const delta omega
fl s 2
processes in o
process rewrite system
generates the mentioned
constructible in o
automaton a g
const gamma const
finite state ones
delta is normed
delta is denoted
delta we add
complexity of bisimulation
r 2 cl
processes and finite
x a ff
cl k due
theta const gamma
ffl induction step
element of lin
finite state process
o n 2
normed bpa processes
f 2 k
simple process algebras
o n 4
decidability of bisimulation
h 2 k
equivalence is decidable
o n 5
induction step let
hypothesis we know
finite state systems
ffi is defined
via a finite
ffi r 0
subsets of bpa
fff g 2
r t sequencing
add the rules
