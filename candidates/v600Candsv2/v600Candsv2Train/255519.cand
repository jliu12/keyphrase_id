action
ada
protected
atomic
exception
package
controller
recovery
conversation
aborted
actions
params
raised
abort
killed
releasing
entry
exceptions
vote
atc
param
tasks
commit
randell
private
conversations
raise
body
active
tagged
processes
requeue
fault
nested
wait
abortable
deserter
finalisation
romanovsky
indivisibility
backward
informed
campbell
wellings
robot
packages
triggering
remote
finalize
finished
entered
rpc
begin
concurrent
coordinator
subaction
task
object
indivisible
partitions
damage
burns
encapsulated
tolerance
sigada
abortion
confinement
event
leave
record
synchronisation
persistent
false
facility
acceptance
release
programmed
module
axes
asynchronous
concurrently
forward
pragma
handling
declared
xxi
finalization
timeout
barrier
enter
objects
calls
cancelled
count
controlled
arvalo
kienzle
lomet
library
handler
communicate
knight
coordinate
flush
axis
recoverable
outer
patio
peris
strigini
brinch
partition
subtype
nesting
signal
identifiers
subprograms
whilst
completion
decision
recov
jalote
requeued
subprogram
participate
structuring
passive
oriented
concurrency
pure
internal
expires
atomic action
atomic actions
error recovery
vote vote_t
params param
protected object
action controller
ada 95
e others
nested action
procedure t1
implement atomic
commit decision
processes active
entry wait_abort
backward error
package body
protected objects
param called
entry done
c done
exception handling
triggering event
protected body
begin code
wait vote
procedure signal_abort
abort begin
done commit
use common_types
protected type
remote call
entry wait
forward error
raise atomic_action_failure
ada exceptions
processes involved
tagged types
three tasks
signal completion
done vote
completion exception
internal action
private entry
fault tolerance
persistent data
procedure procedure
acceptance test
decision signal
releasing true
library units
read d
killed releasing
controller protected
entered e
entry entered
controlled types
done aborted
procedure t2
procedure t3
begin select
software fault
active partitions
private type
action failure
local action
action including
e exception_id
controller done
abortable part
others exception
nested actions
killed true
else releasing
aborted decision
randell 1986
releasing false
releasing informed
damage confinement
distributed action
concurrent processes
count 0
recovery cache
tagged limited
oriented programming
ada 83
tagged type
separate procedure
object oriented
entry call
call interface
acm sigada
sigada ada
ada letters
backward error recovery
exception when e
forward error recovery
params param called
called by task
entry wait_abort e
entry wait vote
e out exception_id
done commit decision
wait vote vote_t
abort begin code
implement atomic action
procedure t1 params
result out vote_t
vote vote_t result
code to implement
signal completion exception
procedure signal_abort e
entry done vote
campbell and randell
c done commit
done vote vote_t
burns and wellings
exception is raised
entry entered e
procedure t3 params
select then abort
use common_types package
atomic action including
decision signal completion
vote vote_t procedure
e out error_id
commit decision signal
atomic action failure
leave the action
actions with forward
procedure t2 params
controller is entry
else releasing false
releasing true else
done aborted decision
killed releasing informed
controller protected object
vote vote_t killed
actions in ada
remote call interface
e others exception
releasing is begin
c done aborted
true else releasing
software fault tolerance
object oriented programming
acm sigada ada
ada letters v
sigada ada letters
sequence of statements
aborted then raise
procedure procedure procedure
killed false informed
ada exceptions use
global action controller
concurrently raised exceptions
implement atomic actions
private entry entered
use ada exceptions
active and active
xxi n 3
false final_result commit
inside the action
raise the exception
task and subaction
false informed 0
releasing false final_result
requirements for atomic
e exception_id private
exceptions use ada
exception atomic action
gregory and knight
