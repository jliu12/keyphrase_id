mandatory
composite
optional
dist
tasks
discarded
imprecise
schedule
task
inprod
tse
scheduling
bimodal
fraction
unexecuted
deadlines
sl
doc
anytime
scaling
deadline
pm
bimodally
dot
predecessor
edf
feng
production
timing
preemptable
feasibly
feasible
scheduled
scheduler
budgeted
mora
units
extensions
quality
schedules
assigned
monotone
fractions
distribute
execute
ready
radar
completion
fig
error
distributing
liu
assignment
component
successor
acceptable
unused
boddy
extension
nondecreasing
distributes
compensate
processor
video
factors
reward
zilberstein
amounts
tries
preemptive
vol
lengthened
overloads
accumulated
transient
produced
precise
resultant
unschedulable
iterative
urbana
solely
client
straight
nonincreasing
portions
heuristics
infeasible
timeliness
fails
heuristic
font
decisions
uniform
frame
terminated
shortened
roman
five
completes
shih
pseudocode
dean
distributions
segments
marked
variances
musliner
jimeno
cifically
ero
saksena
morenilla
concord
pascual
jernimo
manas
infea
chamizo
janeliu
nutt
higinio
overload
portion
jobs
tracks
minimize
precisely
hereafter
suite
chain
processing
clairvoyant
preemptively
sibly
resarch
subramani
delis
kanitkar
aydin
transse
timewise
mosse
meja
distribution
predecessors
superscript
tensions
prece
circa
gerber
uiuc
nonz
report
precedence
finds
rationale
profiles
triangles
targets
completed
stays
uns
timal
hakan
reallocate
italicized
insufficient
nonzero
workload
meet
logically
succeed
alvarez
budgets
deliberation
root
constraints
sult
brandt
ieeecs
kurose
vinay
towsley
allotted
nonexistent
output
composite task
component tasks
component task
discarded work
dist m
composite tasks
algorithm dist
error scaling
processing time
mandatory part
optional part
work f
input error
dist o
output error
processing times
optional processing
time assigned
dot sl
production tse
inprod s95622
sl 19
optional error
mandatory processing
tse 2
scaling factors
part o
extended mandatory
doc regularpaper97
extension functions
every composite
mandatory extension
j production
imprecise computation
last component
dist algorithms
part m
processor time
optional extensions
mandatory error
time f
mandatory extensions
timing constraints
real time
error e
step 3
liu algorithms
earlier component
m edf
precise schedule
computation model
end deadlines
level scheduler
feasible schedule
f n
feasible assignment
result quality
bimodally distributed
tasks precisely
m iterative
scheduling real
time tasks
time required
scaling factor
ready time
optional extension
end timing
successor task
ready times
edf algorithm
result produced
imprecise computations
whose optional
predecessor task
vol 23
algorithms dist
maximum extended
anytime algorithm
bimodal distribution
unused time
zero output
task whose
assignment f
step 4
tasks whose
n component
scheduling imprecise
task consisting
anytime algorithms
feasibly scheduled
parameters m
accumulated error
engineering vol
level algorithm
low level
optional parts
five algorithms
video frame
step 2
fraction of discarded
algorithm dist m
discarded work f
error scaling factors
last component task
dot sl 19
tse 2 inprod
mandatory processing time
optional error scaling
inprod s95622 s95622_1
sl 19 968
production tse 2
j production tse
optional part o
mandatory and optional
doc regularpaper97 dot
every composite task
mandatory part m
algorithm dist o
work f n
algorithms for scheduling
mandatory error scaling
optional processing time
error scaling factor
amount of time
end to end
units of time
input error e
error and end
imprecise computation model
tasks with input
amount of processor
optional processing times
feng and liu
f i 1
task t j
real time tasks
scheduling real time
end timing constraints
algorithm s composite
dist m iterative
amount of discarded
m edf algorithm
times and deadlines
amounts of time
find a feasible
n component tasks
engineering vol 23
among its component
maximum extended mandatory
february 1997 j
total time f
extended mandatory part
task t n
component tasks precisely
extended mandatory processing
every component task
high level scheduler
earlier component tasks
composite task consisting
amount of unused
algorithms for distributing
software engineering vol
