lpid
redistribution
lpids
maxhitratio
cyclic
holders
hits
holder
mapping
processor
block
hpf
cp
processors
gcd
logical
redistributed
hitratio
ching
redistributions
lemmata
dimension
array
hsien
remapped
map
traditional
fortran
hsu
programmer
mcp
exchange
physical
owns
permutations
compiler
permutation
neighboring
memories
maps
mapped
italics
redistributing
mappings
place
yeh
achieves
ck
multicomputers
owned
relationships
supercomputing
minyi
dimensions
floats
sixteen
lemma
million
dimensional
bold
hit
permuting
row
arrays
trad
hypertasking
darel
chung
forty
permuted
pitfalls
grid
ecp
icp
sized
illustrates
mod
contention
sp
send
petitet
imparts
fig
pattern
contiguous
communication
vienna
kali
realignment
patterns
dino
receive
places
reshaping
chyi
establishes
guo
target
distribution
sizes
exchanged
ids
ibm
communicates
destination
numbered
machines
semantics
byte
configurations
executions
jz
manipulates
movement
wen
bai
indices
demonstrates
cartesian
dow
dongarra
opt
ratio
argonne
spmd
matrix
subprogram
sheng
respective
neighbors
additionally
onto
scatter
superimposed
theta
optimized
wormhole
ren
paradigm
enhance
personalized
chu
antonie
ecpdata
privy
randriamaro
desprez
vfe
maxhitratios
resizeable
redistributable
frddric
incorporated
flexibility
hypercubes
communicating
stride
established
initially
interprocessor
collective
arrangement
ic
perspective
jack
yang
message
mpi
specifies
kr
stichnoth
abstractrun
daming
wakatani
six
minimizing
execution
declarations
maintained
redis
peizong
espoused
gather
statements
cyclic c
data hits
data redistribution
place holders
data elements
place holder
mapping technique
processor mapping
logical processor
optimal mapping
traditional mapping
lpid 0
gcd z
mapping function
holder q
data block
block block
holders q
row dimension
z p
maps lpid
c data
distribution pattern
data exchange
data array
hits per
k lpids
per lpid
distribution patterns
o o
dimensional data
block size
physical nodes
ching hsien
m dimensional
physical processor
hsien hsu
processor memories
achieves maxhitratio
b cp
data hit
data relationships
distributed memory
array redistribution
initially distributed
neighboring data
cyclic block
h r
data parallel
among processor
block cyclic
since lpid
redistribution execution
hits figure
respective block
bold italics
block sizes
d b
elements data
logical processors
dimensional redistribution
global data
data mapping
one dimensional
data matrix
p processors
cyclic mapping
q h
lpid 2
permutations yield
lpid 1
following redistribution
z places
lpids map
optimal technique
z mod
processor sets
integer z
processor configurations
supercomputing v
data distribution
physical node
exactly c
destination distribution
yeh ching
ching chung
z b
memory machines
c 0
cyclic 2
redistribution ieee
efficient data
hit ratio
fortran d
b 0
exchanged among
compiler respectively
redistribution redistribution
b sized
lpid j
boundary processors
permuting lpids
yield maxhitratio
optimized mapping
floats time
redistributed cyclic
byte floats
lemmata 1
subsequent redistribution
processor ids
mapping lpids
k ways
owns b
traditional optimal
logical physical
execution time
block 3
block to cyclic
place holder q
logical processor mapping
logical to physical
place holders q
number of data
redistribution from block
c data hits
o o o
q h r
optimal mapping technique
cyclic c 0
ching hsien hsu
block and cyclic
physical processor mapping
hits per lpid
lpids that map
data hits per
among processor memories
neighboring data relationships
holders are mapped
redistribution between block
lpid i 1
m dimensional data
gcd z p
data hits figure
permutation of lpids
data hit ratio
places from lpid
function in equation
n 0 theta
efficient data redistribution
amount of data
distributed memory machines
processor mapping function
numbers and z
respective block sizes
traditional mapping technique
z be natural
holder q h
global data array
journal of supercomputing
theta n 1
number of processors
yeh ching chung
one dimensional data
z b c
d b 0
redistribution of data
redistribution ieee transactions
processor mapping technique
z and p
elements the logical
exactly c data
data redistribution execution
mapping of lpids
communicates with lpid
elements data hits
function for determining
data exchanged among
map to place
could be permuted
mapping function h
remain on processor
b sized data
exchange is viewed
c cyclic c
cyclic c cyclic
traditional optimal matrix
z mod p
exchanged among processor
optimal matrix size
lpids to place
matrix size 4
determining a permutation
sized data block
size 4 byte
receive processor sets
redistribution execution time
target processor configurations
block under block
ibm sp x
floats time sec
cyclic block size
lpids to data
data elements data
dimension are mapped
byte floats time
logical processor ids
send and receive
