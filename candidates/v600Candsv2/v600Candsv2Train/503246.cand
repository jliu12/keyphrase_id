routines
respondents
developers
managers
companies
spiq
spi
organizational
experience
interview
participation
learning
formalization
involvement
occupational
tore
students
formal
medium
social
company
transfer
dyb
socialization
tqm
organizations
tacit
culture
quality
engineers
respondent
ntnu
coercive
people
cultures
cultural
discipline
iso
schein
creativity
employees
regarding
manager
project
assessment
employee
developer
software
enabling
knowledge
answered
attitudes
questions
gqm
sintef
essi
carlsen
smes
duguid
student
certified
studies
meetings
percent
utility
organization
encyclopedia
pies
improvisation
seb
ethnographic
ibid
answers
telling
ranked
year
rigidities
norwegian
participate
dialogue
activities
job
subfield
skepticism
bureaucratic
lessons
colleagues
realities
boring
skeptical
manuals
regarded
story
bases
alternatives
interviews
newsgroup
factory
researcher
experts
smart
marius
fake
willingness
documentation
creative
emphasis
revisions
freq
norway
canonical
threat
foremost
disseminate
pilot
maturity
attitude
divergent
improvement
wanted
projects
learn
groups
daily
tailed
lack
chaos
practices
empirical
impression
day
productivity
implications
practitioners
radically
reports
stating
views
dissemination
experiences
sight
asked
learned
rational
engineering
barriers
fisher
statistic
whereof
externalizing
sacred
dyba
anthropologists
socialized
reassurance
whishes
internalize
technicians
zuboff
stifling
makt
lifebelts
exaggerating
disobeyed
rationalistic
fieldwork
esteem
conradi
marciniak
lifebelt
demoralizing
kunda
externalized
enterprises
routinized
briefed
lave
borys
operationalized
reidar
fornss
prose
impersonal
sepgs
forn
formalistic
mortems
sprung
formal routines
software developers
written routines
efficient medium
process improvement
organizational learning
spiq project
software organizations
experience bases
software process
interview guide
learning organization
frequency percent
tore dyb
knowledge transfer
spiq companies
quality system
transfer knowledge
developers managers
enabling type
story telling
action research
experience base
discussion groups
five companies
quality systems
respondents answered
two students
research questions
software experience
among developers
highly significant
highest ranked
explicit knowledge
new knowledge
software engineering
dyb tore
using fisher
experience 4
developer participation
respective companies
existing routines
rational design
job training
routines one
engineering background
collaborative social
ibid p
canonical practice
iso 9001
employee participation
ranked alternative
freq percent
routines alone
percent frequency
occupational cultures
experience reports
coercive type
major occupational
ranked alternatives
respondents said
losing sight
routines software
regard written
traditional quality
routines 2
tailed thus
one manager
organizational memory
managers frequency
socialization discussion
smart machine
effective dissemination
lessons learned
small sample
software development
important issues
routines 1
capability maturity
changed behavior
social processes
group meetings
quality managers
pilot projects
tacit assumptions
knowledge and experience
transfer of knowledge
medium for transfer
developers and managers
degree of involvement
software process improvement
utility of formal
type of formalization
routines to transfer
software experience bases
introduction of routines
routines being used
learning and spi
regarding the utility
formalization where procedures
learning the new
use of routines
iso 9001 certified
discipline and creativity
introducing the routines
alternatives to written
managers frequency percent
way of working
working and learning
process improvement ieee
developers managers frequency
updating of routines
frequency percent frequency
routines software developers
software developers managers
two tailed thus
barriers against transfer
base or newsgroup
encyclopedia of software
brown and duguid
highly significant p
success in software
socialization discussion groups
dyb tore dyb
percent frequency percent
formal routines must
fisher s exact
experience between software
quality and improvement
highest ranked alternative
carlsen and marius
regard written routines
tore dyb tore
rational design process
formal routines alone
collaborative social processes
usefulness of formal
capability maturity model
significant p 0
first and foremost
study was carried
small and medium
