combining
prefix
requests
interconnect
ipc
request
hot
ultracomputer
combinable
fetch
interconnection
distribute
iic
processors
processor
sophistication
latency
efj
network
yew
pic
message
bus
trip
distributing
tail
tzeng
multiprocessors
decombining
chopp
messages
alus
head
spot
memory
mimd
cache
priori
location
saved
forwarded
wait
shared
taxonomy
saturation
blelloch
appending
forward
ppc
participating
distributes
coma
nyu
participant
appended
simd
synchronization
destined
decombined
coherent
increment
unexplored
read
comparators
linked
responsibility
access
combined
fields
serial
gottlieb
lawrie
lock
multiprocessor
routes
waiting
accesses
bandwidth
latencies
restrictions
modules
carry
tree
hsu
heretofore
locations
nodes
goodman
critique
style
net
destination
contention
outstanding
carried
doubling
participants
combine
sent
priority
routing
old
travel
addressing
topology
participate
topologies
buffer
loca
sohi
serialization
accessing
pointers
numa
channels
primitives
unconstrained
sees
cm
intentions
progress
synchronized
coherence
ibm
option
channel
multiprocessing
placed
figs
determines
alu
paradigm
dash
bandwidths
race
schemes
route
classificationscheme
iannucci
theproposed
memorylocation
partoperation
unexploredarea
aboverequirements
myampersandphi
whichsystem
ofthese
membersof
thecombining
woest
lipovski
routingof
rathi
hiedelberger
efficeint
aclassification
efv
reflected
primitive
buffers
serviced
traverse
feel
scans
link
locking
omega
networks
buffered
response
list
percent
chain
nect
hep
freudenthal
norton
ina
almasi
ddm
intolerably
return
benefits
bidirectional
establishes
broadcast
directory
node
alleviate
hierarchy
hillis
von
architecture
visit
neumann
combining set
request combining
prefix operation
prefix computation
combining tree
processor elements
fetch f
combined access
interconnection network
hot requests
combining requests
combining operation
software combining
location x
computation network
processor combining
parallel prefix
memory location
priori knowledge
new combining
combining sets
interconnect processor
interconnect nodes
combining network
design space
shared memory
hot spot
wait buffer
forward trip
read combining
shared location
arbitrary interconnection
return trip
scale shared
value field
ultracomputer style
old combining
combining ipc
distribute results
spot addressing
distributing hot
priority chain
interconnect combining
linked list
two messages
non combining
forward message
memory modules
network nodes
two requests
wait buffers
yet synchronized
combining took
x efj
x 4c
unconstrained yet
link message
hot rates
second combining
component processor
also participating
l locations
hot request
fetch increment
combining section
varying hot
processor b
memory multiprocessors
four processors
network determines
ibm rp3
result distribution
synchronized access
large scale
final value
recursive doubling
nyu ultracomputer
omega network
hierarchical cache
efficient synchronization
four regions
f x
final result
restrictions placed
may combine
processors also
general f
distribute the results
prefix computation network
fetch f x
determines the combining
interconnect processor combining
new combining set
memory location x
parallel prefix computation
determine the combining
distributing the results
f a operation
distributes the results
large scale shared
scale shared memory
software combining tree
distributing hot spot
elements to distribute
processor combining ipc
forwarded to memory
requests are combined
establish the combining
determining the combining
hot spot addressing
old combining set
methods of request
shared memory multiprocessors
combining took place
establishes the combining
varying hot rates
hsu and yew
non combining requests
network to distribute
f x efj
latency of hot
yet synchronized access
second combining set
interconnection network determines
implementations of request
component processor elements
unconstrained yet synchronized
latency to complete
f i operation
head and tail
method of combining
assume that processors
algorithms for distributing
state is saved
list of processors
routing of messages
set is determined
set of requests
access to shared
