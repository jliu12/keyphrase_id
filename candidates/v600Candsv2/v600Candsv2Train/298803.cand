locality
earth
remote
localized
pointer
accesses
int
spclpool
manna
specialized
compiler
intraprocedural
benchmark
programmer
declarations
village
lessthan
specializations
inference
mccat
pointers
home
perimeter
owner
specialization
threaded
advanced
quicksort
callsite
eu
attribute
speedup
expr
func
runtime
newnode
localg
scoped
calls
globals
references
thread
grain
procs
foo
calling
malloc
benchmarks
equalnode
blkmov
tsp
memory
node
health
declared
multithreaded
prog
affinity
carlisle
foreach
allocated
callee
steensgaard
site
underlined
count
propagation
versions
invocation
invocations
bench
saved
su
caller
sites
patients
pointstoclass
corbera
localityset
allocpoint
callstmt
asenjo
countequal
colombian
assignmentstmt
conservatively
fun
interprocedural
compete
threads
quad
recursive
linked
coded
villages
grammer
balancer
allocation
msec
coarse
body
speedups
tree
merging
burden
impr
processor
rec
propagate
ordinary
statement
tour
head
qsort
olden
insensitive
contexts
zapata
forall
shorter
mapped
argu
emilio
pseudo
spends
infers
indirect
rafael
colour
declare
irregular
declaration
token
programs
vs
raster
parallelizing
indirection
inexpensive
translated
checks
initialized
merge
newly
threading
safe
locally
encountering
polling
array
return
processors
parallelization
fields
marks
statements
else
architecture
invoke
fetches
create
goto
specialfuncexists
countequalspec
addtospclpool
countrec
spcls
ointst
maquelin
intraprocedurally
affin
oclass
valueof
isbasicfunc
irreg
addto
memorymachine
ownerof
tialization
locality analysis
earth c
locality information
localized version
locality attribute
advanced version
local pointers
local pointer
remote accesses
locality inference
basic functions
earth manna
equal node
local memory
remote memory
node local
data accesses
pointer declarations
simple version
memory accesses
level threaded
specialized function
remote data
vs simple
locally scoped
threaded c
type inference
village node
pseudo remote
intraprocedural locality
earth mccat
call site
specialized versions
advanced versions
return f
dynamic data
int c1
earth runtime
callee function
accesses saved
local within
intraprocedural propagation
c earth
scoped variables
y localg
localized advanced
function calls
calling contexts
c compiler
else int
inference b
ordinary c
memory references
remote calls
coarse grain
memory allocation
local p
hand coded
linked fields
count rec
earth multithreaded
locality propagation
inference figure
called earth
manna architecture
additional locality
version achieves
local q
references via
simple localized
locality context
advanced earth
mccat c
locality attributes
mccat compiler
new locality
call sites
c language
locality using
calling context
pointer variables
remote references
different calling
runtime load
incoming array
way tree
remote remote
p int
mapping computation
low level
remote access
function invocations
quad tree
interprocedural propagation
actually create
count equal
dynamically allocated
data structures
int v
variable references
automatically produce
local references
inference based
read write
recursive call
level tree
specialized version
v int
parallel c
using basic
compiler techniques
runtime system
memory reference
q value
explicitly declared
points to class
local pointer declarations
remote data accesses
number of remote
points to analysis
points to classes
function is created
locally scoped variables
remote accesses saved
low level threaded
earth c earth
locality inference b
b after locality
earth c compiler
earth c language
parameters and locally
int c1 c2
c earth c
class of x
reduction in remote
dynamic data structures
must be local
earth c version
language the earth
int v int
locality inference figure
earth runtime system
inference based algorithm
declared as local
using basic functions
called earth c
v int c1
earth manna architecture
localized and advanced
earth mccat c
mccat c compiler
advanced earth c
node local p
earth multithreaded architecture
type inference based
level threaded c
remote memory accesses
comes very close
compiler must assume
local memory accesses
different calling contexts
parameters and globals
points to information
high level parallel
exploit the locality
dynamic memory allocation
coarse grain parallelism
set of benchmarks
int countequal tree
points to local
read write set
head node x
earth mccat compiler
lessthan p q
propagate intraprocedural locality
encoded raster image
home node newnode
given locality context
might be remote
language called earth
void f node
advanced versions respectively
simple intermediate representation
localized advanced localized
case the checks
simple localized advanced
use basic functions
local memory reference
sub optimal tour
tree encoded raster
accesses with respect
locality generated using
node allocpoint double
localized advanced earth
c vs simple
perimeter this benchmark
int equalnode node
locality information comes
foo int x
shorter source programs
memory references must
