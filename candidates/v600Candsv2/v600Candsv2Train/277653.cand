cmp
compre
antic
restructuring
motion
avail
speculative
poepre
speculation
hoisting
pre
rhs
frequency
region
eg
flow
profiles
redundancies
analyzer
duplication
reuse
demand
profitable
loop
growth
profile
elimination
transp
paths
benefit
hot
redundancy
opportunities
prevented
exit
availability
anticipability
cfg
sol
duplicating
entry
duplicated
node
interprocedural
notices
morel
code
edge
sigplan
peeling
live
optimizable
poe
exploded
reducible
redundant
lattice
exits
comp
temporary
expressions
subregion
offending
profiling
guided
driven
removal
ammons
steffen
reducibility
larus
imprecision
cm
expression
profitability
renviose
pgpre
edges
en
insertion
invar
renvoise
rem
nodes
optimization
navigated
obstacles
ex
knoop
substitute
visited
dependences
invariant
regions
optimizations
impairment
blocked
rajiv
peel
kill
loops
sink
distributive
substitutions
path
li
irreducible
sentinel
jingling
avg
inserted
av
cyclic
subgraph
removed
thwarted
mayg
unsubstituted
postdominator
fook
chung
branch
interval
duplicates
eliminated
incoming
breaking
conservatively
gupta
probability
duplicate
dfs
disregarding
xue
restricting
dhananjay
delayability
tin
elcor
anticipable
qiong
unsafe
suppression
disabled
scope
destroying
transformations
dataflow
ngai
localizes
hoist
glenn
taco
compiler
propagation
predicate
dupli
dhamdhere
economical
preventing
contribution
enabling
mooly
cocke
budget
substituted
stack
insertions
infrequent
solver
redefinition
sagiv
remove
correlation
substitution
transformation
recombination
kills
hoisted
bernhard
scholz
selective
outweigh
irreducibility
fpppp
ranges
anticipated
postorder
exhaustive
subregions
cse
yew
intervals
shape
post
code motion
cmp region
complete pre
code growth
data flow
frequency analysis
value reuse
motion pre
demand driven
control flow
path profiles
flow restructuring
partial redundancy
n e
expression e
speculative code
flow analysis
entry edges
pre algorithm
redundancy elimination
cmp regions
frequency analyzer
loop entry
x e
node n
code duplication
cmp e
exit edge
hot paths
c d
edge profiles
partial redundancies
reduce loop
profile guided
optimization benefit
dynamic amount
e avail
cm pre
speculative pre
must must
e n
loop invariant
comp n
must avail
flow function
driven frequency
region entry
partial speculation
transp n
notices v
sigplan notices
back edge
acm sigplan
o c
entry edge
n must
exit edges
original computation
partial restructuring
flow functions
must antic
analysis 28
antic may
must paths
live range
partially redundant
flow frequency
incoming paths
live ranges
complete removal
optimal code
existing demand
shortest live
cmp node
necessary code
exploded graph
may antic
rhs x
avail must
cmp restructuring
flow solutions
strictly partial
e transp
motion preventing
e antic
computation e
flow graph
r o
path profile
cyclic dependences
interval order
pre algorithms
entry node
loop breaking
approximate data
global optimization
temporary variables
constant propagation
interprocedural dataflow
equation system
available along
reuse opportunities
driven analysis
either must
contribution weight
hot must
e across
rem r
frequency ex
motion transformation
speculative insertion
region exits
distinct opportunities
dynamic benefit
en en
flow fact
antic 6
benefit rem
eliminated computations
n avail
eg nodes
interprocedural branch
node line
post dfs
code motion pre
partial redundancy elimination
speculative code motion
data flow analysis
avail in n
control flow restructuring
x e n
o c d
avail out n
acm sigplan notices
sigplan notices v
transp n e
demand driven frequency
comp n e
optimal code motion
must must paths
antic in n
within the region
data flow frequency
r o c
computation of e
control flow graph
approximate data flow
frequency analysis 28
integration of code
loop entry node
necessary code motion
improving data flow
antic out n
driven frequency analyzer
motion and control
f e n
may antic may
analysis with path
data flow solutions
d c d
c d c
figure 1 c
flow frequency analysis
demand driven analysis
interprocedural dataflow analysis
compute the benefit
near complete pre
morel and renviose
c d o
n e transp
code motion transformation
antic 6 must
rhs x 0
code motion preventing
shortest live range
e being available
restructuring and speculation
speculation and restructuring
region entry edge
strictly partial redundancies
data flow fact
motion is prevented
must if comp
antic may antic
within the cmp
avail no avail
e transp n
cost of frequency
antic in m
property oriented expansion
redundancy elimination based
anticipability and availability
code motion alone
run time gain
hot must must
loop breaking rule
zhang rajiv gupta
optimization by suppression
o r o
e is available
optimization of c
profile guided pre
redundancy elimination pre
morel and renvoise
suppression of partial
maximal fixed point
copies of n
b a b
notion of approximate
amount of computations
algorithm for complete
set of nodes
c d r
n 5 p
reduce the cost
data flow problems
x 0 0
n must antic
e x otherwise
cannot be delayed
n e antic
