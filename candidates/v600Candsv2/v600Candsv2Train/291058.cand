vss
ldpred
prediction
udpred
predictor
instructions
instruction
speculation
patch
stride
predictors
profiling
predicted
predictability
load
treegion
loads
saturating
register
hardware
dependence
ilp
speculative
hybrid
speculated
scheduling
compress
compiler
ijpeg
miss
cycles
accuracy
speedup
predictions
branch
schedule
scheduler
dependencies
vortex
profiled
candidates
threshold
speculatively
benchmarks
gcc
lego
counters
predictable
fetch
breaking
history
perl
dispatch
patchup
treegions
static
vliw
tapering
sigarch
operand
update
aggressively
penalty
hewlett
packard
disambiguation
playdoh
jill
old
block
region
lw
floating
epic
execute
ic
repairing
scheduled
indexes
pipeline
chain
formation
superblock
writing
news
dependent
code
conte
featuring
height
exposed
flow
index
conflicts
latency
stages
execution
predicated
destination
latencies
locality
speculate
seven
exposing
aggressive
impressive
decrement
statically
incorrect
twelve
accurac
havanki
synergies
select
accuracies
highly
benchmark
processors
laboratories
updated
exceeding
confidence
pred
counter
rebel
vor
leve
jmp
bne
elcor
banerjia
reservation
dynamically
scope
thresholds
li
dataflow
peg
takeuchi
tinker
conflict
insert
microarchitecture
mikio
meindl
codrescu
youfeng
sumedh
deems
hauswirth
bodine
tarun
retiring
nakra
exploiting
inserted
utilizes
huiyang
ean
sathaye
reproducibility
leveraged
hpl
storageless
value speculation
value prediction
value predictor
prediction accuracy
load instructions
state block
value profiling
prediction hardware
ldpred instruction
predicted instruction
two level
udpred instruction
speculation scheduling
value speculative
predicted value
dependent instructions
value predictors
dynamic loads
instruction i3
dynamic load
old state
load operations
miss prediction
scheduling vss
udpred instructions
hybrid predictor
register writing
perform value
schedule length
stride two
dependent instruction
hybrid predictors
level predictor
current state
actual result
flow dependence
miss predicted
total profiled
data dependence
hybrid value
dependence height
writing instructions
static load
saturating counters
highly predictable
predictor design
flow dependencies
stride predictor
value history
last value
history table
dependence graph
pattern history
level value
state update
execute state
vss scheme
highest prediction
ldpred udpred
speculative dependent
lego compiler
instructions i4
cycles floating
dispatch execute
value ldpred
static loads
miss predictions
accuracy distribution
predicted values
speculative execution
using hybrid
saturating counter
five cycles
memory conflict
conflict buffer
seven cycles
based two
level predictors
treegion scheduling
memory dependencies
li 132
gcc 129
pipeline stages
scheduling scope
ijpeg 134
dependence chain
table entry
destination register
prediction using
fetch dispatch
high prediction
data value
actual value
value predictability
value locality
code contains
data values
memory disambiguation
code sequence
instructions using
patch up code
ldpred and udpred
value speculation scheduling
current state block
dynamic load instructions
old state block
speculation scheduling vss
branch to patch
two level predictor
candidates for value
level and hybrid
stride two level
data dependence graph
value speculative execution
stride and two
value predictor design
register writing instructions
static load instructions
pattern history table
value prediction using
cycles floating point
based two level
execute state update
two level value
accuracy of 90
gcc 129 compress
dispatch execute state
perform value profiling
execution of patch
instructions have prediction
two cycles floating
load instructions using
prediction accuracy distribution
highest prediction accuracy
value speculative dependent
hybrid value predictors
instructions i4 i5
fetch dispatch execute
li 132 ijpeg
memory conflict buffer
dependence from instruction
sequence of figure
two level predictors
high prediction accuracy
dynamic memory disambiguation
value prediction hardware
prediction is correct
data value prediction
based on value
prediction is incorrect
predictability of data
number of load
used to select
number of dynamic
sigarch computer architecture
architecture news v
computer architecture news
acm sigarch computer
state update value
stride value predictor
add r5 r4
two new instructions
values are miss
block is updated
twelve and decrement
dynamic load operations
eliminating flow dependencies
case of miss
different prediction accuracy
context based two
distribution for static
stride context based
performance by aggressively
total profiled load
accuracy of load
two level prediction
udpred instruction pair
increment by three
various value predictors
go and 132
larger scheduling scope
decrement by one
instructions under stride
profiling can program
