retiming
gs
cdr
slice
pipelining
acyclic
initiation
gasperoni
schedule
schwiegelshohn
phi
opt
scheduling
slices
dependence
edges
cyclic
longest
darte
dependences
clock
calland
mgs
unlimited
retimed
resources
resource
jv
weight
mcdr
decomposed
null
cut
oe
lyon
eisenbeis
ford
bellman
circuit
mg
cutting
period
jourdan
vertex
vlsi
heuristic
saxe
jjej
interval
loop
synchronous
processors
sk
schedules
month
edge
leiserson
makespan
alap
xx
cycle
delays
vertices
initiated
minimized
unroll
pipelined
ffi
robert
jej
incidence
vol
ens
nonnegative
achievable
cle
satisfied
cnrs
rational
gammaffi
unimodular
allocation
software
register
inequality
asap
graph
frameworks
cy
deleted
edwin
constraints
alain
registers
sha
overlap
delta
yves
neil
unfolding
congruent
vi
deleting
iv
fig
su
wang
steady
normale
thetajej
egion
alpes
snider
minfcx
weighted
formulation
vii
pre
valid
instances
unrolling
heuristics
minimizes
link
holes
vliw
modulus
architecture
timothy
list
palash
transformative
feas
glaeser
erieure
ura
ilp
iii
subproblems
path
performances
dongming
oftware
retimings
saem
maxfd
laboratoire
huard
chatha
delay
amounts
searched
transpose
questions
ecole
jffi
jihong
karam
ranga
itively
sophisticated
integer
rectangle
polynomial
instruction
desai
egy
mook
grain
cycles
objectives
successive
pendences
remap
deep
searching
cope
integral
discussing
cisely
strat
minimizing
boxes
issued
intu
multirate
concatenation
wd
tices
guaranteed
software pipelining
acyclic graph
phi opt
initiation interval
algorithm cdr
retiming q
null weight
list scheduling
g q
decomposed software
algorithm gs
cyclic schedule
longest path
dependence constraints
graph g
schedule oe
phi g
resource constraints
q v
clock period
dependence graph
unlimited resources
circuit retiming
schwiegelshohn algorithm
reference slice
time resources
weight edges
pipelining problem
q u
oe u
y calland
y robert
cyclic scheduling
d q
retiming applied
g 0
delta u
retiming algorithms
robert circuit
valid cyclic
operation instance
cutting edges
slice sk
corresponding acyclic
scheduling oe
system 8
ford algorithm
bellman ford
clock cycle
achievable clock
different slices
month 1996
eisenbeis jourdan
wang eisenbeis
scheduling technique
d e
y month
vol xx
jv j
scheduling allocation
retimed graph
corresponding list
synchronous circuit
performance bound
minimum achievable
k time
log jv
bound given
rate optimal
integer called
efficiency bound
algorithm mgs
saxe 10
length phi
key example
operation u
type 1
type 2
cyclic schedules
retiming problem
cycle k
optimal cyclic
non pipelined
section iii
o jv
p y
cut edges
initial scheduling
acyclic scheduling
opt proof
jjej log
r u
jv jjej
v phi
systems vol
ffi u
u v
nonnegative integer
system 6
edge e
iii c
decomposed software pipelining
gasperoni and schwiegelshohn
phi g q
acyclic graph g
null weight edges
software pipelining problem
number of null
delta u v
applied to decomposed
p y calland
darte and y
circuit retiming applied
path in g
calland a darte
k time resources
corresponding list scheduling
path of null
corresponding acyclic graph
robert circuit retiming
list scheduling allocation
cyclic schedule oe
y robert circuit
bellman ford algorithm
edges in g
jourdan and su
minimum achievable clock
achievable clock period
wang eisenbeis jourdan
systems vol xx
y month 1996
xx no y
graph of figure
dependence graph g
list scheduling technique
distributed systems vol
schedule for g
u v phi
nonnegative integer called
d and delta
clock cycle k
q e 0
find a retiming
valid cyclic schedule
d q e
oe a u
terms of retiming
given for algorithm
v phi opt
shows a possible
constraints and dependence
dependences between different
number of edges
jv jjej log
leiserson and saxe
jjej log jv
weight of e
o jv jjej
log jv j
k f k
section iii c
figure 7 c
taken into account
correctness of algorithm
found in polynomial
following algorithm algorithm
initiation interval 1
sha combining extended
k gamma q
optimal graph transformation
schedule for unlimited
list scheduling oe
valid initiation interval
whose longest path
retiming for g
q u gamma
