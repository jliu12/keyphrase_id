races
race
debugging
executions
synchronization
apparent
detection
sync
shared
nondeterministic
diff
feasible
dependences
programs
bufempty
manifestations
accesses
locating
anomaly
bugs
concurrently
exclusion
events
orderings
spurious
incapable
critical
mutual
fly
characterize
atomically
withdrawals
tellers
intended
atomicity
execute
exhibit
locate
ronsse
exhibited
execution
nondeterminacy
deterministic
exhaustively
nondeterminism
iff
sigplan
np
leiserson
debugged
michiel
failures
replay
notices
exhaustive
bosschere
detecting
flowback
mingdong
located
koen
inherently
uncover
buffer
event
debug
fork
anomalies
utpal
praun
occurring
cilk
deok
prefix
portions
attiya
programmer
notion
rastislav
determinacy
deposits
unaffected
atomic
prefixes
pertaining
hagit
threaded
detected
inconsistent
uncovers
callahan
multithreaded
semaphores
intuitive
memory
characterizing
notions
occurred
characterizations
maine
access
potentially
harder
bank
conflicting
behave
parallelism
charles
semantics
deposit
harmful
sections
frontier
implications
roundoff
jong
argue
accuracy
banerjee
sigmetrics
balance
bug
relied
friedman
membership
externally
monitoring
misleading
join
implicitly
christoph
perkovic
exhi
bited
bubak
uppuluri
keunwoo
titanium
bliss
wodzimierz
keremoglu
wotawa
christiaens
kergommeaux
cherri
bartosz
kranzlmller
mhlenfeld
chassin
buhr
emrath
welches
loginov
arndt
wismller
funika
elmas
nishiyama
cataudella
datarace
hiroyasu
unambiguous
dependence
explicit
exhibiting
symposium
guaranteed
roy
intent
efficiently
united
feng
mexico
determinism
erroneous
ada
detector
choi
trace
fundamentally
grams
kdb
kamil
wel
tayfun
velen
erkan
recplay
bali
arnab
limassol
vojnar
sridharan
jcilk
sence
tzoref
angelina
tesei
letko
data races
general races
data race
race detection
apparent races
general race
race conditions
critical sections
f sync
program executions
shared memory
f diff
parallel programs
explicit synchronization
feasible races
shared data
apparent general
exists iff
race condition
nondeterministic programs
program execution
access anomaly
feasible race
execute concurrently
programs intended
data dependences
detection methods
mutual exclusion
feasible program
debugging general
races requires
implementing mutual
apparent data
memory parallel
execution p
dynamic race
b exists
anomaly detection
race exists
np hard
programs containing
different types
actual data
accurate notion
potentially execute
synchronization incapable
apparent race
feasible general
inherently harder
executions p
condition detection
actual program
less accurate
spurious races
alternative orderings
intuitive notion
parallel program
debugging parallel
inconsistent data
formal model
atomic execution
deterministic programs
p e
race version
races capture
detecting access
intended critical
exhaustive race
computing alternative
races occur
using synchronization
containing general
data conflicting
proposed race
order different
two events
program could
acm sigplan
requires exhaustive
data conflict
michiel ronsse
races however
program bugs
debugging data
race free
access shared
debugging july
e leiserson
ronsse koen
access anomalies
sigplan notices
notices v
post wait
programs exhibit
detecting data
use critical
given input
programs using
conflict exists
execution instance
architectures p
execution order
containing data
fork join
race a b
shared data dependences
races and data
race detection methods
e t d
b over f
memory parallel programs
shared memory parallel
data race detection
apparent general race
types of race
program execution p
b exists iff
types of races
implementing mutual exclusion
debugging general races
programs that use
dynamic race detection
incapable of implementing
general races requires
apparent data races
iff a data
shared data dependence
less accurate notion
executions p e
program executions p
actual data race
program s explicit
accuracy and complexity
actual program execution
access anomaly detection
set of program
shared memory accesses
process in p
debugging parallel programs
prefix of p
symposium on parallel
using a formal
accesses to shared
proposed race detection
data conflict exists
containing general races
use critical sections
set denoted f
feasible program execution
potential of occurring
debugging data races
manifestations of bugs
type of race
containing data races
exhaustive race detection
potentially execute concurrently
apparent general races
races requires exhaustive
general race detection
represents an execution
previously proposed race
work is novel
regarding the accuracy
detecting access anomalies
race condition detection
data race version
acm sigplan notices
sigplan notices v
ronsse koen de
distributed systems testing
michiel ronsse koen
charles e leiserson
actual data races
detecting data races
type of synchronization
types of synchronization
parallel and distributed
complexity of dynamic
classes of parallel
show that two
exists between two
testing and debugging
