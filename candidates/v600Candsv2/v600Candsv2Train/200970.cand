cscw
reflective
customisation
metaobject
toolkit
clos
behaviours
behaviour
silica
linkage
reflection
practices
collaborative
interactive
mop
cooperative
metalevel
lisp
dourish
centralised
reorientation
users
toolkits
locking
developer
object
prospero
generic
social
workspace
kiczales
mechanisms
interface
lock
editop
pclos
customisations
mmconf
edit
protocol
mackay
areas
organisation
groupware
activity
artefacts
customised
metaclass
collaboration
programmer
slot
flexibility
flexible
locks
slots
buttons
openness
grudin
tailorability
developers
implementor
styles
infrastructure
tailoring
decisions
ribis
shobject
shredit
infrastructures
implementational
marker
replicated
management
specialised
shared
interfaces
bobrow
groupkit
adaptation
oriented
coordination
revise
adaptability
activations
hci
evolving
traditional
objects
lens
interaction
dewan
haake
user
markers
specialise
sparse
outlined
propagate
chalmers
conflict
protocols
window
evolution
european
concerns
appreciation
barriers
maclean
lockid
luff
dopt
timbuktu
twinkling
coadaptive
eulisp
suchman
spiral
person
implications
drawing
paul
looser
involvement
meta
abstractions
conferencing
language
sharing
situated
reconsider
greenberg
customisable
notionally
embody
tailor
wider
working
interpreter
electronic
designers
mixin
crowley
sepia
crowcroft
harmonious
dylan
tailorable
adaptations
activities
adapt
abstraction
tackles
underground
hyperdocuments
ongoing
awareness
open
investigations
variability
notecards
exploding
development
mechanism
supporting
metamorphosis
stockholm
focussing
heath
organisational
perspectives
air
default
reactivity
paged
organisations
layer
studies
conception
workspaces
migratory
bentley
inappropriate
individuals
integrity
historical
whiteboard
ellis
scheduler
responsibility
patterns
lights
culture
interactive systems
metaobject protocol
computer supported
supported cooperative
cooperative work
computational reflection
reflective techniques
sparse class
object system
reflective approach
implementation decisions
data distribution
object oriented
generic behaviours
working styles
reflective model
work v
work p
interactive system
based work
standard class
paul dourish
cscw systems
default behaviours
find object
self representation
clos mop
scheduler activations
conflict management
shared workspace
metaobject protocols
work practices
computer based
multi user
programming language
new mechanisms
particular situations
generic functions
cscw applications
generic function
metalevel interface
cscw toolkit
implementational reflection
locking strategies
information lens
metalevel framework
reflective toolkit
cscw toolkits
interface linkage
linkage strategies
state marker
different linkage
user editop
matthew chalmers
european conference
systems design
new view
cscw design
evolving systems
lock object
work practice
user involvement
window system
application programmer
et al
collaborative system
address issues
instance representation
edit object
oriented programming
framework within
interface components
data integrity
al 1990
software product
base level
make changes
system use
data objects
application developer
data management
application developers
air traffic
v 9
computer supported cooperative
supported cooperative work
toolkit for cscw
view of interactive
computer based work
cooperative work v
cooperative work p
systems in use
within the toolkit
work v 9
process of design
areas of responsibility
systems and work
cycle of design
patterns of sharing
principles of computational
conference on european
patterns of use
form of design
object oriented programming
model of software
et al 1990
conference on computer
focus of attention
v 9 n
programming language design
allocation and slot
work on programming
within which users
building shared multimedia
pressing the issues
computation which concerns
useful for computer
desktop conferencing systems
time desktop conferencing
around user needs
clos in context
development and enhancement
shared multimedia applications
tackles a number
view of system
interactive systems design
management and interface
messages are surprisingly
reflection in silica
use of reflective
window system infrastructure
artefacts of design
revise implementation decisions
instances of sparse
heath and luff
set of concerns
software product development
development with implications
studies of work
implications for cscw
evolution of systems
infrastructure for building
distribution conflict management
lisp programming language
sparse table driven
users can change
view of systems
programmer can revise
maclean et al
mmconf an infrastructure
shobject user editop
examples from ongoing
machine independent virtual
crowley et al
exploding the interface
interface an evolving
function edit object
requirements for flexibility
user tailorable systems
