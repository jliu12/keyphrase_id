crow
pram
prams
dcfl
crew
pushdown
stack
ppp
ss
dpda
stacks
pppp
ffli
braunm
height
owner
pp
recognition
id
dauxpda
uhl
ppppp
accumulator
unblocked
logdcfl
ids
log
surface
rytter
hu
instruction
comment
cook
ppppppp
processor
tape
deterministic
delta
von
popping
ruzzo
pppppp
wyllie
ownership
halt
processors
dymond
suffix
fortune
reif
procedures
treewalk
crcw
cfl
auxiliary
dcfls
snir
klein
polynomial
sudborough
blocked
si
returns
suffixes
exclusive
computable
languages
dauxpdas
contents
correctness
return
fork
writes
reducible
fich
mehlhorn
summary
recognized
verbeek
machines
read
owned
pushing
string
recognizable
numbering
rams
symbol
store
reference
references
simulation
definitional
sibling
nonuniform
pdas
nisan
concurrent
violation
activated
configurations
automaton
strings
memory
ppms
dpdas
ppppppppppp
ppppppppp
automata
configuration
symbols
var
indirect
calls
location
reject
pointer
coherence
sequential
activation
cfls
auxpda
harrison
parent
rossmanith
ffflg
harju
topmost
behaved
italic
ragde
counter
succinct
depth
access
recursive
logarithmic
segments
generalizations
child
restrictions
recursion
establishing
unambiguous
empties
halts
active
wrote
pda
simultaneous
unbounded
ram
ic
pop
cell
lange
lam
earliest
doubling
vishkin
ppm
numbered
ill
stockmeyer
past
ac
accepts
polynomially
characterizations
cole
machinery
array
owners
siblings
pointers
inductive
obeying
realizable
inductively
simulate
inclusive
initially
cache
hv
accepted
write
unify
lemma
variants
concatenation
physically
arrange
crow pram
crow prams
ss k
dcfl recognition
low k
o log
global memory
log n
crew pram
low delta
pp ppp
delta k
braunm uhl
summary k
von braunm
hu ffli
ppp pp
deterministic context
pram algorithm
time o
k steps
k reference
uhl et
k 1
log space
delta lemma
context free
pp pp
pppp pp
deterministic auxiliary
surface configuration
k references
random access
stack height
r k
free languages
ppp ppp
owner write
owner function
surface configurations
processor p
access machines
memory location
pram model
parallel random
crew prams
instruction counter
auxiliary pushdown
comment returns
hu si
valid k
pram time
ppppp pp
stack l
parallel pointer
pram algorithms
space reducible
local memory
log 2
wyllie 15
returns surface
stack j
deterministic cfl
pushdown symbol
ffl id
languages log
ppp pppp
n space
exclusive write
steps past
polynomial time
l k
work tape
owned global
class logdcfl
ffl ids
set recognized
u surface
restrictions r1
cook mehlhorn
ppp ppppp
reif 20
owner concept
generalizations g1
pram implementation
pushdown height
pp pppp
height stack
read owner
small space
concurrent read
correctness property
empty stack
parallel time
n time
least 2
empty stacks
low point
activation tree
processor numbering
height o
k returns
initially active
free language
o 1
logarithmic space
computation starting
store l
running time
recognition problem
k d
level k
pushdown store
al 38
k u
ill behaved
prams and dcfl
o log n
time o log
von braunm uhl
low delta lemma
delta k 1
deterministic context free
uhl et al
global memory location
braunm uhl et
low k 1
context free languages
least 2 k
log 2 n
random access machines
crew pram algorithm
parallel random access
o log 2
returns the surface
klein and reif
j is unblocked
log space reducible
k steps past
pp ppp ppp
ss k 1
deterministic auxiliary pushdown
valid k reference
languages log space
fortune and wyllie
surface and reference
algorithm for dcfl
k 1 hu
definition of delta
log n space
log n time
pp ppp pp
pp pp ppp
pppp pp pp
logdcfl of languages
id i 2
restrictions r1 r3
low k returns
set of stacks
suffix of stack
read owner write
crow pram model
owned global memory
crow pram algorithm
p at time
auxiliary pushdown automaton
reducible to deterministic
ppp pp ppp
pram in time
r k d
state t p
crew pram model
number of processors
time log n
et al 38
recursive calls per
crew pram algorithms
stack j 2
delta k operating
free language recognition
crow pram implementation
summary 0 u
crow pram time
braunm uhl cook
pppp pp ppp
contents of global
recognition of deterministic
logarithmic space deterministic
ppp pp pp
time t begin
mehlhorn and verbeek
processor activation tree
ppp ppp pppp
ss k d
processor numbering scheme
definition of ss
pram time log
ill behaved programs
summary k u
generalizations g1 g6
concurrent read owner
surface configurations u
uhl cook mehlhorn
space deterministic auxiliary
lam and ruzzo
j 2 ss
memory and deterministic
context free language
sequence of k
class of languages
