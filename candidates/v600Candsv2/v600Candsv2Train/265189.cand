hypersphere
hypercube
manifold
exhaustive
nearest
neighbor
closest
trimming
candidate
eigenspace
dimensions
hs
searching
recognition
yunck
jqc
hc
sandwiched
hyperplane
search
dimensionality
secs
bin
novel
zc
ffl
circumscribing
coordinate
hyperplanes
searches
appearance
hyper
epsilon
arrays
backward
binomially
spaces
cube
tree
gonzalo
radius
chvez
hashing
probability
navarro
populated
trees
uniformly
trim
perpendicular
knee
extent
coordinates
friedman
distance
metric
density
manifolds
bst
buckets
sparsely
sampled
voronoi
benchmarks
forward
indexing
normally
benchmarked
maps
statistically
sorted
grows
rectangular
projected
axis
unstructured
locate
sorting
query
aesa
ndffl
marroqun
edgar
dimensional
projection
ordered
variance
map
visual
inside
bsts
bucket
dz
comparator
lie
engine
trivariate
columbia
searched
partitioning
list
indicators
planes
rpo
exponentially
unity
object
rams
kzk
closer
exhaustively
slam
image
matching
unsorted
indicator
pose
array
cpu
nayar
multidimensional
database
minkowski
bold
noise
centered
binary
equidistant
faster
randomized
constructing
gammaffl
multivariate
lying
benchmark
lookup
spaced
hash
lookups
inexpensive
graphics
hundred
fpga
floating
pattern
intelligence
substituted
images
analytically
raw
densely
deletion
smallest
dd
dimension
impractical
bins
averaging
databases
norms
hierarchically
versatile
structured
packed
subtracted
norm
letters
certainty
diagrams
imbalance
gammaffll
mcnames
kudo
gisli
point set
candidate list
d tree
closest point
proposed algorithm
nearest neighbor
exhaustive search
novel point
k d
points within
neighbor search
high dimensional
point q
ffl hs
ffl hc
secs dimensions
dimensions proposed
forward map
high dimensions
distance ffl
smallest hypercube
backward map
hyper rectangular
time secs
uniformly distributed
normally distributed
ordered set
d trees
per search
test set
bin b
f zc
tree exhaustive
zc jqc
projection search
one point
dimensional space
algorithm k
point within
data structure
binary searches
appearance matching
r tree
object recognition
points inside
space partitioning
distributed point
find points
metric spaces
extent 1
query hypersphere
circumscribing hypercube
hyperplane pair
forward maps
hypercube method
n 50000
high d
backward maps
contains 50000
list construction
contains 30
r trees
search within
query point
pattern recognition
determine ffl
extent l
contains 100
l 2
binary search
probability p
gonzalo navarro
search algorithms
binomially distributed
k nearest
dimensional spaces
small ffl
within ffl
sparsely populated
set contains
rectangular regions
search engine
found within
hundred objects
size 2ffl
static space
obtain discrete
ffl necessary
determining ffl
hardware search
coordinate arrays
obtain 31
statistically unstructured
side 2ffl
edgar chvez
jqc z
d 25
n 150000
indicator array
using equation
th coordinate
log 2
d dimensional
p c
variance 1
d 15
neighbor problem
radius ffl
z c
uniform distribution
k d tree
number of points
nearest neighbor search
least one point
dimensions proposed algorithm
novel point q
secs dimensions proposed
within the hypercube
time secs dimensions
point set contains
proposed algorithm k
distributed with extent
algorithm k d
k d trees
closest point within
values of ffl
within the cube
b the point
f zc jqc
exhaustive search within
probability of success0
contains 100 000
contains 30 000
set is uniformly
smallest hypercube method
within a hypercube
d tree exhaustive
sampled to obtain
candidate list construction
contains 50000 75000
distributed with variance
extent 1 0
set is normally
trimming the candidate
hyper rectangular regions
corresponding to respectively
constructing and trimming
points in 5
performing an exhaustive
time per search
fixed to different
d and contains
variance 1 0
l 2 distance
close to unity
high dimensional spaces
independent of d
log 2 n
execution time per
n is fixed
o log 2
algorithm is faster
extent l 1
distributed point sets
searching in metric
hashing and indexing
query point q
static space partitioning
zc jqc z
d and grows
novel query point
trimming the list
within the hypersphere
construction and trimming
within distance ffl
d tree algorithm
hardware search engine
manifold is sampled
within an l
tree exhaustive search
ffl were corresponding
find points within
obtain 31 752
k nearest neighbor
value of ffl
l l l
average execution time
set of benchmarks
nearest neighbor problem
uniformly distributed point
points the proposed
two binary searches
calculated by averaging
