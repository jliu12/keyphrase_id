checkpoint
checkpointing
dsm
dsmpi
daemon
checkpoints
daemons
message
mpi
cn
messages
owner
shared
recovery
checkpointed
coordinated
logging
stable
disk
ownership
consistency
overhead
rollback
protocol
blocking
storage
orphan
transparent
failures
commit
protocols
processes
assure
recoverable
minutes
portability
directory
tentative
central
permanent
file
passing
coordinator
object
chkp
invocation
missing
sor
disks
mtbf
read
coherence
replicated
libckpt
directories
tolerate
lazy
orca
memory
fault
invalidate
posix
committed
private
sent
nfs
cache
workstations
transit
gauss
interval
replayed
server
probable
replication
owners
objects
hours
failure
tolerance
processor
reply
rpc
compliant
remote
ivy
release
tagged
master
logged
carries
consistent
crl
munin
recoverability
synchronization
dash
roll
routines
lrc
swapping
barriers
occurrence
processors
treadmarks
behalf
layer
restart
migratory
recover
sending
longitudinal
startup
copy
forwarding
semaphores
domino
portable
host
wants
ethernet
optimizations
uncontrolled
broadcast
programmer
hang
transient
transaction
paragon
platforms
request
solves
writing
sender
thread
proceeding
herein
saved
crash
sake
implements
schemes
continuity
unix
receives
kbytes
nqueens
likckpt
epcc
sigkill
ickp
ncia
watermark
multicopy
tracs
stable storage
distributed shared
shared memory
dsm system
coordinated checkpointing
checkpointing algorithm
global checkpoint
dsm systems
performance overhead
current owner
dsm protocols
central disk
message passing
checkpoint interval
previous checkpoint
checkpointing scheme
potential missing
non blocking
recoverable distributed
missing message
daemon processes
shared object
blocking coordinated
central file
invocation message
missing messages
cn value
tentative checkpoint
application processes
shared data
per checkpoint
file server
independent checkpointing
transparent checkpointing
checkpoint protocol
local checkpoint
local checkpoints
shared objects
consistent checkpointing
local disks
application process
checkpointing mechanism
distributed stable
memory systems
private data
overhead per
factor k
message logging
fault tolerance
message carries
recovery procedure
potential orphan
last committed
posix compliant
mpi layer
maximum overhead
dsm directories
messages daemon
read transaction
local cn
probable owner
committed checkpoint
job swapping
ownership scheme
replicated data
read write
local disk
processor failures
write operations
blocking algorithms
distributed scheme
static distributed
logical checkpoint
rpc like
orphan messages
made independent
checkpointing schemes
checkpoint file
local one
permanent failure
sor application
object location
system mpi
local cache
startup phase
checkpoint files
new owner
three different
checkpointing protocol
orphan message
consistent shared
thread safe
already taken
different models
rollback propagation
memory coherence
lazy release
dash multiprocessor
different protocols
distributed shared memory
models of consistency
recoverable distributed shared
non blocking coordinated
central file server
overhead per checkpoint
distributed stable storage
levels of stable
top of mpi
previous checkpoint interval
stable storage scheme
assure the continuity
storage is implemented
protocols of consistency
potential orphan message
transparent checkpointing algorithm
interval between checkpoints
potential missing message
communication system mpi
replayed in case
potential missing messages
consistent shared memory
read write operations
implemented on top
take a local
interval of 2
passing and shared
performance of consistent
three different models
memory a survey
able to recover
shared virtual memory
distributed memory systems
order to exploit
implementation and performance
dsm system exchanges
consistency and models
processes that tool
sake of portability
static distributed scheme
occurrence of orphan
read invocation message
standard unix machines
carries a cn
two level stable
level stable storage
distributed ownership scheme
protocols the scheme
overhead of 6
object location directory
parallel orca programs
results were taken
system and makes
need to log
nothing was changed
requires a posix
case of recovery
shared data object
daemon d k
blocking coordinated checkpointing
checkpoint before consuming
scheme only requires
replication and three
inside the mpi
heterogeneous computing platforms
