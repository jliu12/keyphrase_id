octant
streamline
streamlines
octants
visualization
cells
core
octree
disk
tetrahedral
unstructured
cell
megabytes
coordiates
workstation
mbytes
block
queue
fetching
preprocessing
graphics
memory
interactive
rendering
meshes
kurc
tahsin
tests
cludio
millions
saltz
million
paging
pool
waiting
silva
virtual
particle
resident
ready
overhead
streamtubes
chialin
joel
calculations
scientists
interpolation
initialization
airplane
workstations
grids
tracing
seed
ueng
shyh
file
blocks
eight
sussman
scientist
farias
neighboring
streaming
mid
vm
kuang
finished
partitioning
node
created
sparc
fetch
coordinate
sun
policy
id
integration
catalyurek
nickolas
streamribbons
atalyrek
ribarsky
coefficients
stored
mesh
released
scheduling
timing
files
chunk
jen
claudio
kenneth
child
calculating
constructing
ricardo
seconds
ibm
william
october
indices
kuester
falko
faust
connectivities
bruckschen
moran
chunks
operating
management
record
program
resolution
storing
ellsworth
joy
umit
hamann
allocated
queues
chang
visualizing
precomputed
wall
buffers
redundancy
grid
cancels
irregularity
face
positions
read
initiate
octrees
schroeder
unsteady
alan
searching
concurrently
connectivity
volume
fly
tunnel
bernd
san
velocity
store
interactivity
celebrating
ralph
stores
costs
transformation
chiang
searched
cfd
isosurface
overload
preemption
flow
raw
dedicated
reveal
spatial
davis
jiang
sharing
minutes
california
moderate
field
intersect
bounding
united
resolutions
wind
diego
enter
conducted
carolina
bytes
eurographics
fields
center
attain
swapping
multiresolution
fluid
octant size
maximum octant
memory space
size level
streamline construction
node node
block size
core program
main memory
streamline visualization
streamline object
local disk
tetrahedral cells
data node
octant table
test results
virtual memory
data set
solution data
core method
space pool
million cells
streamline objects
cell record
z coordiates
data sets
average cost
waiting queue
data size
ready queue
non local
large unstructured
coordinate transformation
memory management
coordiates node
interactive streamline
constructing streamlines
level maximum
core algorithm
finished queue
free space
management policy
data partitioning
times figure
disk files
memory blocks
preprocessing step
tahsin kurc
data visualization
y z
mbytes 4
streamline calculations
one octant
octant fetching
transformation functions
constructing 100
core approach
program maximum
child octants
joel saltz
disk space
interactive visualization
unstructured grids
data preprocessing
cell indices
neighboring cell
core rendering
space size
initialization cost
core streamline
total cost
computer graphics
memory block
tetrahedral meshes
operating system
large data
unstructured grid
interpolation functions
data redundancy
single step
ieee computer
preprocessing stage
memory based
july 2001
size 40
eight child
one streamline
octant containing
mid range
longer involved
mbytes 8
data fetching
four million
size initiate
vm based
octree structure
sparc 20
streamlines concurrently
streamline scheduling
initiate construct
step computation
construct total
visualization calculations
chialin chang
grid data
three parameters
vector field
many smaller
remaining memory
visualization software
alan sussman
size 10
maximum octant size
block size level
node node node
non local disk
solution data node
y z coordiates
memory management policy
size level maximum
z coordiates node
free space pool
level maximum octant
time the block
conference on visualization
cost of constructing
millions of tetrahedral
cludio t silva
tests are conducted
memory space size
constructing 100 streamlines
mbytes 4 times
virtual memory based
data from disk
neighboring cell indices
timing of program
set of tests
program maximum octant
applications v 21
visualization of large
size is set
graphics and applications
ieee computer graphics
unstructured grid data
size 10 000
number of streamlines
size initiate construct
eight child octants
achieve interactive visualization
octant size 40
single step computation
data size initiate
number of octants
streamlines are constructed
fly during streamline
megabytes of main
mbytes 8 times
cost and overhead
main memory space
four neighboring cell
program performs better
size 40 000
sun sparc 20
interactive streamline visualization
initiate construct total
coordinate transformation functions
streamlines by using
octant size 10
coordinate transformation function
visualization and graphics
unstructured tetrahedral meshes
core streamline visualization
remaining memory space
number of time
number of cells
shyh kuang ueng
v 21 n
