interprocedural
pfc
riceps
linpack
dependence
yew
subscript
kennedy
regular
parallelization
array
descriptors
triolet
subscripts
supercomputing
parascope
linpackd
compiler
fortran
dependences
rice
notices
summary
lattice
ref
stride
sigplan
dogleg
propagation
precision
ranges
parafrase
parallelism
symbolic
parallelized
lowenthal
kathryn
callahan
calls
dataflow
dads
sites
effects
li
benchmarks
ken
hall
arrays
expressions
loops
subarrays
sandhya
blas
style
diff
references
optimizing
enddo
atom
loop
compilers
rugina
dad
inline
cdrom
mckinley
linearization
mary
rs
codes
meet
translation
mpi
toplas
ip
subroutines
compilation
referenced
regions
rinard
dwarkadas
manchester
translating
cache
merge
supercomputer
junjie
england
strides
amarasinghe
standardization
editor
caller
scalar
programs
saman
inlining
radu
monica
intersection
scientific
descriptor
mimd
zhiyuan
hoeflinger
paek
flow
merged
suite
sections
precise
convex
merging
mod
bronis
clobber
marathe
jaydeep
chauhan
eggers
blockability
dhruva
supinski
jeremiassen
delinearization
efie
weatherly
telescoping
lowered
abs
perfect
transformations
classical
gu
united
tseng
aug
kd
cooper
july
ayon
rencuzogullari
vectorizing
basumallik
murphy
tushar
reshaped
mckee
reshapes
nakazawa
deficiency
disciplines
intersecting
euler
locations
restructuring
san
else
multiprocessors
programming
hazard
willy
brent
yunheung
eigenmann
chakrabarti
umit
gyungho
yoo
analyzers
zwaenepoel
franklin
sorrento
lo
banerjee
keeping
site
interactive
lam
mueller
hazards
club
rudolf
privatization
inefficiencies
sally
bounds
translated
utility
induction
jose
procedures
translate
liao
regular sections
regular section
section analysis
interprocedural analysis
dependence analysis
side effects
value numbers
supercomputing p
call sites
parallel programming
actual parameter
notices v
sigplan notices
formal parameter
acm sigplan
interprocedural side
access sets
interprocedural propagation
constant propagation
induction variables
meet operation
ken kennedy
dataflow analysis
interprocedural summary
global value
ieee conference
acm ieee
bounded regular
local analysis
atom images
loop induction
summary analysis
summary regular
data access
symbolic analysis
programming style
parascope editor
summary information
array side
call graph
program parallelization
subscript expressions
shared memory
bounds f
meet operations
rice compiler
restricted regular
parallel calls
analysis alone
end algorithm
compiler evaluation
program suite
true access
dependence graphs
interprocedural constant
call site
procedure calls
dependence testing
automatic parallelization
called procedure
corresponding actual
modular programming
return end
distributed shared
algebra subroutines
w hall
access descriptors
mimd distributed
inline expansion
complete applications
side effect
n 7
actual parameters
supercomputing cdrom
cdrom p
distributed memory
systems toplas
toplas v
evaluation program
bounds information
summary sections
referenced section
section subscripts
lo bounds
sections implemented
programming support
compilation dependences
subscript values
stride information
radu rugina
subscript lattice
alone ip
efficient interprocedural
enddo return
rugina martin
summary section
classical interprocedural
scientific disciplines
programming environment
fortran d
memory machines
cache performance
international conference
saman p
interactive parallel
p amarasinghe
parameter array
k lowenthal
direct parallelization
interprocedural array
convex regions
manchester england
invariant expressions
linpack library
sandhya dwarkadas
united states
programming v
recursive programs
call statements
analysis must
junjie gu
mary w
gu zhiyuan
perfect benchmarks
programming languages
regular section analysis
li and yew
conference on supercomputing
sigplan notices v
acm sigplan notices
acm ieee conference
ref a else
interprocedural constant propagation
modular programming style
global value numbers
true access sets
bounded regular sections
rice compiler evaluation
loop induction variables
number of subscripts
languages and systems
n 7 p
distributed shared memory
kathryn s mckinley
data access descriptors
interprocedural side effects
linear algebra subroutines
mimd distributed memory
distributed memory machines
supercomputing cdrom p
number of references
transactions on programming
systems toplas v
journal of parallel
enddo return end
performance of regular
library of linear
restricted regular sections
consistent then ref
parameters and global
evaluation program suite
analysis alone ip
summary regular sections
analysis in linear
compiler evaluation program
radu rugina martin
parallel programming v
data flow analysis
interprocedural side effect
parallelization of call
corresponding actual parameter
saman p amarasinghe
interactive parallel programming
july 11 15
david k lowenthal
memory machines proceedings
array side effects
effects of procedure
using the parascope
analysis for program
gu zhiyuan li
mary w hall
junjie gu zhiyuan
november 07 13
notices v 32
monica s lam
detection of parallelism
side effect analysis
cdrom p 1
software distributed shared
interprocedural dependence analysis
analysis and optimization
notices v 36
san jose ca
parallel and distributed
chauhan ken kennedy
parallelization of numerical
franklin lowenthal dyn
regular sections implemented
complete application codes
jaydeep marathe frank
dependence graphs produced
fast execution time
take time proportional
keeping useful internal
interprocedural analysis alone
range then let
non dedicated clusters
wei liao monica
figure 2 lattice
interprocedural data flow
else let l
jeremiassen susan j
array data flow
regular section subscripts
good programming practice
expense of translating
pointers array indices
r chakrabarti prithviraj
supercomputer performance evaluation
ambitious optimizing compiler
riceps a set
