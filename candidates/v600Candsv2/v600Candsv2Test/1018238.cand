oading
surrogate
jvm
engine
device
mobile
inference
javanote
fuzzy
offloading
availmem
pervasive
remote
java
triggering
biomer
linguistic
stretch
platform
splitclass
bandwidth
wireless
lru
trigger
prototype
newmemsize
migrated
partition
monitoring
dence
partitioning
oaded
oad
availbw
plans
mb
devices
delay
kb
interaction
heap
plan
rpc
vk
transparent
candidate
accesses
chaivm
coign
jvms
resource
composite
con
memory
adaptations
moderate
runtime
guration
msk
elevator
interactions
mbps
migration
trace
invocations
baseline
adaptive
hp
rpcs
footprint
utilization
membership
speci
rtt
modi
ef
vi
monitor
triggers
pm
ps
dia
driven
redhat
gured
gurability
isnative
delity
basement
jini
accessfreq
objects
ne
constrained
metrics
metric
ed
execution
relieving
mincut
ck
decides
linux
master
relieve
discovery
native
grained
overhead
traces
simulator
splitting
pulled
traf
wi
fidelity
laptop
slave
cant
decision
bytes
merged
editor
bi
eld
classes
multimedia
adaptability
ned
adaptation
service
selects
incurring
spectra
ubiquitous
transferred
degradation
edge
nition
person
aware
module
ce
cl
threads
object
overcoming
adaptively
rst
card
middleware
elds
article
developers
developer
crash
lifetime
delivering
merging
consumes
vng
behrooz
oads
uctuation
msmax
creations
ride
fuzzi
shumao
puppeteer
lingvar
bmax
surrogates
placeholders
thinkpad
bandwidthrequirement
smert
kayak
monet
stairway
kalasapur
sesco
1diabiomer
insigni
upnp
shirazi
oading inference
inference engine
mobile device
oading platform
candidate partition
application execution
partition plan
execution graph
pervasive computing
oading system
fuzzy control
partition plans
wireless bandwidth
oading triggering
average interaction
making approaches
different decision
decision making
program objects
interaction stretch
con dence
lru algorithm
oading delay
fuzzy trigger
mobile devices
application partitioning
bandwidth requirement
memory size
remote data
constrained memory
linguistic variable
data accesses
trace driven
control model
memory constraint
object reference
oading rules
partitioning cost
triggering inference
remote function
fuzzy inference
splitting large
prototype experiments
threshold based
javanote application
memory utilization
java class
available memory
cost metric
wireless network
generic fuzzy
linguistic values
total memory
plan generation
membership function
execution time
memory sizes
total execution
splitclass fuzzy
oading action
interaction delay
engine decides
baseline memory
two jvms
remote interaction
time stretch
composite metric
comparison ratio
approaches figure
smaller memory
oading decisions
monitoring overhead
bi k
device runs
surrogate discovery
con guration
total bandwidth
fuzzy sets
computing environment
remote execution
remote objects
ef cient
graph edge
graph node
partition selection
memory footprint
java heap
large classes
large class
simple threshold
speci c
approach different
edge cost
new memory
modi ed
ne grained
numerical value
service composition
control based
resource constrained
fi k
four different
available bandwidth
current prototype
ieee 802
fuzzy logic
name space
component based
function calls
un optimized
slave device
oading prototype
constrained devices
expensive application
application speci
oading inference engine
adaptive of oading
candidate partition plan
decision making approaches
different decision making
candidate partition plans
average interaction stretch
fuzzy control model
total of oading
application execution graph
pervasive computing environment
partition plan generation
generic fuzzy inference
runtime of oading
four different decision
fuzzy inference engine
total execution time
splitting large classes
making approaches figure
simple threshold based
inference engine decides
triggers of oading
oading triggering inference
approach different decision
new of oading
remote data accesses
objects of two
decrease the bandwidth
new memory utilization
total bandwidth requirement
reduce the average
selects the best
illustrated by figure
framework for quality
remote function calls
complete of oading
largest edge cost
linguistic variable availmem
simulations and prototype
classes can reduce
availmem is within
application execution monitoring
trigger our approach
lru algorithm compared
whether of oading
amount of free
trigger approach different
remote function call
stochastic con dence
inference engine uses
response time stretch
partitioning cost metric
expensive application rewriting
requirements and interaction
fuzzy control based
resource constrained devices
system for mobile
best partition plan
neighbors of v1
memory of oading
uses a composite
linguistic of oading
partition plans generated
linguistic value low
vi and vk
composite cost metric
target memory utilization
enable more precise
decision making problems
availmem is low
