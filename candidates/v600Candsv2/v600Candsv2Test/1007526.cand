repok
java
coverage
red
symbolic
precondition
black
treemap
elds
checker
jpf
korat
testing
box
lazy
uninitialized
inputs
trees
specication
preconditions
testera
white
util
initialization
specications
elem
eld
conservative
checking
cr
tests
pc
tvla
symbolically
initialized
cl
generation
pathfinder
destructive
concrete
null
worklist
primitive
koushik
rst
structural
xd
branch
godefroid
ignoreif
fixafterdeletion
marinov
psreanu
deleteentry
structures
manipulating
entry
instrumented
automated
static
software
deos
darko
patrice
public
shelf
isomorphic
sen
del
corina
rover
backtracks
nondeterministically
infeasible
sigsoft
helper
thread
color
foo
cloud
execution
boolean
xi
maine
invariant
remove
counterexamples
tree
predicate
nikolai
tillmann
pelnek
fixafterinsertion
redhasonlyblackchildren
schulte
astoot
removefirst
scp
verisoft
elems
concolic
rupak
programs
heap
code
dierent
backtrack
systematically
initializes
branches
engine
radek
slam
isempty
asml
ecient
predicates
put
aliasing
void
library
wolfram
majumdar
visser
notes
verication
portland
willem
doong
structs
declaration
int
colored
generating
lastly
satisability
threaded
swaps
kingdom
program
acyclic
temporal
uml
created
path
violates
instrumentation
reconstruct
verify
generate
paths
linked
notices
logic
false
shape
oracles
specied
exibility
proach
checkers
exploration
cond
beach
assertion
node
doubly
pointers
unreachable
london
sigplan
object
mem
initializing
dene
engineering
sequences
checks
satises
explores
conguration
parenthesis
constraints
criteria
validating
criterion
behavioral
automating
concurrency
algebraic
symbolic execution
input generation
red black
test input
model checking
model checker
lazy initialization
white box
path condition
black trees
black box
next next
branch coverage
test inputs
input structures
black tree
box approach
input trees
java util
input structure
box testing
class invariant
execution tree
util treemap
color red
uninitialized elds
conservative precondition
generate tests
software testing
box test
complex data
manipulating complex
generalized symbolic
execution framework
conservative repok
pc x
generating tests
concrete precondition
generate test
non isomorphic
software engineering
java pathfinder
primitive data
remove methods
specication based
y pc
jpf model
koushik sen
java treemap
cr null
cl null
solve constraints
java predicate
java predicates
reference elds
code manipulating
unit testing
using model
java programs
y x
test data
based testing
y y
structural coverage
public static
data structures
test generation
shape analysis
testing criterion
method calls
analysis july
destructive updates
method preconditions
isomorphic input
treemap library
input elds
darko marinov
red return
xd xi
checker backtracks
logic engine
patrice godefroid
symbolically executing
conservative preconditions
primitive elds
algebraic specication
pointer assertion
del xd
program testing
x y
oriented programs
testing proceedings
size 5
static analysis
space exploration
assertion logic
class node
left entry
based coverage
sigsoft software
notes v
engineering notes
acm sigsoft
return false
software model
international symposium
also reports
code coverage
thread scheduling
test input generation
red black trees
red black tree
next next next
java util treemap
box test input
put and remove
x y y
black box testing
black box approach
trees of size
manipulating complex data
symbolic execution tree
generalized symbolic execution
x x y
jpf model checker
used during lazy
y y pc
symbolic execution framework
white box test
pc x y
code manipulating complex
checking as testing
white box approach
testing and analysis
using model checking
o the shelf
theory of test
symposium on software
x y x
complex data structures
sequences of put
constraints on primitive
non isomorphic input
method s precondition
generate test inputs
y pc x
java treemap library
model checker backtracks
red return false
checking to generate
color red return
del xd xi
assertion logic engine
corina s psreanu
pointer assertion logic
constraints on reference
y x x
y y x
object oriented programs
software engineering notes
engineering notes v
acm sigsoft software
sigsoft software engineering
state space exploration
n 5 september
automated software engineering
notes v 30
stop the analysis
black box fashion
current color red
entry cl current
cl current left
static final boolean
properties of interfaces
java data structures
validating temporal safety
current entry worklist
repok returns true
removefirst entry cl
model checking used
java pathfinder jpf
method under test
logic based theory
nodes represent entries
generating test inputs
cr current right
testera and korat
inputs from constraints
parameterized unit tests
straight model checking
right if current
entry worklist removefirst
