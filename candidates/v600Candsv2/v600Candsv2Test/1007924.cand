hcc
adv
diam
blowup
placement
coff
poff
files
loop
caches
preserves
paging
parent
cache
deact
capacity
caching
child
incurs
ine
coloring
request
competitive
online
landlord
depth
cooperative
file
anc
swapp
harvest
white
children
guard
lru
colorable
react
ch
diameter
load
incurred
root
ultrametric
nuca
bartal
hierarchical
metrics
lemma
outer
requests
competitiveness
epoch
black
serverless
dist
inequality
descendants
moves
nonzero
missing
act
ton
arbitrarily
toff
evict
ultrametrics
swapc
sleator
game
confusion
adversarial
feasible
node
claim
placed
adversary
nonuniform
incur
fakcharoenphol
tarjan
squid
nonconstant
retrieval
predicate
preserve
od
internal
hierarchy
invariant
field
cooperate
branch
nonnegative
diameters
relocation
ancestor
copy
rooted
terminates
shell
colorings
placements
consistency
consistent
serves
initially
exchanging
penalty
polylog
departments
opt
deterministic
iteration
fields
cap
lemmas
everywhere
leaf
furthest
ect
incurring
descendant
subtree
guesses
metric
ancestors
removes
separated
tree
seminal
sibling
lines
offline
swap
sized
modify
migration
log
equals
executed
sd
requested
department
amortized
incorrectly
serving
updated
derivation
dren
walnut
empowers
chil
nonidle
xfs
algorith
competiveness
predicament
korupolu
unachievable
wisely
eviction
maintains
approximating
old
discovery
statement
brevity
ects
copies
adds
terestingly
maxu
deactivation
reactivation
gration
partment
erature
operative
evicted
fill
guess
erarchy
deci
ratio
replication
hierarchies
erent
desc
idle
count
awerbuch
lit
pulled
capacity blowup
parent diam
cooperative caching
o ine
line 12
hcc algorithm
request sequence
lemma 4
line 4
line 15
hcc problem
loop preserves
holds initially
hierarchical cooperative
distributed paging
preserves p
paging problem
x field
loop moves
internal node
main loop
x value
competitive ratio
b feasible
every iteration
every internal
line 14
online algorithm
constant competitive
placement p
loop proof
associated coloring
loop invariant
tree metrics
retrieval cost
file f
constant capacity
e child
online hcc
second branch
black child
old node
caching problem
preserves i2
ine algorithm
depth 4bk
placement poff
diam parent
constant competitiveness
preserves i1
statement takes
nonzero value
cost incurred
e parent
proof every
coloring c
hence line
always consistent
loop terminates
positive x
avoid confusion
lower bound
ine hcc
swapp p
g depth
holds everywhere
files placed
adv generates
bartal 3
load deact
coff proof
feasible placement
global invariant
penalty f
x values
first inequality
lines 4
line 8
line 5
every line
lines 14
dist u
claim holds
p holds
arbitrary metrics
approximating arbitrary
hierarchical cooperative caching
set of files
outer if statement
inequality is due
incurs a cost
node i e
every internal node
lines that modify
equal to 0
o ine algorithm
constant capacity blowup
diam parent diam
cooperative caching problem
takes the second
confusion we use
claim holds initially
consistency of coff
parent diam parent
initially because root
execution of line
proof every iteration
sequence of requests
proof the claim
lemma 4 3
preserves the consistency
online hcc algorithm
positive x value
depth 4bk 1
ine hcc algorithm
use to refer
set both x
set of caches
thus the change
execution of adv
moves to one
o ine hcc
loop preserves i1
p holds initially
dist u v
copy of f
total cost incurred
approximating arbitrary metrics
metrics by tree
line of code
lemma 4 7
lemma 4 6
follows from lemma
lemma 4 4
set of nodes
b feasible online
denote the old
loop terminates lemma
k k h
