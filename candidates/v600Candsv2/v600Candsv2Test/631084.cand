coverage
subdomains
subdomain
universally
covers
testing
properly
criteria
mutation
suites
criterion
decision
suite
subsumes
cover
sd
sdc
adequacy
fault
mdcc
detecting
arising
faults
branch
flow
causing
inputs
weyuker
myers
program
oi
narrows
covering
failure
subsume
selection
minimized
tuples
specification
mutant
hamlet
du
nfa
exercised
software
laski
korel
paths
false
mcc
contexts
duplicates
subsumption
testers
phyllis
rise
subexpression
elaine
detect
statement
adequate
analogs
frankl
association
statements
executable
mutants
ability
tosem
strategies
edges
dc
unexecutable
practitioner
ordered
operators
applicable
associations
engineering
programs
guaranteed
clarke
avritzer
reliability
selecting
feasible
da
sigsoft
edge
tester
node
yuen
harrold
deficiency
evaluate
failures
effectiveness
boolean
path
bev
littlewood
morasca
sandro
ntafos
sub
compound
strigini
tak
jeng
anomalies
controlling
showed
occurring
inspire
exercise
argued
decisions
conditional
consisting
weiss
def
occurrences
overlapping
db
multi
partition
distributions
dr
poorer
lorenzo
negations
analytical
elementary
likely
negation
attention
satisfies
abilities
modification
alberto
loop
artifact
repetitive
goto
definitions
measures
branches
zhu
regardless
family
investigated
dividing
assessing
structural
expose
suffix
cause
executed
relations
exposed
strategy
dept
assembly
predicate
bingchiang
tacit
mumcut
fxjnot
curiosity
forgcs
dcc
ftjp
fai
anecdotal
evoke
eof
malevris
notes
likelihood
fails
mary
transitivity
summarizing
arrow
adequately
cc
condition coverage
universally properly
decision condition
properly covers
context coverage
multiple condition
properly cover
decision coverage
p uses
c 2
covers c
c 1
branch testing
test case
ordered context
failure causing
test suites
mutation testing
test suite
test cases
minimized decision
fault detecting
multi set
detecting ability
testing criteria
subdomains arising
data flow
required k
test selection
program p
cover decision
causing inputs
criterion c
cover c
coverage universally
software engineering
detecting faults
subdomain based
subdomain d
coverage criterion
input domain
software testing
covers relation
test data
decision d
causing input
covers decision
mutation operators
sd mdcc
one test
definition clear
flow testing
clear path
adequacy criteria
flow graph
sdc p
partition testing
limited mutation
uses universally
c sub
k tuples
du paths
simple oi
node n
d d
start node
satisfies c
testing methods
p use
universally applicable
coverage subdomains
oi paths
d 9
tuples criterion
coverage 0
coverage requires
coverage subsumes
every program
testing strategies
criterion requires
paths criterion
nfa property
based testing
adequacy criterion
data adequacy
d 2
edge 8
coverage proof
subdomain consisting
coverage according
relative fault
selection strategies
based criteria
data selection
d 1
let d
program specification
universally covers
expression controlling
sub multi
sub 2
decision condition coverage
multiple condition coverage
universally properly covers
universally properly cover
covers c 2
properly covers c
ordered context coverage
minimized decision condition
fault detecting ability
failure causing inputs
coverage universally properly
c 1 properly
properly cover c
one test case
evaluate to true
required k tuples
properly cover decision
cover c 2
c 1 universally
failure causing input
inputs that make
properly covers decision
covers decision coverage
definition clear path
data flow testing
path with respect
detect a fault
properly covers relation
limited mutation testing
coverage and ordered
evaluate to false
transactions on software
c 1 subsumes
likely to detect
suite that satisfies
m and e
cover decision coverage
better at detecting
set of subdomains
true at least
uses universally properly
simple oi paths
cover all p
p uses universally
cover decision condition
condition coverage universally
context coverage universally
inputs that cause
subdomain based criteria
number of failure
software engineering v
p and specification
test data adequacy
flow testing criteria
requires that every
test data selection
selection of one
false at least
require the selection
d 2 sd
edge 8 9
d d f
condition coverage subdomains
condition coverage criterion
relative fault detecting
condition coverage 0
least as likely
condition coverage requires
number of conditions
satisfies c 1
attention to programs
selecting test cases
c sub 2
c sub 1
d is d
inputs in d
sub multi set
boolean expression controlling
subsumes c 2
