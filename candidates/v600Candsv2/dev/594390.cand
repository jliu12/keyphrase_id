maintenance
studies
theories
software
researchers
empirical
participants
comprehension
documentation
subgroup
skill
organizational
organizations
findings
workshop
harrison
people
developers
laws
session
metrics
schneberger
jarrett
aren
evolution
group
reuse
understanding
hoc
quick
interdisciplinary
synthesizing
affect
fixes
experimenters
decay
rosenberg
behavioral
planned
expertise
professional
factors
tools
ad
activity
didn
experiment
tryggeseth
didactic
elisabeth
moreira
dusink
eirik
anneliese
mayrhauser
rethinking
helena
mendes
industry
modules
development
money
recommendations
programmers
scientists
asked
effort
visaggio
remedies
modularization
disciplines
tolerate
causal
controlled
student
students
weaknesses
artifacts
strengths
portugal
chair
goals
unclear
success
individuals
understand
fundamental
monterey
wisely
deep
costs
subjects
warren
maintainability
code
changes
measuring
engineering
impact
technology
stressed
instruments
business
article
relate
author
companies
productivity
challenges
participant
help
scientific
person
deteriorate
testing
supporting
think
sessions
undergo
historical
synthesize
vital
degrade
rarely
questions
taxonomy
conducting
field
attributes
tried
borrow
von
routinely
enhancements
patterns
affects
groups
team
presentations
enhancement
correlations
remedy
principles
considerable
statistics
project
management
scott
members
organization
history
evolve
modeling
wrestled
economists
dues
compliment
kemerer
misrepresentations
meager
guiseppe
cornerstones
distill
respondents
approachmore
vans
startling
centralization
milestones
restructure
attended
predict
draw
hypotheses
conduct
numerous
assessing
benefit
areas
standards
validated
visualization
thought
languages
savings
dominate
lose
belief
brought
surveys
predictably
maintainers
unethical
unintentional
consolidate
software maintenance
empirical methods
affect maintenance
empirical studies
maintenance process
fundamental laws
controlled experiment
empirical research
code decay
software engineering
software comprehension
program comprehension
factors relate
area includes
maintenance research
hoc changes
quick fixes
group b
many studies
ad hoc
changes become
numerous successive
successive changes
programming skill
maintenance processes
jarrett rosenberg
common results
maintenance success
process fundamental
domain specific
main conclusion
mathematical modeling
new technology
software development
maintenance costs
work together
group members
open issues
term evolution
theories however
often dominate
systems deteriorate
empirical exploration
studies 3
didactic model
sciences information
based domain
product lines
tolerate numerous
theory building
research methods
maintenance productivity
software complexity
management tools
borrow wisely
anneliese von
session chair
common findings
synthesizing individual
underlying principles
eirik tryggeseth
assessing maintenance
factors affect
elisabeth dusink
certain maintenance
subgroup 3
scale software
first session
supporting interdisciplinary
von mayrhauser
maintenance problems
measure software
group made
maintenance tasks
stressed two
specific software
increasingly difficult
preserving changes
professional programmers
produce general
warren harrison
validated theories
without understanding
meta analysis
second session
iterative enhancement
general theories
complexity metrics
languages software
planned structure
documentation availability
reuse based
mendes moreira
helena mendes
structured programming
researchers must
must tolerate
useful theories
multiple studies
deep understanding
money throughout
interdisciplinary research
human variation
scott schneberger
individual results
software systems
case studies
many researchers
specific part
behavioral sciences
laws and assumptions
studies of software
ad hoc changes
workshop on empirical
process fundamental laws
maintenance process fundamental
numerous successive changes
asked to modify
processes through controlled
measure software comprehension
reuse based domain
must tolerate numerous
domain specific software
structure preserving changes
sciences information systems
maintenance of reuse
availability on software
synthesizing individual results
assessing maintenance processes
engineering the behavioral
planned structure preserving
part of scientific
anneliese von mayrhauser
software systems must
supporting interdisciplinary research
increasing our knowledge
specific software product
programming languages software
expanding the use
remedy this situation
software product lines
exploration of code
model to measure
based domain specific
software maintenance process
tolerate numerous successive
throughout the software
behavioral sciences information
issues in empirical
software maintenance productivity
scale software comprehension
become increasingly difficult
changes become increasingly
deteriorate and changes
assumptions of software
knowledge of large
study how people
time and money
choose to maintain
impact of documentation
kind of change
software maintenance research
systems must tolerate
large scale software
use of empirical
group of researchers
effect on maintenance
helena mendes moreira
us to look
measuring its effect
oriented programming languages
data from multiple
maintenance and evolution
need to develop
strengths and weaknesses
object oriented programming
