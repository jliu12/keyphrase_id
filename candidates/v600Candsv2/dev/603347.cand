openmp
pomp
instrumentation
omp
directive
pragma
api
directives
interface
opari
mpi
tau
barrier
measurement
exit
threads
events
library
compiler
enter
profiling
descriptor
expert
instrumented
tool
stommel
epilog
workshare
calls
inst
thread
pragmas
nowait
ompregdescr
omptrace
runtime
tracing
master
parallel
compilation
clauses
structured
fork
vampir
code
fortran
source
execution
portable
tools
block
instrument
smp
traces
event
monitoring
user
transformations
constructs
disable
slave
ocean
team
descriptors
parallelism
serial
finalize
sentinel
jomp
vgv
noinstrument
lastprivate
sentinels
remo
compilers
begin
endif
trace
void
join
idle
atomic
zpl
routines
barriers
name
region
init
struct
rts
lock
visualization
circulation
weather
timers
java
libraries
instrumentor
earl
ovaltine
vampirtrace
paraver
kojak
linen
firstprivate
visualizer
proposal
shared
programmer
across
specifications
char
language
automatic
pallas
upc
slaves
pdt
portability
rewriting
conditional
hardware
regions
hybrid
rsqb
shutdown
lsqb
supports
overhead
extensible
synchronization
overheads
spent
severity
diff
schedule
clause
critical
platforms
threaded
routine
profile
prototype
linking
display
macros
programmable
translator
file
abstractions
location
statements
passing
implicit
integrated
transformation
displayed
expose
counters
forecasting
syntax
granularity
mapped
static
toolkit
accessible
influence
guide
disabled
kai
message
tree
configured
sequential
esprit
parser
clusters
loops
loop
exits
startup
enclosed
optional
implement
technology
integration
int
compound
macro
selectively
dynamic
access
call pomp
d call
structured block
performance tool
openmp performance
performance interface
pomp barrier
enter d
exit d
block call
pomp parallel
tool interface
performance tools
begin d
performance measurement
pragma omp
d structured
performance analysis
performance data
end d
barrier enter
barrier exit
performance api
proposed openmp
openmp directives
openmp constructs
openmp directive
user code
performance instrumentation
context descriptor
performance library
event traces
user functions
openmp events
pomp library
performance property
pomp instrumentation
openmp compiler
omp parallel
execution events
omp inst
pomp section
openmp pragma
mpi openmp
pomp calls
openmp applications
c openmp
d omp
openmp runtime
pomp api
user function
profiling interface
openmp execution
implicit barrier
source code
automatic performance
conditional compilation
runtime library
context descriptors
parallel join
parallel fork
interface calls
library interface
pomp single
compiler directives
pomp end
openmp construct
openmp parallel
openmp programs
mpi profiling
parallel end
pomp critical
api functions
ompregdescr r
clauses call
nowait clause
openmp mpi
openmp compilers
pomp sections
pomp workshare
loop call
pomp begin
mpi events
fork d
join d
parallel begin
tau performance
slave threads
language system
c c
mpi applications
performance monitoring
call tree
context information
arbitrary user
performance problems
directive transformations
openmp standard
instrumentation approach
epilog tracing
work sharing
section end
instrumentation interface
proposed performance
atomic expression
guide compiler
section begin
library routine
new directives
event trace
hardware performance
parallel region
single openmp
inst init
code location
pomp interface
directive rewriting
hybrid applications
stommel application
omp noinstrument
specific performance
openmp program
code regions
construct based
region operation
complex parallel
end directive
lastprivate clauses
directive instrumentation
interface functions
transformation tool
collected performance
parallel programming
shared memory
source translation
property specifications
level parallel
d call pomp
call pomp barrier
block call pomp
structured block call
call pomp parallel
performance tool interface
d structured block
exit d call
enter d call
end d call
barrier exit d
pomp barrier enter
barrier enter d
pomp barrier exit
source to source
openmp performance api
openmp performance interface
begin d structured
proposed openmp performance
call pomp section
automatic performance analysis
interface for openmp
analysis of openmp
c c openmp
pomp parallel end
pomp parallel fork
call pomp single
openmp and mpi
clauses call pomp
parallel fork d
call pomp critical
parallel end d
arbitrary user code
call pomp workshare
pomp parallel begin
pomp parallel join
call pomp sections
parallel join d
expert and tau
parallel begin d
loop call pomp
pragma omp inst
section end d
openmp runtime library
tool interface functions
construct or region
pomp section begin
fork d omp
runtime library routine
analysis of mpi
pomp section end
exit d structured
section begin d
single openmp constructs
openmp execution events
omp inst init
performance property specifications
mpi profiling interface
begin and pomp
d omp parallel
begin d call
high level parallel
analysis and visualization
language e g
enter d structured
pomp api functions
inst init finalize
proposed performance interface
openmp performance tool
performance tool api
technology for complex
measurement and analysis
dimensions performance problem
void pomp_for_exit ompregdescr
software with templates
omp for schedule
threads of execution
performance instrumentation interface
expression call pomp
pomp end calls
openmp parallel region
d do loop
use of macros
parallel work sharing
case for high
call pomp master
combined parallel work
functions and regions
visualizer for mpi
interface calls directly
source translation tool
threads is shown
pomp workshare enter
openmp directive rewriting
void pomp_for_enter ompregdescr
analyzing event traces
parallel other clauses
collected performance data
mechanism for performance
pomp sections exit
clauses structured block
private j firstprivate
workshare enter d
performance interface calls
shared memory parallelism
