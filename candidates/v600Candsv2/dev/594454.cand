oofp
ilf
pile
dets
ilfs
oofps
oo
ifpug
counting
aggregations
files
aol
antoniol
eif
ret
object
giuliano
oriented
rets
counted
eifs
logical
aggregation
collectionofcards
card
deck
software
inheritance
rreg
designer
file
det
loc
draw
omt
count
ftrs
nmse
cards
pilot
superclass
discard
associations
lf
lfs
tex
measurement
shuffle
effort
stp
referenced
perspective
subclasses
items
visibility
pops
specialization
practices
lm
composite
merged
projects
fetcke
trento
residuals
translator
tables
classes
development
outliers
petal
transactions
service
corporation
intercept
objects
reuse
association
iv
organization
parser
relationships
concepts
uml
squared
estimation
user
automate
validation
estimating
initialize
rational
traditional
recognizable
minkiewicz
rregs
rlms
sodalia
istituto
atr
booch
lokan
recalibration
srs
nmae
delete
predictive
requests
predictors
polymorphism
outlier
ast
merging
industrial
external
regression
duration
display
insert
rumbaugh
lms
excerpt
implementer
smoothers
methodologies
specification
tools
fp
merge
phases
fps
rating
manual
identifying
organizations
italy
instantiated
paradigm
container
mult
jacobson
identifiable
rose
experimentation
low
specifications
leaf
services
language
generalization
project
measuring
attributes
functionalities
bootstrap
tool
subclass
counter
attribute
practitioners
predict
logistic
code
cross
sr
parsed
subgroup
signature
influential
subjective
documents
sample
stage
identification
options
contribute
strategies
environment
classify
adaptation
translated
summed
parameterized
collection
hierarchy
messages
maintained
unified
reused
rank
counts
function point
logical files
object oriented
oriented software
function points
logical file
low low
object model
point like
like measure
giuliano antoniol
antoniol et
pile draw
ilf eif
counting process
object models
ifpug 1994
one ret
traditional function
table iv
main tex
pilot study
draw pile
oofp counting
ilfs eifs
tex 23
discard pile
single class
generalization specialization
cards rank
delete top
draw discard
deck shuffle
visibility collection
shuffle deal
state draw
classical function
discard card
pile bottom
insert initialize
size estimation
det ret
composite ilfs
rank display
location visibility
initialize delete
aol specification
display discard
software development
scale factor
hand initial
pile location
oo design
service requests
data items
oofp value
software corporation
application boundary
industrial environment
draw figure
rational software
design stage
counting practices
object points
ifpug counting
oriented function
complexity tables
oofp counter
deal hand
practices manual
oo paradigm
card deck
oofp count
identifying logical
oofp values
single logical
low average
v p
development projects
aggregation structure
measurement perspective
average complexity
counting rules
aol parser
oofp computation
leaf classes
dets rets
corporation 1997b
oo analysis
unified modeling
four oofp
trento italy
user recognizable
merge aggregations
simple ilfs
intercept term
omt stp
generalization strategy
inheritance relationships
cross validation
data processing
table iii
et al
functional model
estimation models
development process
lm g
use cases
table ii
four different
tool used
design elements
another parameter
initial state
object oriented software
measure for object
function point like
point like measure
giuliano antoniol et
antoniol et al
low low low
traditional function points
collection of cards
main tex 23
tex 23 06
discard pile draw
hand initial state
display discard card
draw pile draw
dets and rets
pile location visibility
top of pile
initial state draw
location visibility collection
aggregation and inheritance
draw discard pile
classical function point
cards rank display
deck shuffle deal
initialize delete top
rank display discard
bottom of pile
insert initialize delete
state draw pile
pile draw discard
card deck shuffle
object oriented function
ilf or eif
oriented software development
pile draw figure
ifpug counting practices
rational software corporation
single logical file
oriented function points
shuffle deal hand
points to object
average or high
counting practices manual
deal hand initial
discard card deck
l a h
composite ilfs eifs
software corporation 1997b
simple ilfs eifs
function point method
oofp computation process
tables are used
identifying logical files
size of object
process this step
software development projects
unified modeling language
estimating the size
effort and duration
used in step
method for estimating
lines of code
software engineering v
application boundary correspond
traditional software development
reuse makes classes
helps in identifying
logical files conceptually
oo design elements
predictors of size
object oriented concepts
designer s perspective
case tool used
figures 3 6
example figures 3
det ret computation
rets are counted
view reuse makes
appropriate to count
full inherent value
multivariate linear models
four oofp series
det and ret
two data items
modeling language rational
association is considered
system a scale
