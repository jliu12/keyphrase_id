lock
locks
locking
file
client
preemptible
server
modes
outstanding
clients
compatibility
bitlocks
held
downgrade
requests
requested
access
compatible
request
metadata
session
summary
tank
demand
disallowed
granting
semi
protocol
upgrade
sessions
livelock
storage
granted
semantics
summarizing
permitted
bit
deadlock
opens
concurrency
files
privileges
mode
demands
manage
exclusive
token
concurrently
cache
px
incoming
static
release
weakness
sharing
bits
strength
released
locked
distributed
calypso
protect
management
incompatible
protects
message
san
disallows
revocation
holding
caching
stronger
evaluation
disallow
routine
weaker
deny
concurrent
disks
refuse
dynamic
shared
messages
dr
open
atomically
read
instances
network
shipping
permits
devices
conflicting
evaluate
releasing
obviates
dfs
lists
latency
evaluating
coherency
gigabit
writers
attached
opening
tokens
list
identifiers
interface
processes
synchronization
downgraded
elect
transact
lease
grantlock
downgrading
releaselock
actions
reflect
hierarchically
implement
denies
revoking
implementer
awaiting
holder
structures
managing
object
secure
sans
fibre
revoked
overhead
dx
currently
evaluates
improves
operate
permit
identifier
managed
entry
protecting
denied
demanded
servers
andrew
transitions
implementing
upgrades
extendible
atomicity
interactions
accesses
releases
authentication
recovery
writing
avoiding
preempted
writer
conflict
promotion
subsequent
seeing
protected
nk
tables
entries
synchronized
behalf
options
inputs
hoc
union
databases
ethernet
action
traffic
service
receiving
correctness
logical
traditional
hierarchical
iff
hashing
concepts
abstraction
acts
file system
locking modes
semi preemptible
outstanding locks
lock state
access modes
requested lock
distributed file
file systems
preemptible lock
lock requests
lock evaluation
held lock
data structure
dynamic evaluation
open instances
local locks
lock compatibility
compatibility table
distributed lock
lock summary
incoming lock
storage tank
local processes
lock request
local file
client server
summarizing data
preemptible locks
lock management
open state
locking system
dynamic lock
file session
file open
data structures
single lock
client holds
multiple locks
outstanding lock
permitted access
currently held
locking data
summary data
static data
another client
outstanding list
open instance
bitlocks list
bitlocks lists
local lock
storage area
session locks
local open
possible locking
new lock
lock x
bit vector
improves performance
exclusive access
access methods
system open
file access
distributed system
distributed locks
network attached
downgrade heuristic
lock identifiers
open semantics
open requests
x stronger
evaluating lock
stronger lock
lock mode
currently outstanding
demand requests
local process
o l3
current open
preemptible protocol
weaker lock
evaluate lock
storage devices
area network
two clients
locking protocol
shared storage
network file
system semantics
server figure
lock compatible
disallowed modes
access data
locks held
locks dynamic
semi preemptible lock
distributed file system
summarizing data structure
compatible with y
distributed file systems
number of locking
summary data structure
local file system
lock summary data
strength and weakness
open and close
dynamic lock evaluation
incoming lock requests
static data structures
evaluation of locks
file system open
set of locks
lock is compatible
access and sharing
storage area network
semi preemptible locks
possible locking modes
weaker than y
incoming lock request
file system semantics
o l3 o
semi preemptible protocol
permitted access modes
stronger than z
file session locks
granting a lock
open a file
file system server
x is compatible
locking data structures
current open instances
local lock state
file system interface
n outstanding locks
set of access
lock compatibility table
access to files
network file system
evaluating the compatibility
currently outstanding locks
locking data structure
algorithms for evaluating
list of outstanding
client server file
state the server
algorithms for lock
reflect the change
single semi preemptible
semi preemptible locking
file system client
data structure 1
request the server
contains a list
o o o
k different access
x is weaker
locks dynamic evaluation
weaker than z
attached secure disks
lock is released
demand all locks
definition of lock
