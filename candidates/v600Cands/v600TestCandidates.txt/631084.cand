coverage
subdomains
subdomain
universally
covers
testing
properly
criteria
mutation
suites
criterion
decision
suite
subsumes
cover
sd
sdc
adequacy
fault
mdcc
detecting
arising
faults
branch
flow
causing
sdc1
inputs
weyuker
myers
program
oi
narrows
covering
failure
subsume
selection
minimized
tuples
specification
mutant
hamlet
du
nfa
exercised
software
laski
korel
paths
false
mcc
contexts
duplicates
subsumption
testers
phyllis
rise
2g
subexpression
elaine
detect
statement
adequate
analogs
frankl
association
statements
executable
mutants
ability
tosem
strategies
edges
dc
unexecutable
f0
practitioner
ordered
operators
applicable
associations
engineering
programs
guaranteed
clarke
fxj1
avritzer
reliability
selecting
feasible
da
sigsoft
edge
tester
node
yuen
sdc2
harrold
deficiency
evaluate
failures
effectiveness
boolean
path
bev
littlewood
morasca
sandro
ntafos
sub
compound
strigini
tak
jeng
anomalies
controlling
showed
occurring
inspire
exercise
argued
decisions
conditional
consisting
10g
427
weiss
def
occurrences
overlapping
db
multi
partition
distributions
dr
poorer
lorenzo
negations
analytical
elementary
likely
negation
attention
satisfies
abilities
modification
alberto
loop
artifact
repetitive
goto
definitions
measures
branches
zhu
regardless
family
investigated
dividing
assessing
structural
expose
suffix
cause
executed
relations
exposed
strategy
f1
dept
assembly
0g
predicate
bingchiang
tacit
0narrows
mumcut
fxjnot
curiosity
0obtained
forgcs
dcc
ftjp
fai
anecdotal
evoke
fxj4
9206910
eof
1402
malevris
notes
likelihood
fails
mary
transitivity
summarizing
arrow
adequately
cc
condition coverage
universally properly
decision condition
properly covers
context coverage
multiple condition
properly cover
decision coverage
p uses
c 2
covers c
c 1
branch testing
test case
ordered context
failure causing
not universally
test suites
mutation testing
test suite
test cases
minimized decision
fault detecting
multi set
all uses
all p
detecting ability
the subdomain
testing criteria
subdomains arising
data flow
evaluate to
required k
arising from
test selection
each subdomain
coverage is
program p
the subdomains
cover decision
1 properly
causing inputs
coverage does
criterion c
p s
a test
cover c
coverage universally
software engineering
coverage and
at detecting
detecting faults
subdomain based
subdomain d
coverage criterion
1 universally
inputs that
faults than
input domain
on software
software testing
covers relation
test data
decision d
causing input
covers decision
mutation operators
sd mdcc
of subdomains
the criteria
the program
one test
criteria that
definition clear
flow testing
clear path
adequacy criteria
a definition
the all
flow graph
a fault
this program
sdc p
to true
partition testing
not properly
if c
limited mutation
subsumes but
uses universally
these criteria
least once
the decision
1 subsumes
c sub
suite that
in node
of test
case from
k tuples
of criteria
those inputs
du paths
subdomains are
all du
to false
simple oi
2 sd
better at
each decision
node n
of testing
d d
detect a
from each
and ordered
path with
start node
a subdomain
satisfies c
testing methods
least as
cover all
specification s
the universally
p use
criteria are
criteria in
decision in
ability of
a decision
take on
universally applicable
the properly
coverage subdomains
oi paths
d 9
tuples criterion
coverage 0
coverage requires
coverage subsumes
every program
but does
the fault
of conditions
testing strategies
guaranteed to
a use
the criterion
criterion requires
all simple
paths criterion
than branch
uses or
nfa property
selection of
be exercised
based testing
covers all
be better
a program
adequacy criterion
data adequacy
the multi
d 2
testing and
rise to
edge 8
coverage proof
subdomain consisting
the mutant
coverage according
relative fault
subdomain in
selection strategies
based criteria
suite is
data selection
that c
true at
and specification
the covering
of failure
any test
to branch
testing we
false at
uses all
for program
of fault
that make
d 1
in p
let d
program specification
universally covers
expression controlling
subsumes all
sub multi
sub 2
decision condition coverage
multiple condition coverage
universally properly covers
universally properly cover
all p uses
covers c 2
properly covers c
ordered context coverage
not universally properly
minimized decision condition
does not universally
fault detecting ability
subdomains arising from
1 properly covers
from each subdomain
if c 1
failure causing inputs
condition coverage is
coverage universally properly
c 1 properly
properly cover c
coverage does not
a test suite
at detecting faults
detecting ability of
one test case
evaluate to true
not properly cover
required k tuples
properly cover decision
multi set of
on software engineering
cover c 2
c 1 universally
properly cover all
does not properly
c 2 for
and ordered context
failure causing input
inputs that make
of those inputs
properly covers decision
covers decision coverage
definition clear path
data flow testing
clear path with
test case from
the fault detecting
of the criteria
a test case
path with respect
detect a fault
1 universally properly
properly covers relation
sdc p s
consisting of those
those inputs that
at least once
context coverage and
the decision coverage
limited mutation testing
coverage and ordered
condition coverage and
d d t
condition coverage does
subsumes but does
c 2 if
test suite that
detecting faults than
for this program
guaranteed to be
the multi set
evaluate to false
transactions on software
c 2 then
to evaluate to
c 1 subsumes
likely to detect
all du paths
suite that satisfies
decision coverage is
the condition coverage
m and e
cover decision coverage
at least as
better at detecting
of failure causing
start node to
a definition clear
take on the
the input domain
the start node
but does not
to be better
to detect a
c 1 to
the subdomains arising
the properly covers
from the start
of fault detecting
set of subdomains
of testing methods
be better at
context coverage does
in node n
all simple oi
true at least
than branch testing
uses universally properly
to branch testing
simple oi paths
cover all p
p uses universally
cover decision condition
condition coverage universally
context coverage universally
that c 1
that if c
then c 1
for every program
of data flow
is a definition
a multi set
program p and
2 then c
uses or all
properly covers all
of subdomains arising
inputs that cause
to satisfy c
subdomain based criteria
number of failure
that satisfies c
as c 2
a use of
case from each
on the value
software engineering v
p and specification
test data adequacy
flow testing criteria
c 1 is
in the program
the form a
requires that every
t 2 d
test data selection
selection of one
false at least
form a or
require the selection
d 2 sd
the criteria we
branch testing we
the relative fault
edge 8 9
the subdomain consisting
d d f
value true at
that multiple condition
coverage according to
coverage requires that
from the subdomain
condition coverage subdomains
condition coverage criterion
relative fault detecting
condition coverage 0
subdomain consisting of
that context coverage
value false at
the required k
2 sd mdcc
least as likely
condition coverage requires
test cases from
to v from
we showed that
p s and
of test cases
more test cases
number of conditions
satisfies c 1
attention to programs
selecting test cases
c sub 2
arising from this
a sub multi
this program the
c sub 1
d is d
inputs in d
the nfa property
test suite t
sub multi set
boolean expression controlling
d is of
causing inputs in
of all inputs
subsumes c 2
a definition of
