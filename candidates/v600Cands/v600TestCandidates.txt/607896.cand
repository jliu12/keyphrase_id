evolutionary
wcet
sa
timing
categorizations
cache
fitness
generations
instruction
analyzer
caches
bcet
individuals
longest
population
testing
mutation
cycles
recombination
schedulability
loop
reinsertion
bubblesort
temporal
shortest
static
caching
loops
extreme
defense
mueller
hit
offspring
miss
execution
associativity
flow
predictions
railroad
gnat
kiran
preemptive
hardware
instructions
worst
sigma10
trio
portability
loc
calculator
misses
calling
frank
permissible
chapter
simulator
deadlines
compiler
estimates
calculated
references
conflicts
systematic
matrices
stopping
seth
correctness
reproduction
uncached
benz
rotenberg
4095
daimler
kaustubh
aravindh
22626
8095
anantaraman
instrumentation
genetic
gcc
electronics
datum
regard
risc
pipeline
harman
crossover
yifan
ipx
389
insufficiently
dfa
843
cles
patil
848
iterations
cy
multitude
619
program
cached
processor
prediction
afterwards
paths
optima
toolbox
cycle
generation
portable
confidence
software
assuring
edf
tighter
multiplication
examination
inner
simulation
safe
procedures
graphics
child
analytical
programs
matlab
recommend
executing
et
tester
coverage
logical
interrupt
quantify
thoroughly
overhead
fit
categorization
309
embedded
stopped
adjustments
optimum
timed
zhu
measurements
outer
diversity
pipelining
parents
header
procedural
nested
sys
configurations
selection
inversely
missed
conservative
addresses
300
deadline
categoriza
popula
expenditure
bination
11872718
11826117
71350
retargeting
preheaders
vpcc
mandrioli
35226
fittest
sporadically
regehr
creased
dasarathy
12050569
24469014
brylow
12234507
23466
asymptoted
sibin
sigma3
substantiated
mutating
decls
pohlheim
15357471
timum
vpo
13007019
binkley
brightest
dudani
execution times
evolutionary testing
time systems
timing analyzer
real time
longest execution
extreme execution
temporal behavior
execution time
the wcet
the timing
evolutionary algorithms
static cache
of real
the temporal
timing analysis
static analysis
the population
of evolutionary
and et
schedulability analysis
test object
timing constraints
loop level
by sa
the shortest
the evolutionary
case execution
the bcet
the longest
the test
control flow
for schedulability
wcet of
test data
the actual
cycle level
the bubblesort
temporal correctness
best worst
of generations
actual execution
sa and
cache simulation
flow information
cache simulator
frank mueller
test objects
evolutionary computation
shortest execution
best case
the extreme
logical correctness
of sa
the instruction
worst case
data flow
instruction categorizations
systematic test
timing tree
and wcet
time environments
shortest and
worst best
bcet and
bubblesort algorithm
testing real
timing predictions
remaining associativity
associativity levels
and longest
the loop
input parameters
the caching
test methods
of static
the program
caching behavior
the et
both approaches
testing is
instruction and
run times
behavior of
cache behavior
analyzer for
path analysis
for et
static timing
the execution
individuals are
testing the
cycles for
population size
evolutionary optimization
sa approach
testing et
test program
population and
et was
shortest run
calling structure
the sa
test datum
et approach
time determined
input situations
kiran seth
defense electronics
gnat gcc
function instance
times determined
discrete recombination
fitness values
categorizations for
address calculator
evolutionary algorithm
the cache
the calling
and evolutionary
data caches
entire program
current work
each loop
instruction cache
data references
the fitness
first miss
specified timing
analyzer can
times were
for real
existing test
the defense
the individuals
portability of
analytical method
loc and
stopping condition
the multiplication
executing the
cache state
the portability
instruction caches
over many
first hit
analysis and
specified for
multiplication of
experiments the
within the
of test
of matrices
processor cycles
test programs
the control
confidence in
with regard
the worst
time of
was increased
the examination
call graph
fit into
was set
the experiments
two methods
an execution
a loop
for static
n a
random testing
of individuals
that reason
calculated by
case and
on testing
population of
determined by
increased to
caches and
addresses of
first misses
caching into
mutation is
high fitness
driven software
100 generations
mutation probability
categorizations have
since instruction
the daimler
4095 the
miss hit
analysis sa
cycles results
generations the
for sa
program lines
generations was
real time systems
of real time
the temporal behavior
extreme execution times
the timing analyzer
longest execution time
the longest execution
temporal behavior of
the extreme execution
actual execution times
the test object
behavior of real
sa and et
for schedulability analysis
the actual execution
static analysis and
number of generations
longest execution times
static cache simulation
the shortest execution
the control flow
case execution time
instruction and data
of static analysis
shortest execution time
shortest and longest
testing the temporal
a systematic test
method of static
worst best worst
static cache simulator
and longest execution
each loop level
the remaining associativity
the bubblesort algorithm
the caching behavior
multiplication of matrices
testing real time
execution times were
the bcet and
real time environments
remaining associativity levels
bcet and wcet
best worst best
control flow information
worst case execution
a n a
n a n
into the remaining
best case execution
for the longest
the wcet of
execution time of
static timing analysis
of the test
the population size
for real time
cycles for the
time systems the
the execution times
determined by sa
evolutionary testing et
temporal behavior is
temporal correctness of
the evolutionary algorithms
execution time determined
timing analyzer can
the timing tree
and evolutionary testing
case and best
execution times determined
shortest run time
the et approach
the shortest and
of evolutionary algorithms
test object with
executing the test
analysis and evolutionary
the temporal correctness
timing constraints of
the sa approach
and best case
the population and
the entire program
the multiplication of
the worst case
execution times for
fit into the
the best case
for the shortest
execution time that
of the wcet
specified timing constraints
was increased to
for the best
and data caches
the portability of
case execution times
provides the means
execution times the
timing analysis of
for each loop
confidence in the
the examination of
the means to
the execution time
with regard to
the method of
for testing the
an execution time
worst case and
by executing the
have to be
execution times in
for that reason
of the program
of the entire
of the population
number of input
data flow analysis
specified for the
for the worst
of the actual
to check if
worst case the
the cache configuration
obtain high fitness
calculated by sa
of support for
of different systems
time environments where
again the longest
processor cycles for
where soft real
the shortest run
the mutation probability
time environments may
it is potentially
of the extreme
the test objects
the previous generation
caching behavior of
counter of the
temporal system behavior
of evolutionary computation
actual running system
for instruction and
support for testing
the cache behavior
population size was
evolutionary algorithms is
new individuals are
and et in
for inner loops
on testing the
use of formal
constraints of real
of static cache
methods to verify
of existing test
run times possible
their fitness and
to small systems
and maximum run
timing constraints specified
within the control
important analytical method
test methods shows
more extreme execution
the program or
cache simulation and
afterwards the new
to verify timing
actual real time
time determined by
extreme run times
is a lack
in the timing
for the wcet
static analysis sa
the absolute maximum
the instruction categorizations
associativity levels but
bottom up within
verify timing constraints
individuals are selected
after 300 generations
cycles results if
the defense electronics
execution times obtain
both matrices are
lack of support
development of real
of interrupt driven
that was determined
test data are
the calling structure
method for assuring
to schedulability analysis
all conflicts fit
