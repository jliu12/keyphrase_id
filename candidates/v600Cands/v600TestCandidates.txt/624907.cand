zeroin
decisions
maintenance
specialization
delocalized
reuse
interleaving
048
068
tol1
encapsulation
086
program
documentation
programmer
043
henshaw
049
software
xm
statements
078
buss
decision
basili
grade
fb
records
erich
037
confront
044
064
printout
077
zannier
rugaber
092
interdependencies
abs
sigsoft
fc
facilitated
parameterize
examination
spencer
053
carmen
mnemonic
028
031
abstraction
engineering
specifications
reverse
designer
fa
pieces
maurer
mills
012
flow
stack
understand
architectural
serve
documenting
pushdown
085
toronto
loop
centre
interrelated
plans
reflects
1993
ontario
rationale
comprehension
generalization
languages
decomposed
diagnostic
fragments
thought
segments
notes
collaborative
reconstruct
050
programmers
understanding
lines
save
intent
interpolation
ada
logarithms
abstractions
constructs
activities
manipulated
library
effort
recompute
likewise
prolog
students
ip
developers
developer
hiding
altered
082
cesar
kamalakar
interviews
soloway
accidently
017
ornburn
kenny
blackburn
079
fpd
unwary
hodfa
leblanc
jahnke
prado
webster
balzer
troster
homogenizing
shull
renovationan
knowledgable
marovac
lanubile
verhoef
klint
029
feather
nebulous
tilley
093
concerted
gallimore
059
intrude
karlapalem
hausi
sampaio
chiasson
1118
dak
storey
alternatives
desire
year
express
compensate
frank
invalid
adjustment
fortran
debugging
functionality
computations
responsible
decomposing
structuring
mountains
081
undocumented
herrera
intertwine
022
057
couched
engenders
lengthening
julio
653
leite
recon
analyzable
cataloging
filippo
biggerstaff
reintroduced
variously
forrest
016
s2
interleaved
code
stages
easier
canada
the program
design decisions
design information
of design
and reuse
reverse engineering
a program
design decision
software engineering
fa fb
software maintenance
this practice
decision to
maintenance and
control flow
on lines
delocalized plans
program indicates
fb and
erich buss
in zeroin
lines 048
john henshaw
the programmer
programming languages
the decision
to understand
encapsulation is
library function
program is
programming language
into pieces
and fc
and specialization
programmer must
examination of
sigsoft software
notes v
engineering notes
on collaborative
program development
advanced studies
acm sigsoft
the variables
generalization and
for design
collaborative research
the design
to express
an if
software reuse
line 068
043 if
and mills
077 078
pushdown stack
documentation to
is building
transformation approaches
maintenance programmer
lines 031
and xm
048 and
representation must
decisions have
length array
design recovery
one construct
confront the
and 049
design ideas
test made
carmen zannier
interleaving by
maurer a
write statements
restricted one
spencer rugaber
invalid records
tol1 go
if abs
frank maurer
conditional adjustment
semantic problems
interrelated decisions
buss john
practice can
designing documentation
reuse activities
031 037
for delocalized
each refinement
of zeroin
debugging printout
068 are
numeric grade
toronto ontario
in code
centre for
assignment statements
serve to
conference of
the centre
specifications are
to save
decomposed into
decisions are
these lines
representation is
of code
flow analysis
decision then
variables fa
designer is
and procedure
for maintenance
shorter and
version s2
structuring a
program understanding
computing logarithms
the counter
a representation
thought of
a description
decisions in
of software
for advanced
the component
the designer
save the
ontario canada
next state
breaking a
basili and
of specialization
the debugging
target machine
computations may
decisions can
programming constructs
languages provide
and interleaving
a variable
to reconstruct
studies on
either is
gets its
information hiding
survey and
to 70
and techniques
the alternative
decision is
the root
this program
the programming
implemented by
variable name
program variables
recognized the
the desire
often useful
its more
decisions that
s2 is
a specialization
early stages
easier to
the control
of as
and decomposition
encapsulation and
of generalization
value only
approaches and
an examination
decision in
program specification
reflects the
limited set
to parameterize
made during
some program
interpolation and
and relation
the architectural
and lines
modify a
representation for
effort required
several approaches
procedures and
recovery for
on software
counter is
interleaving of
in prolog
to recompute
the variable
of the program
of design decisions
maintenance and reuse
the decision to
the control flow
representation for design
of design information
fb and fc
program indicates that
fa fb and
for design information
the program indicates
generalization and specialization
an if then
the programmer must
design decisions in
easier to understand
of a program
software engineering notes
engineering notes v
sigsoft software engineering
acm sigsoft software
a program is
studies on collaborative
advanced studies on
centre for advanced
on collaborative research
for advanced studies
of the centre
of the variables
examination of the
the centre for
to save the
toronto ontario canada
the programming language
conference of the
compensate for delocalized
documentation to compensate
encapsulation and interleaving
save the result
the designer is
some program transformation
lines 048 and
reverse engineering and
trying to understand
design decisions can
value only from
specifications are often
designing documentation to
survey and classification
of line 068
decision to use
and modify a
fixed length array
design information to
in program understanding
frank maurer a
gets its value
function and relation
then a program
the debugging printout
the library function
design information must
representation must be
classification of some
this practice can
function that when
buss john henshaw
example of generalization
tests on lines
transformation approaches and
categories of design
of value to
composition and decomposition
048 and 049
understand the program
framework for program
a program specification
approaches and techniques
and reuse activities
that when given
for program development
and reuse the
design recovery for
for delocalized plans
erich buss john
variables fa fb
recovery for maintenance
basili and mills
data and procedure
of some program
input and which
tol1 go to
lines 031 037
program transformation approaches
go to 70
test made on
of software engineering
a description of
implemented by a
thought of as
have a cost
harder to understand
the alternative to
the variables fa
made on line
the tests on
is the decision
these lines are
decisions can be
version s2 is
makes the resulting
a design decision
for maintenance and
control flow of
its value only
counter is used
and q on
the program the
of the design
the program and
variables a b
the variables a
a survey and
program is shown
when given a
responsible for computing
software maintenance and
a program from
during the design
is often useful
in this program
by a fixed
is a specialization
a cost in
side of line
can be thought
the early stages
the counter is
and classification of
a fixed length
is a design
early stages of
the program is
effort required to
the design process
a limited set
an examination of
decomposed into two
a representation for
limited set of
by a more
if then else
be thought of
number of records
other parts of
flow of the
be seen to
indicates that it
is an example
the programmer can
p and q
to understand and
the problem domain
data types and
it is easier
used during the
a more general
another example of
to express a
structure of the
a framework for
of a more
values of the
the next state
proceedings of the
to reconstruct the
program can be
that have been
of the software
is easier to
to compensate for
be detected by
parts of the
is decomposed into
software engineering p
description of a
the distinction between
can be detected
is controlled by
the program in
of as a
architecture of the
to make the
as a whole
be described by
example it is
design of a
software engineering v
a mechanism for
