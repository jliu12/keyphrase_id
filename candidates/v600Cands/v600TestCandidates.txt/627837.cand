analogical
reuse
specifications
matching
doublelist
analogies
matches
dbllist
analogy
stack
specification
subproblems
spec
match
query
reusable
expr
similarity
ospl
software
modifies
old
hierarchy
commutative
matchable
cg
expressions
cbr
sort
branch
modification
retrieved
tiered
reqcoll
armp
arguments
equivalence
library
faceted
container
reasoning
reusing
phi
program
schemas
retrieval
distance
candidate
predicate
topelement
addattail
telos
caret
heuristic
connectives
fi
postconditions
lists
operators
ff
pred
push
symbols
matchability
conceptual
theta
clause
reusability
ensures
formal
dershowitz
heuristics
amenable
graphical
similarities
descriptions
cgs
attribution
od
subproblem
projects
universally
associations
postcondition
transformational
permuted
sorted
automated
gg
analogous
sorts
incorporated
minflevel
skolemized
fopl
maiden
trashed
sutcliffe
fms
lassie
conflict
quantified
component
investigations
destructor
carol
widgets
tailorable
scoring
classification
oe
destroy
synthesis
predicates
modifying
retrieving
facilitate
matched
thesaurus
unmatched
atc
cas
distances
relationships
grained
prolog
hierarchies
tail
overviews
precondition
arcs
determination
schema
subsort
pairings
rose
isa
programmer
retrieve
templates
cardinality
frames
development
facilitates
head
facet
customize
attribute
identifier
subsumption
displays
conflicts
pursued
supplied
synthesize
bijective
queue
commutativity
entity
sigma
designs
emphasized
documentation
abstractions
target
logic
t1
effort
browsing
inherit
ancestor
classify
artifacts
return
developer
division
sought
keyword
paradigm
operator
semantic
old_program
old_spec
newelement
bhansali
addathead
algorithsm
didactic
guifa
ail
domainsort
derivational
singlelist
abstractusing
query_spec
xiaodong
query_program
jurisica
spanoudakis
detachattail
matching process
analogical matching
analogical matches
the analogical
matching two
query specification
software reuse
software components
branch subproblems
an analogical
of analogical
the matching
query spec
old program
algorithm match
formal specifications
two terms
sort hierarchy
analogical match
match expr
old spec
two expressions
match term
the query
or branch
based heuristic
distance between
matching algorithm
equivalence class
reusable software
the sort
analogical reasoning
modification process
partial matches
program modification
existing components
the distance
the specification
on analogy
return match
modifies dbllist
method doublelist
case matching
of reusable
order sorted
subproblems are
an existing
specification of
the specifications
analogies between
query specifications
matches two
components that
of software
matches between
specifications the
and query
query component
matches theta
tiered hierarchy
stack ensures
old cases
dbllist ensures
input expressions
between two
of matches
similarity between
an analogy
and branch
two input
the analogies
two tiered
query program
the reuse
the modification
reusable components
components based
the existing
software component
of arguments
specifications of
candidate specifications
reuse system
of analogy
component specification
analogy based
ff 7
reuse framework
dbllist element
existing component
modifies stack
existing specification
argument order
automated reasoning
matching algorithms
domain specific
for matching
of candidate
process generates
match is
for reuse
of specifications
hierarchy of
spec and
input terms
commutative operators
term case
method specification
case based
the software
the method
in algorithm
two operators
similarity based
case 6
component the
formal methods
same equivalence
reuse based
existing program
of graphical
t 2
specification and
od end
specifications is
the matches
begin while
two lists
specification for
based reasoning
reasoning systems
design schemas
top stack
ensures top
requires clause
design family
determine software
program synthesis
projects that
sorted predicate
analogical relationships
identical associations
program old
given component
equivalence based
matches phi
doublelist modifies
match oe
are matchable
e matching
design library
two specifications
7 gg
name identifier
on analogies
candidate components
new subproblems
match else
ensures method
specification level
stack modifies
of doublelist
lists case
predicate connectives
implementation old
existing set
implementation query
method destroy
the similarity
while s
formally specified
square root
domain knowledge
a software
e do
of domain
of similarity
reuse in
operators with
predicate logic
of lists
the or
of partial
between existing
specifications can
conceptual distance
domain analysis
found between
computing similarity
modifying an
specification query
scoring function
sorted specifications
knowledge base
incorporated into
t 1
a query
amenable to
specifications for
two methods
the query specification
analogical matching process
the matching process
the analogical matching
of analogical matches
set of analogical
or branch subproblems
distance between two
an analogical matching
the sort hierarchy
algorithm match term
matching two terms
analogical matches between
of partial matches
based on analogy
case matching two
the analogical matches
in algorithm match
set of matches
branch subproblems are
the distance between
set of partial
for matching two
between two methods
tiered hierarchy of
and query spec
subproblems are generated
an analogical match
matching process generates
algorithm match expr
modifies dbllist ensures
two tiered hierarchy
algorithm for matching
reusable software components
a set of
of reusable software
in the sort
and query specifications
the matching algorithm
components based on
the specification of
let the distance
for software reuse
of software components
components to satisfy
matching two expressions
query specification and
2 be denoted
of matches theta
and branch subproblems
a query specification
the existing components
s e do
while s e
modifies stack ensures
analogical match is
begin while s
specification and the
is used to
between the query
reuse based on
between two components
the modification process
case based reasoning
call this approach
same equivalence class
software components the
components that are
denoted by d
two input expressions
determine software reuse
numbers of arguments
this component the
based on analogies
domain specific information
stack ensures top
the existing specification
method doublelist modifies
order sorted predicate
to determine software
the formal specifications
do od end
old spec and
specifications is used
into the matching
existing set of
program old program
matches two operators
between two expressions
sorted predicate logic
e do od
based heuristic is
a query component
ff 7 gg
an existing set
of candidate components
match else return
ensures top stack
the two tiered
specification query spec
e ff fi
existing and query
spec and query
software reuse a
doublelist modifies dbllist
a given component
the reuse framework
analogical relationships between
match term case
implementation query program
an analogy based
the or branch
d e ff
pair of lists
the predicate connectives
similarity based techniques
a match can
old program to
3 in algorithm
in the modification
stack modifies stack
on the analogical
relationships between the
be denoted by
used to determine
formal specifications of
program that satisfies
match can be
the current problem
an existing program
case 3 in
between the specifications
order sorted specifications
between two terms
components that have
method of a
software reuse based
the matching algorithms
of two input
to software reuse
specifications can be
formal methods to
set of candidate
in order to
incorporated into the
based on the
of the software
the specifications of
satisfy the query
process generates a
generates a set
of software reuse
to satisfy the
the similarity between
we call this
based on similarity
given in figure
to the query
and t 2
1 and t
of similarity between
used to guide
the algorithm for
of the matching
t 1 and
similarity between the
a means for
then the distance
order to increase
specification of the
that gives the
a pair of
applied to the
specification of a
in terms of
matches between old
empty lists case
projects that use
query specification are
the design library
else return case
proposed an analogy
that satisfies query
are generated whenever
head dbllist element
old cases to
generated whenever the
determination of reusable
term g f
sought between the
grained determination of
structure based heuristic
match input two
software reuse the
applying formal methods
a software library
program modification model
be universally quantified
match oe is
question when are
