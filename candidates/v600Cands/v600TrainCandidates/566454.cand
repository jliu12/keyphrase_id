queue
cam
cpi
compacting
banked
latch
savings
mcf
ram
oldest
gating
instructions
vpr
degradation
bzip
compaction
banks
dispatched
operand
bank
issue
clock
entries
instruction
gated
parser
ready
power4
rob
vortex
entry
power
baseline
dissipation
banking
conflict
gcc
benchmarks
bank1
youngest
sorting
subarrays
holes
queues
dispatch
tail
verification
subarray
ids
bits
redesign
logic
spec2000
multiplexer
operands
older
cycle
bitline
precharging
bit
designs
adaptive
21264
pointer
selection
latches
priority
peripheral
bitlines
adaptation
effort
disabled
111
capacitance
redesigning
steered
age
reorder
window
ored
discharging
id
alpha
windows
incurred
flash
simplescalar
remedied
circuit
superscalar
clocked
afforded
microprocessor
albeit
consideration
active
newly
arbitration
arguably
128
tradeoffs
tag
filled
register
decremented
chunks
caches
percentage
average10305070percentage
matchline
1bankact
vivekanandham
scannable
2banks
average13579
franziska
10ent
4banks
islped
roesner
power4tm
pales
average26cpi
precharge
bit00sorting
yingmin
rival
8ent
9811929
average51525
r19
9ent
dharmesh
11ent
10022
bank3
amrutur
average5cpi
clkgating
sankaranarayanan
partold
taglines
average50active
r16
afrl
average2610
predecoder
3bankact
2bankact
average10305070power
202060power
50bankact
bank2
8ghz
9701915
4bankact
buffer
afford
bottom
circuitry
energy
hole
consumer
source
considerable
filling
unavailable
neither
overhead
team
demonstrable
r32
sav
0182
f29601
recirculate
r17
r2
registers
alternatives
largely
wordlines
sethumadhavan
simha
amps
underutilization
addr1
r1
mechanism
match
mircea
parikh
impact
curs
grain
head
karthik
bharadwaj
hungry
selec
issue queue
power savings
cam ram
ram based
cpi degradation
non compacting
based issue
latch based
conflict queue
clock gating
oldest first
mcf parser
the cam
queue power
banked issue
source operand
bzip gcc
gcc mcf
parser vortex
first selection
vortex vpr
the queue
non compaction
sorting bit
the issue
clock gated
compacting latch
a cam
queue design
the cpi
per bank
cpi performance
dispatched instructions
selection logic
the baseline
and verification
power dissipation
all ready
the conflict
way banked
on dispatch
operand ids
cam structure
adaptive issue
entries per
ready instructions
verification effort
the oldest
an oldest
32 entry
of entries
dynamic adaptation
queue entries
issue queues
cycle window
cycle windows
neither source
ram structure
compacting issue
oldest to
compacting queue
to youngest
newly dispatched
entry conflict
degradation benchmarks
older instructions
queue the
sequence number
a latch
savings and
the power
ready not
10 entries
queue for
8 way
sequence numbers
the banked
entry queue
position based
selection scheme
the adaptive
savings of
based selection
source operands
4 entry
active for
relative power
an instruction
tail pointer
with clock
based designs
issue priority
queue approach
rob entry
spec2000 integer
on cpi
to bank1
for mcf
degradation incurred
compaction operation
integer queue
partial oldest
entry 111
operand available
selection mechanism
the ram
two source
based design
queue is
not ready
bits are
the rob
gating the
greater power
and clock
queue that
of queue
redesign and
holes created
to entry
high capacitance
power overhead
savings with
a cpi
adaptive approach
ready ready
oldest instruction
queue as
and power
have neither
performance degradation
the sorting
instructions are
instruction is
savings achieved
relative to
the tail
queue and
savings is
various numbers
is dispatched
of issue
the latch
design and
alpha 21264
each entry
queue with
degradation with
entries in
parser and
lower power
reorder buffer
a sorting
bit of
power optimization
significant bits
instructions have
bank corresponding
benchmarks bzip
larger cycle
significant redesign
of banking
compacting cam
queue cpi
age ordering
baseline latch
flash set
ready none
are flash
precharging and
none ready
youngest program
location 111
window values
logic selection
upper entries
sorting bits
id bits
each cam
one subarray
register id
dispatched into
arguably more
banked approach
single cam
state preserving
different cycle
of cam
banking can
banked cam
ready logic
approach yet
and vpr
disabled with
real power4
3 cpi
neither operand
different issue
compacting design
design bzip
the issue queue
cam ram based
based issue queue
ram based issue
gcc mcf parser
mcf parser vortex
parser vortex vpr
bzip gcc mcf
oldest first selection
issue queue power
latch based issue
the conflict queue
banked issue queue
issue queue design
compacting latch based
the cam ram
the cpi degradation
entries per bank
a cam ram
non compacting latch
a non compacting
and verification effort
the power savings
source operand ids
adaptive issue queue
first selection scheme
power savings and
the non compacting
all ready instructions
design and verification
oldest to youngest
the sorting bit
position based selection
a latch based
with clock gating
non compacting issue
10 entries per
and power savings
available on dispatch
newly dispatched instructions
neither source operand
non compacting queue
4 entry conflict
entry conflict queue
and clock gating
of the issue
ready not ready
issue queue for
number of entries
power savings of
in the issue
with non compaction
impact on cpi
the selection logic
redesign and verification
an oldest first
savings and performance
a sorting bit
power savings with
on cpi performance
of queue entries
gating the issue
partial oldest first
compacting issue queue
the oldest first
as a cam
clock gating the
way banked issue
power savings achieved
cam ram structure
ram based design
queue power optimization
in the queue
with a 4
of the queue
the adaptive approach
of issue queue
issue queue with
be active for
a 4 entry
issue queue that
issue queue the
the source operand
the oldest instruction
power optimization techniques
optimization techniques that
removed from consideration
the two source
relative power of
savings of the
the alpha 21264
top of figure
various numbers of
most significant bits
relative to the
to the baseline
when an instruction
relative to baseline
cpi degradation with
parser and vpr
smaller cycle windows
well as design
different cycle window
simple position based
the spec2000 integer
sorting bit of
youngest program order
benchmarks power savings
the real power4
for our 8
the ready logic
the integer queue
benchmarks bzip gcc
ready none ready
instructions will have
in location 111
queue for reduced
dispatched into the
verification effort as
issue queue 3
banked issue queues
two source operand
the baseline latch
cpi degradation incurred
steered to the
within the queue
higher power savings
start point all
issue queue organization
an oldest to
cycle window values
instructions have neither
latch based designs
all sorting bits
to entry 111
degradation with different
a cycle window
of an oldest
precharging and discharging
ready logic selection
to the cam
power savings is
issue queue approach
cpi performance the
in to achieve
shows the cpi
or is 1
numbers of entries
latch based design
for different cycle
issue queue cam
queue non compacting
have neither source
111 in our
not ready not
issue queue relative
using the conflict
compacting queue the
the bank corresponding
1 all ready
reduced power at
adaptive approach yet
instruction is dispatched
entries are shifted
range of issue
the banked approach
approaches that require
non compaction and
4 banked issue
bank corresponding to
is 1 all
selection logic and
conflict queue and
verification effort that
even greater power
selection mechanism like
4 way banked
are flash set
instruction is steered
a cpi degradation
in the cam
non compacting cam
a simple position
savings is achieved
source operand available
the circuit level
queue power savings
based selection mechanism
is steered to
queue cpi degradation
of banking and
spec2000 integer benchmarks
of all ready
for latch based
implementation and verification
the cam structure
techniques that vary
power at high
conflict queue for
based no compaction
