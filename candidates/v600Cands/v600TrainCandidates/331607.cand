crow
pram
prams
dcfl
crew
pushdown
stack
ppp
ss
dpda
stacks
pppp
ffli
braunm
height
owner
pp
recognition
id
dauxpda
uhl
ppppp
accumulator
unblocked
logdcfl
ids
log
surface
rytter
hu
instruction
comment
g6
cook
ppppppp
processor
tape
deterministic
g4
delta
g1
von
popping
ruzzo
pppppp
wyllie
ownership
halt
processors
dymond
suffix
fortune
reif
procedures
treewalk
crcw
cfl
auxiliary
dcfls
snir
klein
polynomial
sudborough
blocked
si
returns
suffixes
exclusive
computable
r3
languages
dauxpdas
contents
correctness
return
fork
writes
reducible
fich
mehlhorn
summary
recognized
verbeek
machines
read
r1
owned
pushing
string
recognizable
numbering
rams
symbol
store
reference
references
simulation
definitional
sibling
nonuniform
pdas
nisan
concurrent
violation
activated
configurations
automaton
strings
memory
ppms
dpdas
ppppppppppp
ppppppppp
automata
configuration
symbols
var
indirect
calls
location
reject
pointer
coherence
sequential
g2
activation
cfls
auxpda
harrison
parent
rossmanith
ffflg
harju
topmost
behaved
italic
ragde
counter
succinct
depth
access
recursive
logarithmic
segments
generalizations
child
restrictions
recursion
establishing
unambiguous
g5
empties
halts
active
wrote
g3
pda
simultaneous
unbounded
ram
ic
pop
cell
lange
lam
earliest
doubling
vishkin
ppm
numbered
ill
stockmeyer
past
ac
accepts
polynomially
characterizations
cole
machinery
array
owners
siblings
pointers
inductive
obeying
realizable
inductively
simulate
inclusive
initially
cache
hv
accepted
write
unify
lemma
variants
concatenation
physically
arrange
crow pram
crow prams
ss k
dcfl recognition
low k
prams and
o log
and dcfl
global memory
log n
crew pram
low delta
pp ppp
the crow
a crow
delta k
the dpda
braunm uhl
summary k
von braunm
hu ffli
i low
in ss
ppp pp
deterministic context
pram algorithm
time o
k steps
k reference
is unblocked
uhl et
k 1
log space
delta lemma
context free
pp pp
2 k
pppp pp
deterministic auxiliary
surface configuration
k references
random access
the stacks
stack height
id i
r k
free languages
the owner
ppp ppp
of stacks
owner write
owner function
surface configurations
a crew
processor p
access machines
memory location
pram model
parallel random
crew prams
instruction counter
auxiliary pushdown
2 ss
the dcfl
g1 g6
comment returns
hu si
accumulator s
valid k
pram time
ppppp pp
stack l
parallel pointer
an id
pram algorithms
the crew
space reducible
our procedures
local memory
the stack
log 2
suffix of
pram in
state t
time t
unblocked then
cfl s
wyllie 15
of crow
1 hu
returns surface
stack j
deterministic cfl
pushdown symbol
ffl id
languages log
ppp pppp
and wyllie
n space
the pushdown
klein and
of languages
and reif
exclusive write
returns the
for dcfl
steps past
fortune and
of von
the id
of stack
polynomial time
in time
at time
of delta
ids with
location i
l k
the low
work tape
id of
owned global
class logdcfl
ffl ids
set recognized
u surface
by crow
restrictions r1
cook mehlhorn
pram s
ppp ppppp
reif 20
owner concept
generalizations g1
pram implementation
pushdown height
pp pppp
height stack
read owner
logdcfl of
a dauxpda
small space
of deterministic
concurrent read
stack in
correctness property
r1 r3
write into
and low
s n
empty stack
all surface
parallel time
n time
least 2
empty stacks
low point
activation tree
processor numbering
from ss
its accumulator
height o
k returns
initially active
p at
free language
symbols of
a stack
o 1
logarithmic space
of processors
0 reference
computation starting
store l
and pushdown
stacks in
stack i
reducible to
n on
the surface
the pram
running time
recognition problem
simulation of
surface and
recognition of
the recognition
k d
i 1
level k
of summary
pushdown store
al 38
k u
then return
i 2
the input
ill behaved
suffixes of
the power
crow prams and
prams and dcfl
and dcfl recognition
o log n
2 k steps
in ss k
time o log
a crow pram
the crow pram
von braunm uhl
low delta lemma
delta k 1
deterministic context free
i low k
uhl et al
the low delta
global memory location
braunm uhl et
low k 1
context free languages
of the crow
of the dpda
of k references
least 2 k
log 2 n
random access machines
and low k
crew pram algorithm
parallel random access
o log 2
returns the surface
on a crow
klein and reif
2 ss k
j is unblocked
the owner function
comment returns the
a crew pram
log space reducible
of delta k
space reducible to
in time o
at time t
processor p at
of von braunm
k steps past
pp ppp ppp
ss k 1
deterministic auxiliary pushdown
of languages log
valid k reference
is in ss
all surface configurations
for dcfl recognition
and wyllie 15
languages log space
fortune and wyllie
deterministic cfl s
1 hu ffli
surface and reference
algorithm for dcfl
k 1 hu
definition of delta
log n space
log n time
the crew pram
memory location i
pp ppp pp
to write into
the power of
of the pram
global memory and
the instruction counter
pp pp ppp
a stack in
pppp pp pp
any set recognized
crow pram in
logdcfl of languages
id i 2
restrictions r1 r3
low k returns
of crow prams
a valid k
set of stacks
from ss k
suffix of stack
read owner write
an id i
crow pram model
and reif 20
class logdcfl of
is unblocked then
owned global memory
crow pram algorithm
the owner concept
at least 2
of processor p
p at time
auxiliary pushdown automaton
1 and low
reducible to deterministic
for all surface
ppp pp ppp
to deterministic context
of global memory
pram in time
r k d
state t p
crew pram model
recognition problem for
a suffix of
the surface and
an o log
number of processors
time log n
et al 38
random access to
the recognition problem
recognized by a
and l k
recursive calls per
crew pram algorithms
computation from i
stack j 2
delta k operating
the stacks are
free language recognition
a logarithmic space
crow pram by
with owned global
crow pram implementation
0 is unblocked
summary 0 u
the ownership constraint
inductive definition of
and time o
crow pram time
braunm uhl cook
pppp pp ppp
contents of global
the class logdcfl
the dcfl recognition
recognition of deterministic
of minimal height
and part b
logarithmic space deterministic
ppp pp pp
time t begin
and reference corresponding
mehlhorn and verbeek
processor activation tree
by von braunm
of summary k
by a crow
ppp ppp pppp
global t i
ss k d
surface configuration and
by crow prams
s 2 ss
processor numbering scheme
definition of ss
pram time log
ill behaved programs
summary k u
on a dauxpda
k operating on
of the stacks
reference corresponding to
that crow prams
i low delta
return accumulator s
generalizations g1 g6
concurrent read owner
k steps in
surface configurations u
on ffl ids
of ss k
the processor activation
and ruzzo 21
the surface configuration
low point in
uhl cook mehlhorn
location i at
space deterministic auxiliary
the i low
lam and ruzzo
j 2 ss
memory and deterministic
of deterministic cfl
cook mehlhorn and
in polynomial time
context free language
is a suffix
the contents of
sequence of k
for k 0
k 1 i
class of languages
