redundancies
implication
circuit
redundancy
implications
net
nets
circuits
omega
combinational
label
replacement
removal
latches
labelled
learning
stuck
unobservability
sequential
labels
gate
compatible
labelling
1i
0i
overwritten
overwriting
inverters
latch
unjustified
recursive
gates
redundant
hn
learnt
optimisation
unobservable
lr
propagate
offset
delay
implying
a2
c6
ha
bdd
vertex
cares
learn
delayed
propagating
s35952
untestability
safe
optimised
compatibility
script
constants
s953
red
hm
berkeley
reset
observability
o1
indicators
propagation
contradicted
a1
fanout
rules
mapped
transduction
implied
area
n2
synchronizing
split
inputs
rugged
inconsistent
n1
notion
2v
iyer
logic
cpu
inferred
invoking
permissible
sibling
backward
remove
po
removed
identification
austin
symbolic
existed
6317
odc
7035
miron
ruggedand
9380
mcnc91
hn8
ruggedwere
unobservability0a
unobservabilities
3775
s15850
isola
9245
dundancy
initialisability
belled
31943
33055
29718
infer
wires
primary
assumptions
o2
sis
outgoing
10000
compositional
identifying
na
child
vigyan
entrena
1ig
ploiting
94704
pixley
1139
1129
redundan
died
1763
f0
parent
optimi
dancy
combinationally
abramovici
rightly
1464
compat
don
claim
powers
c2c
optimising
qadeer
s38417
shaz
labellings
ve
rule
redun
cordic
ible
incorrect
c1
vergence
sation
unvisited
94720
aziz
s5378
successively
safer
cadence
brayton
ondly
valued
labeling
cycle
benchmark
faults
300mhz
justifications
falsify
fanins
returned
optimisations
887
forall
733
compositionality
adnan
graph
edges
cies
formalise
c5
implication graph
recursive learning
redundancy removal
the circuit
circuit graph
an implication
sequential redundancies
net n
delay replacement
7 1i
n i
stuck at
area reduction
a net
constant v
7 0i
current implication
a omega
assumption a
an assumption
labelled with
the redundancies
combinational redundancies
circuit obtained
is labelled
sequential circuits
of nets
graph for
time offset
redundancies we
safe replacement
learn implications
hn 7
of implications
case split
omega at
and gate
input gates
of labels
omega omega
the implication
original circuit
the net
for implying
consistent assumption
propagate implications
v redundant
implications from
the implications
a circuit
split on
at v
label n
new circuit
1 redundant
nets in
circuit c
a label
large circuits
with recursive
circuit the
is unobservable
power up
an and
replacement of
redundancy identification
compatibility of
removal algorithm
is overwritten
global reset
mapped area
single net
from ha
sequential optimisation
removal without
delayed safe
other nets
delayed replacement
redundancies from
setting net
gate implies
unobservability indicators
sequential redundancy
ha 7
net n2
with unobservability
symbolic time
redundancy remove
combinational redundancy
redundancies without
k delayed
hm 7
cycle stuck
implication propagation
the redundancy
for sequential
the nets
our algorithm
for combinational
labelling procedure
redundancies by
inferred at
implied at
net m
area after
removal with
sequential optimization
global symbolic
implication graphs
propagating implications
in area
a current
inverters and
of redundancies
some net
c delay
with 0
net is
notion of
and n
the compatibility
new implication
n2 is
with omega
label is
replacement for
overwritten with
all labels
a constant
circuit in
t cares
constants with
net we
circuits for
0 at
a latch
redundant for
rules for
i gamma1
is stuck
net of
of latches
redundant we
the circuits
the notion
the label
by setting
logic optimization
cpu time
the replacement
the assumption
state space
lemma 2
is compatible
from assumption
0i implies
across latches
one label
identify redundancies
circuits through
untestability in
unobservability conditions
optimisation it
assumption hn
rules c1
learning implications
implications across
15 time
labels returned
2v i
redundancies identified
c lr
compatible redundancies
fanout net
transduction method
do redundancy
lr a1
every implication
current labels
and untestability
implications over
implying constants
similar rules
the transduction
faults reported
i redundant
identifying sequential
learnt implications
rule c6
it powers
functions don
compatible implications
implications learnt
net value
red c
latch redundancy
propagation scheme
at nets
up delay
red lr
an implication graph
implication graph for
stuck at v
the circuit graph
circuit obtained by
the circuit obtained
a omega at
set of labels
in the circuit
the implication graph
with recursive learning
of the circuit
an and gate
n i gamma1
the original circuit
rules for implying
at v redundant
a current implication
an assumption a
delay replacement for
a circuit graph
a consistent assumption
and n i
redundancy removal algorithm
the circuit c
the new circuit
reduction in area
is labelled with
omega omega omega
use the notion
an assumption on
assumption a is
be a consistent
combinational redundancy removal
the circuit we
constants with unobservability
a single net
sequential redundancies without
cycle stuck at
if a label
from assumption a
net n with
on other nets
mapped area after
with constant v
delayed safe replacement
redundancy removal with
safe replacement of
hn 7 0i
net n2 is
at 1 redundant
global symbolic time
recursive learning we
the redundancy identification
removal with recursive
from ha 7
v redundant we
redundancy removal without
the compatibility of
replacement of the
n i 1
of n i
is stuck at
graph for n
then the circuit
from an assumption
at a net
be inferred at
case split on
obtained by setting
c with 0
2 input gates
two input gates
number of latches
the notion of
in which n
net n is
by the algorithm
in the implication
consider the circuit
n i are
for large circuits
circuit is a
a net n
don t cares
labelled with a
is a current
a constant is
of an and
stuck at 1
the circuit in
for the circuit
reported by the
is a child
let a be
current set of
from the assumption
the environment of
the set of
the function redundancy
delay safe replacement
power up delay
combinational circuits and
first time or
1 and offset
assumption then the
most one label
with a omega
child of n
the transduction method
assumption hn 7
1 redundant however
implication graph from
was labelled with
sibling of n
contradicted in the
illustrates the rules
circuit graph is
i redundant for
sequential redundancies by
for some net
from synchronous sequential
labels returned by
constant v is
hn 7 1i
the net value
a gate implies
we split on
a net we
exists an implication
c delay replacement
is unjustified during
gate implies a
to propagate implications
net with at
labels then for
with unobservability indicators
0i implies that
for all labels
a net can
fanout net of
logic networks based
case split is
the time offset
omega at every
redundant faults reported
consistent assumption if
with synchronizing sequences
circuit by propagating
learn implications g
permissible functions don
n is stuck
input gates note
ha 7 1i
a delay replacement
the path n
value the net
design of logic
p of nets
7 0i implies
guaranteed on the
sequential redundancy removal
us to propagate
all current labels
some net m
constant is contradicted
notion of replacement
our labelling procedure
for redundancy removal
implications g hn
delayed replacement which
assumption a on
do redundancy removal
k cycle stuck
v 2v i
the constant v
of recursive learning
the assumption hn
for learning implications
current implication and
recursive learning name
net of a
without recursive learning
inverters and 2
identifying sequential redundancies
after redundancy removal
current implication or
g hn 7
s learn implications
functions don t
latch redundancy removal
implication propagation scheme
a n 7
the nets in
transduction method design
the simple implication
cares in multi
algorithm is compatible
implications across latches
implication graph existed
