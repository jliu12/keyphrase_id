alts
lts
sa
alarm
obs
trmcs
cham
architect
specication
router
user2
user1
checkerr
testing
path2
architectural
ow
alarmrs
acksr
msg
frno
ackru2
check1
ackru1
receiveack1
check2
paths
criterion
reaction
dierent
molecules
coverage
specications
cots
mccabe
labels
checkok
alarmur
receiveack2
alarmur1
tester
subpaths
plans
forty
dynamics
inverardi
sas
arc
integration
rened
specic
transition
functional
fulll
abstractions
server
specically
paola
validation
altss
ackru
muccini
alarmur2
sendalarm1
acksr1
message
timer
plan
renement
labelled
reception
chemical
rules
bertolino
sequencing
sends
deriving
software
concurrent
antonia
descriptions
abstraction
behaviors
executions
rening
uncovering
carver
conform
nal
equivalence
relevant
interactions
denition
speci
tai
dening
mismatch
ack
formalism
validating
adl
acknowledgement
modied
maine
alarms
semantic
automaton
concrete
159
architecture
uml
conformance
bisimulation
sending
concretely
aimed
indispensable
check
arrows
henry
dene
informal
connecting
informative
her
conguration
arcs
eort
acksr2
concret
eecting
formities
ltss
nofunc
path4
teleservice
jiangfan
fra2
funtional
pray
path5
thne
continuosly
henkler
cioffi
unrelevant
explorative
elaborat
parco
scientico
criteri
environmen
varr
nosent
intensied
path3
alarmrs2
hyphotetical
tecnologico
abruzzo
sendalarm2
alarmrs1
jtmpl
saladin
deliberately
dened
java
transformation
tests
abuse
m1
sent
messages
devoted
eld
forwarding
t17
reiko
t18
t13
specicity
originality
giese
terion
t19
myra
lingzi
ganghong
diaper
corradini
t14
heckel
baresi
attened
classes
meaningful
channels
abstract
signicant
graphical
the sa
software architect
obs function
the trmcs
alts paths
sa testing
the cham
the lts
the alts
testing criterion
alarm message
test classes
lts paths
alarm ow
an alarm
alts path
an sa
an lts
the software
reaction rules
obs t
test plans
check msg
an alts
sa based
sa description
the alarm
integration testing
software architecture
architectural description
sa dynamics
sa specication
complete lts
test plan
test class
our approach
lts we
cham description
mccabe s
ow obs
connecting elements
a cham
checkerr checkerr
selected sa
the tester
arc labels
lts and
a check
coverage criterion
transformation rules
sequencing constraints
labelled transition
the testing
level test
an obs
check ow
user2 o
msg sends
cham formalism
to alts
alarm messages
obs functions
sa from
user1 o
architectural mismatch
frno frno
checkok checkerr
cots integration
forty states
s 159
msg obs
o check1
sa lts
test executions
test specications
o check2
architectural descriptions
test specication
test cases
the chemical
the system
functional test
t 21
for sa
paola inverardi
a selected
based testing
time systems
description in
other t
a sa
chemical abstract
initial solution
an acknowledgement
high level
from router
the router
s 15
test execution
testing of
reception of
initial state
transformation rule
event sequences
of sequencing
case study
of software
architectural level
for testing
software engineering
executions that
the architectural
to test
state b
concrete test
acksr server
reaching s
i alarmur
specication based
one alts
lts which
alarmur1 i
equivalence assumptions
ackru1 router
architect could
o alarmur1
corresponding obs
of path2
between sa
carver and
architect by
i acksr
sa components
many concrete
testing real
abstraction step
cham specication
router obs
o alarmur2
i ackru2
tai s
trmcs case
running implementation
from architectural
thorough coverage
alarmur2 i
cham descriptions
trmcs is
each alts
of alts
architect with
check1 user1
alarmrs o
check message
ackru2 router
lts can
o ackru1
alarmur o
i alarmrs
receiveack1 receiveack2
path2 a
two alarm
interpretation domain
correct architectural
trmcs cham
receiveack2 receiveack1
lts to
o ackru2
states equivalent
m1 router
check2 user2
alarm msg
nal one
alts is
o acksr
syntax by
bertolino paola
lts of
henry muccini
level specication
router server
alts for
java prototype
alarmrs i
o alarmrs
lts path
the forty
uncovering architectural
lts subpaths
o ackru
ackru router
checkerr checkok
antonia bertolino
cham reaction
i ackru1
test criterion
and tai
acksr o
his her
a labelled
the software architect
sa testing criterion
of the trmcs
the alarm ow
of the sa
of the lts
an alarm message
an sa testing
ow obs function
the complete lts
the sa specication
alarm message from
testing criterion is
the sa dynamics
for the alarm
of the system
high level test
of an alarm
of software architecture
selected sa testing
of the alts
the sa description
of sequencing constraints
on the sa
sending of an
checkerr checkerr checkerr
the sa lts
of a cham
check msg sends
the cham formalism
sa based test
at the sa
use of sequencing
the cham description
the high level
the initial solution
real time systems
the initial state
the chemical abstract
any other t
sequencing constraints for
for integration testing
chemical abstract machine
testing of concurrent
a labelled transition
labelled transition system
the architectural level
at the architectural
to a selected
that the software
software architecture for
we give examples
test cases for
the sending of
the testing of
trmcs case study
o ackru router
task of deriving
further check msg
test executions that
states equivalent to
lts path that
an obs function
path2 a b
two alarm messages
an sa description
the lts and
patterns of behavior
testing real time
a check msg
list of alts
o ackru2 router
acksr o ackru
msg sends a
receiveack1 receiveack2 receiveack1
router i alarmrs
a correct architectural
and arc labels
for sa based
on architectural descriptions
i alarmur o
interactions between sa
o check1 user1
t i obs
an lts can
user1 o check1
architectural description and
cham reaction rules
approach to integration
of the forty
equivalent to state
o acksr server
o check2 user2
obs function is
check msg obs
and complete algorithm
of the cham
test class selection
the check ow
mismatch in component
software architect by
alarmrs o acksr
software architect could
obs t 21
integration testing based
level specication of
the trmcs is
carver and tai
sa description in
between sa components
syntax by which
first check msg
software architect with
software architect to
functional test classes
practical and complete
systems from logic
want to test
to an sa
architectural description of
i acksr o
to integration testing
correct architectural description
and tai s
to alts paths
i obs t
state b of
receives an ack
alarm ow obs
recall the cham
where to map
a test class
the sa from
lts paths that
a check message
derive an lts
i alarmrs o
cham description of
sends a further
high level specication
alarmrs i acksr
the selected sa
sa testing criteria
o alarmur2 i
test plans for
obs t figure
complete lts we
a selected sa
cases for real
time systems from
o alarmur1 i
many concrete test
renement of path2
uncovering architectural mismatch
check ow obs
an alarm msg
interpretation domain d
each alts path
for testing real
alts path we
frno frno frno
alarmur2 i ackru2
molecules can be
sent a check
mccabe s coverage
test classes are
other t i
issues an alarm
user2 o check2
mccabe s technique
from another user
the trmcs case
msg obs t
alarmur1 i ackru1
architectural mismatch in
checkerr checkok checkerr
o alarmrs i
sa based testing
s coverage criterion
antonia bertolino paola
the reaction rules
architecture for testing
corresponding obs function
a running implementation
based on architectural
o ackru1 router
one alts path
alarmur o alarmrs
on role of
reaction rules of
bertolino paola inverardi
lts can be
a further check
the single state
role of software
workshop on role
to state b
router to router
software testing at
software architecture in
