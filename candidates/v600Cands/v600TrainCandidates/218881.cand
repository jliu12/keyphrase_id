lpid
redistribution
lpids
maxhitratio
cyclic
holders
hits
holder
mapping
processor
block
hpf
cp
processors
gcd
logical
redistributed
hitratio
ching
redistributions
lemmata
dimension
array
hsien
remapped
map
p3
traditional
fortran
hsu
programmer
mcp
exchange
physical
owns
permutations
compiler
permutation
neighboring
memories
maps
mapped
italics
redistributing
mappings
place
yeh
achieves
ck
multicomputers
owned
relationships
supercomputing
minyi
dimensions
floats
sixteen
lemma
million
dimensional
bold
hit
permuting
row
arrays
physical13
trad
physical3
hypertasking
darel
chung
forty
permuted
pitfalls
grid
ecp
icp
sized
illustrates
mod
contention
sp
send
petitet
imparts
fig
pattern
contiguous
communication
vienna
kali
realignment
patterns
dino
1216
receive
places
reshaping
chyi
establishes
guo
target
distribution
sizes
exchanged
ids
1201
ibm
communicates
destination
numbered
machines
semantics
byte
configurations
executions
jz
manipulates
movement
wen
bai
indices
demonstrates
cartesian
dow
dongarra
opt
ratio
argonne
p0
spmd
matrix
subprogram
sheng
respective
neighbors
additionally
onto
scatter
superimposed
theta
optimized
wormhole
ren
paradigm
enhance
personalized
chu
antonie
01216200246811141822
theta12
physical32
ecpdata
privy
trad0000
randriamaro
desprez
vfe
compiler135713502466
maxhitratios
resizeable
redistributable
nodes141012145715141012145715
frddric
incorporated
flexibility
hypercubes
communicating
stride
established
initially
interprocessor
collective
arrangement
ic
perspective
jack
yang
message
mpi
specifies
kr
stichnoth
abstractrun
daming
redistribution1
wakatani
six
minimizing
execution
declarations
maintained
redis
peizong
sp1
espoused
gather
statements
1368
1329
cyclic c
data hits
lpid i
data redistribution
place holders
data elements
place holder
to cyclic
mapping technique
processor mapping
logical processor
of lpids
optimal mapping
traditional mapping
lpid 0
gcd z
mapping function
map to
the lpids
holder q
lpids to
data block
of data
block block
block to
from block
holders q
row dimension
and lpid
for redistribution
redistribution from
the mapping
z p
maps lpid
each lpid
logical to
c data
distribution pattern
to physical
data exchange
redistribution between
redistribution of
data array
d t
hits per
k lpids
lpids that
per lpid
distribution patterns
same place
o o
dimensional data
and cyclic
block size
to place
physical nodes
ching hsien
m dimensional
the traditional
physical processor
hsien hsu
from lpid
processor memories
achieves maxhitratio
b cp
data hit
data relationships
the block
distributed memory
array redistribution
initially distributed
d s
neighboring data
cyclic block
h r
data parallel
among processor
between block
places from
block cyclic
lpids are
since lpid
redistribution execution
lpids with
hits figure
maxhitratio is
respective block
maxhitratio for
bold italics
for lpid
of processors
the logical
redistribution in
block and
block sizes
the optimal
d b
holders are
elements data
logical processors
under block
dimensional redistribution
the data
global data
data mapping
one dimensional
data matrix
r s
are mapped
be remapped
p processors
cyclic mapping
q h
in hpf
that map
size in
lpid 2
permutations yield
lpid 1
following redistribution
z places
lpid to
lpids map
optimal technique
dimensional to
2 redistribution
z mod
permutation of
processor sets
integer z
processor configurations
the compiler
z be
supercomputing v
mapping of
data distribution
of supercomputing
the cyclic
the row
block under
physical node
exactly c
destination distribution
maps to
yeh ching
ching chung
z b
memory machines
c 0
data to
cyclic 2
redistribution ieee
to data
efficient data
hit ratio
fortran d
if gcd
redistribution we
the programmer
processors and
the journal
the technique
mapping in
b 0
exchanged among
redistribution is
an integer
compiler respectively
1 lpids
lpids and
redistribution redistribution
b sized
lpid j
boundary processors
holders in
with lpid
remapped in
permuting lpids
yield maxhitratio
optimized mapping
hits over
floats time
redistributed cyclic
byte floats
lemmata 1
subsequent redistribution
processor ids
mapping lpids
k ways
p3 b
owns b
traditional optimal
logical physical
3 redistribution
execution time
if z
0 theta
block 3
hits for
4 byte
block to cyclic
to cyclic c
the optimal mapping
place holder q
the traditional mapping
logical processor mapping
logical to physical
same place holder
place holders q
of data hits
number of data
redistribution from block
h r s
block size in
the row dimension
c data hits
to physical processor
and cyclic c
block block to
to place holders
o o o
the same place
to place holder
q h r
optimal mapping technique
cyclic c 0
ching hsien hsu
map to the
the mapping technique
the mapping function
d s and
block and cyclic
the block size
physical processor mapping
of the lpids
hits per lpid
lpids that map
for redistribution from
data hits per
among processor memories
neighboring data relationships
of data elements
the logical to
from block to
the logical processor
of data redistribution
that map to
holders are mapped
if z p
the respective block
redistribution between block
q f i
lpid i 1
m dimensional data
gcd z p
data hits figure
permutation of lpids
data hit ratio
of lpids to
can be remapped
place holders are
an integer z
z p then
places from lpid
between block and
the physical nodes
function in equation
mapping function in
n 0 theta
in the row
efficient data redistribution
the data block
amount of data
0 theta n
distributed memory machines
since lpid i
processor mapping function
lpids map to
numbers and z
0 and lpid
respective block sizes
data block under
in bold italics
the optimal technique
row dimension of
data hits for
for d s
the k lpids
lpids with the
traditional mapping technique
z be natural
maps lpid i
holder q h
global data array
z places from
of supercomputing v
journal of supercomputing
theta n 1
and d t
number of processors
for an integer
yeh ching chung
is initially distributed
one dimensional data
if gcd z
data exchange is
are exactly c
z b c
d b 0
be natural numbers
redistribution of data
redistribution ieee transactions
the journal of
size in the
natural number such
processor mapping technique
and z b
i 1 z
for distributed memory
that the mapping
s and d
z and p
the semantics of
are mapped by
are the respective
to the same
and z be
block sizes in
elements the logical
place holders in
lpid 0 and
exactly c data
data redistribution execution
mapping of lpids
mapping technique the
from lpid i
communicates with lpid
elements data hits
function for determining
for lpid i
of arbitrary number
data exchanged among
map to place
such that place
could be permuted
mapping function h
that place holders
from block block
of place holders
its data block
remain on processor
cyclic c on
b sized data
exchange is viewed
to cyclic 3
c cyclic c
cyclic c cyclic
1 z places
traditional optimal matrix
be remapped in
z mod p
exchanged among processor
4 byte floats
optimal matrix size
of gcd z
lpids to place
matrix size 4
determining a permutation
the optimized mapping
sized data block
data decomposition is
size 4 byte
receive processor sets
remapped in any
redistribution execution time
target processor configurations
block under block
ibm sp x
floats time sec
that achieves maxhitratio
lpid i to
cyclic block size
lpids to data
data relationships on
lpids are in
mapping technique to
data elements data
dimension are mapped
byte floats time
cyclic c or
logical processor ids
the number of
natural numbers and
on the physical
of d s
send and receive
be a natural
semantics of the
to data elements
ratio would be
