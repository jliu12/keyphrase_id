page
unmarked
caching
hole
pages
fkl
faults
request
cache
evict
competitive
evicts
evicted
clean
online
mistakes
opt
unfair
requests
fault
requested
phase
farthest
paging
marked
mistake
evicting
robin
holes
processes
eviction
touch
replacement
decisions
marking
cfl94a
incurs
cao
round
fair
oe
91
amortized
fairness
ratio
servicing
controlled
2h
minfh
classical
felten
phases
randomized
interleaving
moves
sleator
cfl94b
ms91
cr
furthest
dm
st85
belonging
lemma
sequences
ln
mark
cached
adversarial
decision
owning
worst
ongoing
victim
scenario
service
asked
ask
fa
offline
tarjan
pay
move
perfect
advance
chooses
contolled
kpr92
reprimand
mcgeoch
birs91
h_k
definintion
bel66
2h_
fopt
2p
subsequently
attains
incurred
worth
detecting
realistic
individual
adversary
belady
multi
ju
thereafter
beginning
double
pag
nemesis
shared
evictions
renumber
sim
elegant
redoing
criticized
notion
subsequent
generates
knowledge
blelloch
orders
bring
sharing
fpg
fronts
worsen
puters
relabel
serve
manage
optimum
processed
fiat
caused
li
temporal
competitiveness
concurrently
gibbons
never
phillip
ratios
regarded
hr
iii
strategies
hk
intelligent
commits
deals
achieves
caught
touches
lowering
own
guy
perhaps
gamma1
magnitude
intuitively
hn
said
improves
charged
bad
barcelona
2r
sixteenth
owns
resident
distinct
deterministic
quantity
absolutely
existed
durations
repetitions
serviced
cesses
accessed
comput
cess
kernel
equals
serving
jsj
began
gammai
harmonic
file
randomization
manipulations
lemmas
proven
begins
process p
page p
hole h
p i
application caching
multi application
competitive ratio
a page
page request
clean page
caching problem
application processes
page requests
request for
classical caching
online algorithm
in cache
in fkl
fkl 91
page faults
a phase
farthest unmarked
of page
application controlled
unmarked processes
touch of
unmarked page
page fault
pages in
the phase
page replacement
request sequence
page of
unmarked process
unfair faults
good page
request sequences
to evict
caching algorithm
oe i
our algorithm
the competitive
during oe
future page
marked pages
clean pages
of process
s cache
a touch
our online
replacement decisions
round robin
controlled caching
the hole
evicts a
unmarked pages
the request
a hole
is requested
the page
h moves
faults generated
application process
for page
cache at
a request
the farthest
of holes
r h
evict a
in opt
opt s
next request
during a
individual request
page u
is evicted
of mistakes
a clean
marking algorithms
opt generates
good decisions
online application
phase oe
pages requested
whose next
its pages
marked during
to hole
individual page
fault during
of unmarked
requested during
all pages
an online
moves to
make good
page from
some page
a mistake
a 0
a competitive
that page
lower bound
fair faults
double round
unfair fault
cache whose
h during
a evicts
h unmarked
with hole
page belonging
of clean
that phase
during the
requests to
of faults
always make
h k
h is
second round
an unmarked
distinct pages
cr h
for hole
by evicting
case interleaving
ratio of
u i
the multi
cache we
knowledge of
from cache
an unfair
first subsequent
replacement decision
page c
worth detecting
to process
cache of
h p
request to
never move
fault then
advance knowledge
the caching
k distinct
p r
i is
requested in
made by
we mark
page in
perfect knowledge
evicted from
be evicted
evict one
evict marked
while servicing
furthest in
mistake by
page associated
p application
paging decisions
online caching
evicting a
fa oe
processes make
e cr
fair fault
0 evicts
felten and
robin sequences
of fkl
cao felten
i subsequently
ongoing phase
own future
the phases
the pages
size k
by opt
then process
to service
each application
the cache
algorithm s
the mistake
to requests
processes at
fast memory
move to
request is
for classical
caching algorithms
k lower
if page
marked process
cao et
process p i
multi application caching
page p i
of process p
application caching problem
in fkl 91
of page faults
pages in cache
number of page
during the phase
during a phase
competitive ratio of
a touch of
the multi application
farthest unmarked page
the competitive ratio
unmarked process p
hole h is
during oe i
the farthest unmarked
application controlled caching
a clean page
future page requests
p i is
the request for
request for page
evicts a page
page replacement decisions
clean page request
the classical caching
h moves to
to process p
faults generated by
at the time
our online algorithm
for page p
page u i
page p 1
moves to some
opt s cache
a hole h
in opt s
request for h
the hole h
touch of process
a page fault
in a phase
process p r
of p i
a request for
cache at the
of our online
always make good
page of p
page faults generated
whose next request
s cache at
clean page requests
page request sequence
classical caching problem
individual page request
an unmarked process
page of process
second round robin
to hole h
page request sequences
unmarked page of
marked pages in
online application controlled
individual request sequences
number of clean
online algorithm for
the time of
of its pages
to evict a
number of faults
a competitive ratio
p i if
knowledge of their
for multi application
h unmarked processes
page p is
a page p
h p gamma1
belonging to process
hole h during
of multi application
for hole h
touch of p
an unfair fault
a page replacement
request for p
bound of h
double round robin
with hole h
to requests to
hole h moves
evict a page
unmarked processes at
instance of multi
for classical caching
page replacement decision
requests to hole
page belonging to
in cache whose
good page p
r h unmarked
request for hole
the double round
marked during oe
h can never
a page from
algorithm s cache
associated with hole
cache of size
a page of
the second round
never move to
first round robin
worst case interleaving
when a page
in the phase
the number of
can never move
then a 0
then process p
p i was
the first subsequent
2 a i
our algorithm is
online algorithm a
the r h
be evicted from
during the second
for the multi
of our algorithm
perfect knowledge of
number of mistakes
step 2 a
is a fair
an online algorithm
our algorithm s
p i s
request to a
p i subsequently
page c i
page p and
during a touch
cache we mark
cache whose next
k distinct pages
page in cache
good page replacement
i subsequently during
phase oe i
a fair fault
is still unmarked
pages requested during
h is requested
properties of holes
page p 2
a mistake by
has no unmarked
page associated with
pages in opt
farthest unmarked pages
processes have perfect
cao felten and
process p e
caching with fairness
some other application
furthest in the
application processes make
controlled caching with
evict one of
of marking algorithms
a evicts a
by evicting a
of clean pages
e cr h
of page requests
k lower bound
any phase oe
evict marked pages
clean pages requested
a good page
due to requests
round robin sequences
felten and li
its own future
p application processes
a 0 evicts
of unmarked processes
if page p
fkl 91 for
controlled caching algorithm
when application processes
not a clean
processes always make
of oe i
