slice
hrb
slicing
roll
vertex
sdg
interprocedural
slices
verticesofslice
vertices
executable
dependence
binkley
statements
b2
weiser
sites
mismatch
intraprocedural
calling
edges
mismatches
inducedgraph
def
site
isomorphism
executableslice
horwitz
loyola
danicic
edge
isomorphic
unwanted
b1
reps
calls
harman
statement
reachingvertices
executable_slice
connects
kos
syntactically
formal
terminates
korel
transfer
maintenance
pdg
kiss
gyimthy
graphs
amorphous
debugging
sebastian
produces
tibor
tcs
contexts
precise
indivisible
induced
subgraph
bogdan
procedures
predicates
assignment
labeled
restricting
aliases
dependences
division
semantics
dave
flow
caught
insert
infinite
summary
regression
pass
pdgs
21210
2699
vertexset
4501
handler
college
kinds
expansion
mark
meanings
programs
execut
delcher
slic
holdsworth
ptran
projecting
integration
backwards
reachability
affect
lyle
subcomputation
occurrences
sigsoft
treats
untransformed
mismatched
encountered
noninterfering
gallagher
sloane
globals
semantic
producing
passing
passes
cs
parallelization
519
sliced
produced
brief
zhongqiang
xiaofang
tices
entry
legal
baowen
escapes
monolithic
descend
expanding
traversal
np
scope
unsolvable
tmp
correctness
occurrence
chief
execu
ponents
boundaries
actual
accounts
exception
formalisation
516
cedure
removes
syntactic
david
525
approximations
498
lexically
aborts
parameter
loop
program
summer
safe
included
susan
interfering
correctly
extends
multiprocessing
differencing
keith
pro
divisible
predicate
qian
ver
aids
versions
illegal
unsatisfactory
street
optimizations
designate
fills
connecting
avoids
preserving
252
missing
transformation
integrating
notes
imprecise
print
synchronizing
anthony
conservatively
naming
roll out
actual in
g roll
the hrb
in vertex
actual out
the slice
out slice
the sdg
hrb algorithm
hrb slice
program slicing
call sites
out vertex
slice of
an hrb
v hrb
interprocedural slicing
out s
slice and
def order
dependence graphs
g s
call site
out vertices
b2 slice
verticesofslice s
a slice
dependence edges
system dependence
slicing algorithm
dependence graph
g slice
calling context
formal in
s v
call statements
sites on
interprocedural slice
executable interprocedural
point p
slice is
interprocedural slices
weiser s
called procedure
executable slice
vertex mismatches
vertex mismatch
slices that
formal out
a procedure
a b2
summary edges
program integration
second call
site on
edge connects
single procedure
in g
procedure program
an sdg
sdg is
every parameter
hrb slicing
slice includes
in verticesofslice
isomorphism lemma
executable slices
inducedgraph g
infinite program
procedure dependence
of procedure
to version
a call
induced graph
procedure calls
calling contexts
system s
an actual
of call
transfer in
parameter out
procedure programs
call vertex
for intraprocedural
software maintenance
call statement
x at
of slice
david binkley
of vertices
an executable
at point
statements and
program point
of g
in v
vertex or
insert figure
two call
in vertices
entry vertex
to program
the called
vertices are
a program
slicing using
version 2
version 1
an interprocedural
slicing theorem
s terminates
edges control
unwanted call
connects each
call edges
the b2
include different
variable x
vertex for
g v
dependence edge
vertices in
the vertex
using dependence
might affect
graph isomorphism
flow dependence
the calling
slice the
in statement
intraprocedural slicing
sdg for
sebastian danicic
order edge
in pass
precise executable
multi procedure
binkley sebastian
executable programs
different actual
the call
parameter passing
or edge
procedure s
the formal
actual parameter
pass 1
these slices
mark harman
the program
of values
vertex at
division by
first call
in slice
and predicates
slice from
global variable
a transfer
program that
sites in
control edges
assignment statements
in line
slicing is
slices is
x consists
y represents
g 1
for version
original system
same procedure
by zero
vertex v
the system
same sequence
edge set
taken with
parameter in
vertex u
a subgraph
program with
algorithm produces
slice in
vertices that
vertex set
statements of
original program
program dependence
infinite loop
and variable
at p
interprocedural data
vertex and
may include
slice terminates
produces slices
slice executable_slice
to inducedgraph
g roll out
actual in vertex
roll out slice
roll out s
the hrb algorithm
an hrb slice
actual out vertex
actual out vertices
slice and s
verticesofslice s v
call sites on
in the slice
system dependence graph
the slice of
the system dependence
of the hrb
call site on
a b2 slice
solution to version
in g roll
at point p
executable interprocedural slices
on a procedure
x at point
formal in vertex
the second call
program point p
slice of a
transfer in statement
hrb slicing algorithm
in v hrb
produce an executable
for every parameter
graph isomorphism lemma
procedure dependence graphs
slice of an
of slice and
induced graph isomorphism
are in g
and variable x
in verticesofslice s
a transfer in
the hrb slicing
of g roll
in vertex mismatches
of procedure calls
point p and
the called procedure
that might affect
of the sdg
p and variable
variable that may
an actual in
to program point
vertex or edge
an interprocedural slice
of program slicing
slices that are
slice is a
sequence of values
set of vertices
a slice of
is a slice
of call sites
respect to program
sites on the
call sites in
using dependence graphs
might affect the
to version 2
edge connects each
site on a
unwanted call sites
the formal in
to v hrb
actual in vertices
out slice is
an infinite program
inducedgraph g s
an executable slice
2 the hrb
def order edge
call in main
in vertex mismatch
include different actual
for x at
variable x consists
for system s
in g slice
g s the
statements and predicates
for single procedure
out slice and
slice of g
the actual out
affect the value
edge set of
taken with respect
a call site
division by zero
program with respect
in the called
program that might
where the slice
modified as a
effects of procedure
formal out vertex
by zero error
single procedure programs
for version 1
calling context and
precise executable interprocedural
y and e
binkley sebastian danicic
e are in
out vertex for
2 are isomorphic
flow dependence edges
of g s
of x at
the first call
two call sites
interprocedural slicing algorithm
semantics of program
restricting the original
set of g
same sequence of
the edge set
x at p
of a program
vertices in v
a subgraph of
a program with
the induced graph
of a procedure
the program that
the same procedure
the calling context
represented by v
on the procedure
provides a solution
x consists of
interprocedural slicing using
slicing using dependence
in g s
the original system
the same sequence
the procedure s
vertex v to
vertex in the
to produce an
the original program
the complexity of
a solution to
g 2 are
interprocedural data flow
to the formal
boundaries of procedure
pass 1 and
procedure s parameters
weiser s interprocedural
same order during
edges and parameter
from an hrb
v def order
a in sum
of system s
g 1 onto
first call in
s verticesofslice s
slice terminates when
out vertex at
flow edges control
of slicing g
is a semantics
the components found
actual in and
syntactic correctness theorem
for interprocedural slicing
labeled a in
semantics preserving transformation
along def order
different actual in
if a slice
edges control edges
summary edges and
s interprocedural slicing
of actual in
starts from all
contexts for c
theorem for intraprocedural
the aliases of
hrb slice of
values when evaluated
missing actual out
further actual in
weiser s original
every parameter or
g s v
edges summary edges
