dem
cwa
mwa
tasks
quota
scheduling
load
twa
balancing
subcube
walking
node
balanced
hypercube
avg
hops
subcubes
overloaded
prescheduling
runtime
processors
locality
normalized
cube
balance
subtree
mesh
copt
sends
communication
underloaded
exchange
migrated
calculates
calculated
nodes
row
child
jj
weight
dimension
quotas
receive
bitwise
sent
ffi
f4
ching
topologies
multiprocessors
calculation
topology
willebeek
lemair
task
d0
grain
workload
balances
spends
evenly
parent
scheduled
schedule
initiated
cooperate
fully
costs
3g
static
tree
maximize
records
jobs
256
7g
submesh
reeves
parallelized
send
adaptive
incremental
schedul
5g
transmitted
f0
preorder
vectors
utilizes
yeh
of tasks
parallel scheduling
walking algorithm
load balancing
dem algorithm
w avg
each node
task hops
the dem
node i
its quota
tasks to
tasks in
the load
load information
fully balanced
local tasks
communication steps
cwa and
normalized communication
to node
balance the
of w
cost weight
balanced cases
fully balance
of cwa
tasks from
avg and
scheduling algorithms
normalized cost
or mwa
cube walking
of mwa
cwa or
receive jj
of task
global information
global load
communication cost
tree walking
tasks are
scheduling algorithm
scheduling is
maximize locality
node j
static scheduling
dem is
task exchange
of dem
tree hypercube
and mwa
is child
twa cwa
4 task
mesh walking
communication costs
tasks as
in step
balanced load
non local
after execution
dynamic problems
j tasks
system phase
in node
hypercube and
iteration 0
from node
quota q
of twa
node calculates
algorithm mwa
3 quota
quota calculation
own w
w tasks
sends two
w vector
weight processors
load calculation
normalized locality
algorithm cwa
runtime parallel
sum reduction
the twa
processors 0
for load
and mesh
processors processors
number of tasks
tasks to node
values of w
the dem algorithm
of tasks in
tasks in each
balance the load
of task hops
non local tasks
number of task
in each node
w avg and
fully balanced cases
fully balance the
normalized cost weight
tasks from node
of non local
cube walking algorithm
cwa or mwa
of the dem
of w avg
to its quota
node is equal
the number of
tree walking algorithm
hypercube and mesh
j i 0
parallel scheduling algorithm
parallel scheduling is
the values of
global load information
minimize the communication
cwa and mwa
the normalized communication
avg and r
mesh walking algorithm
tree hypercube and
normalized communication costs
is child of
communication steps of
child of i
j is child
each node is
the total number
of communication steps
of w k
total number of
after execution of
for node i
parallel scheduling algorithms
communication costs of
how many tasks
for load balancing
the communication cost
number of non
i 0 l
15 20 30
i 0 r
number of communication
0 5 10
in node i
each node calculates
4 task exchange
dem algorithm is
w and ffi
task hops of
evenly divided by
walking algorithm cwa
1 global information
j tasks from
execution of twa
twa cwa or
global information collection
sends three tasks
to fully balance
its quota q
sends two tasks
its own w
information collection perform
3 quota calculation
two tasks to
the tree walking
processors 0 5
runtime parallel scheduling
average load calculation
for tree hypercube
2 average load
receive jj i
three tasks to
node has the
