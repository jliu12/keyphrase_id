approx
pips
alias
regions
sort
array
sub
region
fortran
ipco
prxplo
sorts
inference
fragment
declared
prchen
analysed
fortran77
fragments
nrle
na1
besti1
ipce
profiles
accessed
polymorphic
arrays
instantiated
formal
engineer
parameterised
parallelisation
icco
electricit
programs
r2
declarations
really
names
signatures
instantiates
loop
realise
specification
reverse
algebraic
pointer
calls
utility
polymorphism
caller
casdeg
prxpl0
nrlo
exact
mode
interprocedural
aliases
traversed
heuristic
legacy
lists
mines
p2
transitive
ecole
instantiation
limits
distinctions
site
static
inclusion
convex
incapable
profile
analyse
coercion
treatment
conservative
successive
store
aliasing
edf
procedural
r1
onwards
pointers
semantical
france
overlap
sub program
sub programs
same sort
approx region
approx regions
parameter region
formal parameter
parameter regions
dynamic alias
array fragment
alias lists
actual parameter
array fragments
exact regions
the pips
type inference
sub sort
the sub
exact region
algebraic specification
the array
a sub
our analysis
the fortran
regions for
entry point
regions describe
alias relation
fortran sub
fortran code
reverse engineer
the declared
array region
type signatures
programs which
formal parameters
alias analysis
instantiated by
out mode
conventional type
have analysed
integer arrays
same array
our example
fragments which
store at
out regions
an approx
true parameters
array regions
the sort
region for
sort relation
alias list
utility sub
sorts for
sort of
the store
static analysis
region is
two regions
in approx
the sorts
which may
sort is
parameterised by
the approx
variables which
the code
a loop
sort to
regions in
same type
the entry
sorts of
different sorts
regions of
declared types
call site
the formal
of sub
super sort
same approx
nrle sub
both alias
true input
de france
and prxplo
two alias
of besti1
the sub program
the same sort
a sub program
sub programs which
the actual parameter
the entry point
the reverse engineer
actual parameter region
store at the
the store at
the sort of
dynamic alias relation
formal parameter region
the dynamic alias
formal parameter regions
conventional type inference
an approx region
array fragments which
the sub programs
at the entry
for our example
the same array
sort of the
in out mode
fragments which are
we have analysed
of the array
in a loop
of sub programs
parameter regions for
sub programs in
actual parameter regions
each sub program
the array fragment
an exact region
for exact regions
sub program p
sub program we
utility sub programs
same sort is
of the fortran
by the sub
the formal parameter
type signatures for
of the store
our example are
of the pips
an algebraic specification
entry point of
the same type
which may be
the fortran code
the declared types
names for the
example are shown
the same variable
the same approx
construct an algebraic
of several identical
parameterised by the
sort to the
sub program and
regions describe the
in approx regions
approx regions of
two alias lists
the fortran sub
fortran sub programs
both alias lists
to conventional type
in sub program
reverse engineer to
sorts for our
same approx region
the pips tool
approx region is
ffl all array
these sub programs
block of code
and out regions
each array fragment
same array fragment
the approx region
for the sub
programs we have
regions for the
expressed in terms
pointer alias analysis
a sub sort
signatures for the
