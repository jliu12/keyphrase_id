hrms
hypernode
recurrence
scheduling
register
scheduled
modulo
schedule
loops
scheduler
spilp
predecessors
circuits
registers
successors
recurrences
initiation
recmii
loop
subgraph
frlc
lifetimes
maxlive
pipelined
dependence
pipelining
schedules
l6
late
l4
fa
slack
buf
subgraphs
club
ordering
spill
pressure
ordered
cycle
nodes
lifetime
dependences
heuristic
latency
fg
regs
topologically
fand
appended
buffers
termed
iteration
schedulers
requirements
cycles
down
circuit
backward
early
mii
top
consumed
kernel
compilation
priority
instruction
ii
8b
predecessor
epilogue
traffic
pre
secs
ayguad
live
llosa
eduard
steady
ramp
1258
fthis
iterations
placed
scans
variants
2a
node
perfect
mateo
recurrence circuits
register requirements
the hypernode
modulo scheduling
top down
of hrms
pre ordering
the register
recurrence subgraphs
ordering step
the ii
initiation interval
recurrence circuit
down scheduler
the scheduling
dependence graph
the scheduler
scheduling step
the nodes
software pipelining
early start
software pipelined
hrms is
ordered nodes
partial schedule
the loop
register pressure
the loops
the dependence
list fa
lifetimes of
fa c
of ordered
been scheduled
loop variants
late start
start u
without recurrence
recurrence subgraph
the recurrence
the graph
is scheduled
hypernode reduction
hypernode and
at cycle
compilation time
the partial
g f
late as
hrms requires
predecessors successors
cycle early
configuration l6
that hrms
hrms top
as early
requirements of
backward edges
previously scheduled
perfect club
the initiation
as late
an operation
the predecessors
memory traffic
a latency
be scheduled
execution time
operation u
scheduled the
state phase
as possible
the pre
down scheduling
least 97
ii buf
only predecessors
hypernode h
buf secs
topologically sorted
schedule for
of registers
software pipeline
live values
the execution
spill code
scheduled in
pipelined loop
loops with
the perfect
the register requirements
register requirements of
list of ordered
to the hypernode
the pre ordering
top down scheduler
pre ordering step
the partial schedule
of ordered nodes
the dependence graph
graph of figure
the scheduling step
the register pressure
the top down
in the partial
list fa c
without recurrence circuits
late as possible
a latency of
the initiation interval
the perfect club
early start u
performance of hrms
cycle early start
hrms top down
orders the nodes
of hrms is
of the loop
of the loops
the hypernode and
fa c d
number of registers
as late as
of loop variants
steady state phase
is placed as
the graph of
software pipelined loop
the recurrence circuits
producing the graph
ordered nodes is
top down scheduling
ffi u v
graph without recurrence
at least 97
operation u has
ii for at
ii buf secs
f g f
early as possible
reduced to the
figure 2a shows
modulo scheduling approaches
hypernode and the
is scheduled as
an operation u
by the top
as early as
appended to the
of the nodes
g f g
instruction level parallelism
linear programming approach
hypernode reduction modulo
the software pipeline
reduction modulo scheduling
a top down
as possible in
order not to
in order not
the ii is
gives priority to
a software pipelined
the execution time
is appended to
to the list
of the recurrence
the nodes of
software pipelined loops
if an operation
scheduled in cycle
the hypernode h
predecessors or successors
the partial scheduling
the recurrence subgraphs
hrms requires less
to recurrence circuits
ordered nodes list
the next recurrence
start of u
