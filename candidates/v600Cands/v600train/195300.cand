spis
psc
speckle
spi
specifications
compiler
defineunique
unify
clu
discharge
lsl
checks
optimizations
abstraction
map
modifies
opportunities
specialized
invariants
specialize
guards
runtime
procedures
assertions
specification
clause
ac
insert
sim
cfg
spots
immutable
mchugh
intset
sites
iterators
clauses
proving
client
guard
mutable
hot
lp
dom
larch
ran
bugs
dynamicarray
supplying
debugging
wrote
commented
gypsy
substitution
compilers
equational
supertypes
modularity
postconditions
clients
calling
implementations
dawson
engler
nine
language
optimize
int
rep
abstractions
precondition
unsorted
eliminating
array
postcondition
discharging
elem
discharged
env
prototype
code
programs
diagnostics
checking
iterator
vars
subtypes
aliasing
implementor
tuning
ac unify
map define
of spis
abstraction functions
specialize when
map defineunique
the compiler
in ac
of map
theorem proving
low bound
an spi
a procedure
guards of
to discharge
partial specifications
specifications to
runtime checks
the guards
mapping insert
spis we
runtime errors
psc uses
procedure specifications
the spi
map m
specialized procedures
of psc
m dom
proving technology
specifications of
proof rules
dom d
discharge the
compiler to
a compiler
program state
the specifications
hot spots
use spis
spi of
modifies clauses
d ran
spis in
substitution store
eliminate runtime
spis to
unify psc
modifies clause
spi compiler
spis and
spi compilers
specialized implementations
contains clauses
data type
array bounds
in specifications
formal specifications
opportunities to
calling context
in m
the program
the client
the specification
spi for
lsl specifications
ran r
of commented
psc is
the call
checks in
procedure call
domain element
specifications were
the larch
general one
the code
compiler must
of procedures
call sites
of sim
client code
transformation rule
the contains
undefined in
prototype compiler
optimizations in
the implementation
improve program
abstraction function
in ac unify
the guards of
implementation of map
guards of spis
of map define
map m dom
psc uses the
m dom d
image of d
theorem proving technology
the program state
to discharge the
undefined in m
the contains clauses
discharge the guards
d ran r
the abstraction function
ac unify psc
in m figure
to eliminate runtime
building a compiler
p s implementation
an spi compiler
to use spis
eliminate runtime checks
merely by examining
dom d ran
d in m
the spi for
the compiler to
lines of commented
d is undefined
examining the code
and abstraction functions
the compiler must
opportunities to use
the client code
the general one
a prototype compiler
is undefined in
choose the appropriate
improve program performance
the proof rules
to improve program
the calling context
the source language
000 lines of
in p s
performance tuning when
specifications of procedures
absence of runtime
defined abstract data
insert last s
set of proof
six kinds of
may exhibit behavior
checking languages and
the modifies clause
specialize when index
need to trade
modifies m ensures
map define map
the ac unify
make programs run
of substitution store
the spi of
8 000 lines
specialize when d
spis can be
guards of specialized
the procedures containing
approach to equational
transformation language is
uses the abstraction
assignment procedure call
these hot spots
ut interactive prover
be explained merely
clu reference manual
specifications worked well
about building a
map lookup map
exploiting specifications to
abstraction functions for
the ut interactive
can make programs
bounds checking nil
functions and invariants
of spis we
to subtypes etc
