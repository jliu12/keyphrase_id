benchmark
module
robustness
ascm
crashme
benchmarks
unix
file
crash
modules
tests
unexpected
operating
modular
suite
sacrificial
extensibility
hierarchical
mach
object
fault
restart
repeatability
benchmarking
i486
outcome
stimuli
routine
int
hierarchically
severity
hierarchy
warm
storage
termination
success
resource
cold
terminations
bad
interface
injection
localization
terminated
mode
watchdog
buffer
coverage
stimulation
testing
miller90
serendipity
suh93
crashes
read
faults
randomness
suites
deallocate
virtual
triggering
efforts
outcomes
extensible
buf
allocate
abstract
invalid
utilities
tested
logging
inheriting
multithreaded
multithreading
namespace
obj
comparability
coded
cmu
synthetic
classifications
reflect
evaluations
applicable
252
repeatable
uncontained
mk82
dingman93
interfaces
storage object
module specific
of robustness
unexpected error
the ascm
a benchmark
bad success
the benchmark
robustness benchmark
operating system
file object
system modules
specific routine
robustness benchmarks
the module
result processing
unexpected termination
modular benchmarks
the test
unix like
the operating
system module
test specific
theta theta
system robustness
a robustness
hierarchically structured
robustness tests
read file
the robustness
benchmark suite
sacrificial program
cold restart
benchmark of
hierarchical benchmark
warm restart
a module
fault injection
benchmark is
the file
the hierarchical
write data
i486 mach
correct unexpected
hierarchical interface
individual tests
mach 2
modular benchmark
correct outcome
like operating
read data
robustness of
error return
operating systems
mach 3
benchmarks are
a test
triggering events
a sacrificial
module independent
independent routine
new module
the tests
of unix
unix system
an unexpected
to crash
a hierarchical
an error
byte buffer
write file
a unix
unix systems
benchmark that
a file
the read
the system
test are
system s
memory object
crash the
expected outcome
virtual int
randomized stimulation
testing code
ascm benchmark
benchmark itself
char buf
data char
object mode
the operating system
the module specific
of a benchmark
of robustness tests
the file object
a robustness benchmark
module specific routine
theta theta theta
correct unexpected error
the read file
unix like operating
of robustness benchmarks
the correct outcome
the robustness of
the storage object
mach 3 0
a benchmark suite
of triggering events
the test specific
localization of triggering
the result processing
suite of robustness
of the benchmark
the new module
of the test
the benchmark itself
a sacrificial program
module specific knowledge
the hierarchical benchmark
the individual tests
benchmark of robustness
module being tested
test specific routine
rt mach 2
a benchmark of
does the fault
file and write
i486 mach 3
like operating systems
read file and
such a benchmark
char buf int
data char buf
by the ascm
read data and
mach 2 5
module independent routine
ibm rt mach
the expected outcome
and write file
the ascm benchmark
of the system
unix like systems
of a unix
restart of the
a benchmark is
a hierarchically structured
of random numbers
the benchmark suite
of the operating
system s ability
to the benchmark
the development of
operating system to
an operating system
the unix system
the system s
as being correct
a file object
16 byte buffer
hierarchically structured benchmarks
write file tests
the ascm result
benchmark suite might
specific routine is
the ascm scheme
the file module
test storage object
error unexpected termination
evaluating the robustness
class storage object
a hierarchical interface
that a benchmark
a bad success
an unexpected termination
the analysis routines
the sacrificial program
a multithreaded benchmark
hierarchical interface to
any robustness benchmark
