monoid
comprehension
oodb
query
phi
calculus
comprehensions
object
oid
transformer
denotational
oql
monoids
destructive
updates
database
res
salary
queries
hotel
db
idempotent
normalization
qualifier
employees
hotels
optimizer
commutative
semantics
primitives
unnesting
6g
binding
store
s14
obj
ext
s13
phif
lookup
referential
destructively
transformers
identity
s1
threaded
50000
fst
snd
s0
person
materialized
fm95b
oho90
fm98
languages
bags
optimizing
oriented
propagates
transparency
effects
constructs
ref
employee
int
translated
n4
nested
maintenance
transformation
arlington
monads
bed
returns
rule
translation
s15
ffnew
rea89
s17
sch85
threadedness
fm95a
revelation
ld92
declarative
update
relational
equivalences
the monoid
monoid comprehension
monoid calculus
object identity
the state
query optimization
state transformer
the object
side effects
object store
monoid phi
denotational semantics
of type
comprehension calculus
type t
destructive updates
state transformation
z phi
object oriented
a monoid
database updates
object updates
normalization algorithm
e salary
oodb query
comprehension is
store n
state monoid
phi is
object queries
object extensions
the normalization
u db
object monoid
transformation monoid
effective calculus
oodb queries
monoid comprehensions
oriented queries
object primitives
oql query
oodb languages
resulting programs
view maintenance
a state
the binding
obj t
in denotational
single threaded
state is
type s
if phi
referential transparency
state transformers
semantics of
of object
path u
p path
the optimizer
formal meaning
assign res
c hotels
the oid
res 0
a comprehension
database state
state s
the database
the comprehension
type obj
object query
binding list
database programming
optimizing object
binding from
our framework
the denotational
is translated
new object
u phi
and returns
propagates the
declarative query
mapped into
and query
translated into
the semantics
global array
phi to
query languages
the object store
the monoid calculus
monoid comprehension calculus
of type t
the monoid comprehension
the state is
the normalization algorithm
of object identity
the state transformer
the resulting programs
object monoid calculus
the object monoid
the object extensions
the monoid phi
an effective calculus
object oriented queries
if phi is
is translated into
denotational semantics of
the denotational semantics
of the object
f u db
phi z phi
a formal meaning
the object primitives
propagates the state
state transformation monoid
a monoid comprehension
formal meaning to
a state transformer
into the monoid
oodb query optimization
state monoid comprehension
j r g
of type s
e j r
object identity and
of the monoid
f v s
is mapped into
and query optimization
a new object
the semantics of
query optimization in
project access e
to the monoid
representing object identity
optimizing object queries
meaningful query optimization
using denotational semantics
the binding from
for handling object
resulting programs can
binding list ae
qualifier path u
the merge function
res max res
object store l
object queries using
without the object
type obj t
phi is commutative
oql query select
monoid phi z
at any place
using an effective
access e salary
e salary 50000
the binding list
on query optimization
do meaningful query
a state monoid
s13 in figure
queries using an
object identity in
us to do
semantics of the
the state transformation
view maintenance problem
destructive updates to
in object bases
of type obj
framework for handling
in r do
database updates and
in denotational semantics
to do meaningful
phi is a
mapped into the
even though this
