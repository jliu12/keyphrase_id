assertions
2npda
inference
rules
syntactically
firings
meta
rule
unification
antecedent
closure
union
henglein
database
assertion
equivalence
transitive
hs
jdj
antecedents
merge
bottom
congruence
ground
cubic
presentations
oe
ti
pi
calculus
parses
atom
logic
grammar
en
predicate
prefix
grammars
datalog
subtype
jp
transitivity
typed
cardelli
parsing
asserted
clashes
interned
satta
bilexical
flow
slot
expressions
abadi
appearing
typability
cky
subtransitive
horn
subterms
obsolete
substitutions
oei
jjdjj
typable
accepts
semantically
subscrpt
firing
chaining
recursive
clauses
clearer
closed
bn
runs
deductive
inspection
closedness
pseudo
quadratic
log
erasure
decidable
theorems
pushdown
zi
polylog
erase
nonterminal
meta complexity
syntactically local
complexity theorem
rule set
union find
local rule
the rules
bottom up
find assertions
r d
inference rules
up logic
assertions of
rule sets
assertions in
of assertions
rules in
equivalence relation
o n
henglein s
up bound
find rule
terms involved
type expressions
a rule
o en
congruence closure
unification algorithm
union operation
flow analysis
find of
sub cubic
running time
set r
some antecedent
cubic time
linear time
assertion of
in o
prefix firings
jp r
2npda complete
sub transitive
classical pseudo
closure algorithm
hs ti
runs in
type expression
the form
the equivalence
the find
transitive closure
every term
rules maintain
the conclusion
recursive types
analysis algorithms
in sub
a syntactically
n log
the inference
equivalence class
occurs check
semantically local
is 2npda
merge graph
o jdj
find value
dynamic transitive
database e
all terms
logic programs
oe i
a type
single rule
the input
first order
context free
appropriate equivalence
efficient inference
closed type
a union
the closure
algorithm runs
union operations
input database
simple terms
been asserted
type inference
data flow
meta complexity theorem
syntactically local rule
assertions of the
bottom up logic
of the form
rule set r
in the conclusion
of assertions of
bottom up bound
terms involved in
union find rule
in the equivalence
rules in r
the rules in
set of assertions
rules in figure
r d j
assertion of the
in sub cubic
sub cubic time
a syntactically local
in some antecedent
a rule set
the equivalence relation
local rule sets
runs in o
the meta complexity
find rule set
solved in sub
classical pseudo code
assertions in d
o n log
static analysis algorithms
rules maintain the
assertions in the
flow analysis algorithm
that the rules
r r d
that a database
complexity theorem for
the appropriate equivalence
jp r r
dynamic transitive closure
determined by inspection
up logic program
up logic programs
any single rule
find s f
the o en
efficient inference of
the closure can
n find assertions
the merge graph
algorithm runs in
running time of
in linear time
every term in
the running time
s and w
maintain the invariant
appears in some
first order terms
database d we
the rules maintain
has been asserted
appropriate equivalence relation
e is closed
in the input
of a rule
the input database
the union operation
local rule set
of the rules
conclusion of a
as bottom up
the form find
a union find
implies that the
the invariant that
closure can be
to mean a
in o n
be solved in
the inference rules
this implies that
of inference rules
in o jdj
form find s
en running time
henglein s algorithm
