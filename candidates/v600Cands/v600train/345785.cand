page
unmarked
caching
hole
pages
fkl
faults
request
cache
evict
competitive
evicts
evicted
clean
online
mistakes
opt
unfair
requests
fault
requested
phase
farthest
paging
marked
mistake
evicting
robin
holes
processes
eviction
touch
replacement
decisions
marking
cfl94a
incurs
cao
round
fair
oe
91
amortized
fairness
ratio
servicing
controlled
2h
minfh
classical
felten
phases
randomized
interleaving
moves
sleator
cfl94b
ms91
cr
furthest
dm
st85
belonging
lemma
sequences
ln
mark
cached
adversarial
decision
owning
worst
ongoing
victim
scenario
service
asked
ask
fa
offline
tarjan
pay
move
perfect
advance
chooses
contolled
kpr92
reprimand
mcgeoch
process p
page p
hole h
p i
application caching
multi application
competitive ratio
a page
page request
clean page
caching problem
application processes
page requests
request for
classical caching
online algorithm
in cache
in fkl
fkl 91
page faults
a phase
farthest unmarked
of page
application controlled
unmarked processes
touch of
unmarked page
page fault
pages in
the phase
page replacement
request sequence
page of
unmarked process
unfair faults
good page
request sequences
to evict
caching algorithm
oe i
our algorithm
the competitive
during oe
future page
marked pages
clean pages
of process
s cache
a touch
our online
replacement decisions
round robin
controlled caching
the hole
evicts a
unmarked pages
the request
a hole
is requested
the page
h moves
faults generated
application process
for page
cache at
a request
the farthest
of holes
r h
evict a
in opt
opt s
next request
during a
individual request
page u
is evicted
of mistakes
a clean
marking algorithms
opt generates
good decisions
online application
phase oe
pages requested
whose next
its pages
marked during
to hole
individual page
process p i
multi application caching
page p i
of process p
application caching problem
in fkl 91
of page faults
pages in cache
number of page
during the phase
during a phase
competitive ratio of
a touch of
the multi application
farthest unmarked page
the competitive ratio
unmarked process p
hole h is
during oe i
the farthest unmarked
application controlled caching
a clean page
future page requests
p i is
the request for
request for page
evicts a page
page replacement decisions
clean page request
the classical caching
h moves to
to process p
faults generated by
at the time
our online algorithm
for page p
page u i
page p 1
moves to some
opt s cache
a hole h
in opt s
request for h
the hole h
touch of process
a page fault
in a phase
process p r
of p i
a request for
cache at the
of our online
always make good
page of p
page faults generated
whose next request
s cache at
clean page requests
page request sequence
classical caching problem
individual page request
an unmarked process
page of process
second round robin
to hole h
page request sequences
unmarked page of
marked pages in
online application controlled
individual request sequences
number of clean
online algorithm for
the time of
of its pages
to evict a
number of faults
a competitive ratio
p i if
knowledge of their
for multi application
h unmarked processes
page p is
a page p
h p gamma1
belonging to process
hole h during
of multi application
for hole h
touch of p
an unfair fault
