atr
worker
condor
master
workers
ssn
planning
iterate
pool
mw
flock
adaptive
scenarios
wi
debug
grid
000
tasks
runtime
iterates
variability
loggp
execution
heterogeneous
stochastic
homogeneous
lightly
isolated
flocks
hosts
400
legion
logp
scheduling
cactus
cv
linderoth
basket
argonne
task
configuration
histogram
magnetohydrodynamics
trust
iterations
trip
globus
200
validates
update
autopilot
sec
jobs
msec
host
pvm
job
loaded
thumb
tomography
subgradient
allocated
measured
mips
processor
heymann
andcompute
condors
measurements
interrupts
grids
50
configurations
apples
metasystem
metacomputers
processors
conserve
secondary
efficiencies
diminishing
samr
worldwide
incumbent
avg
predictive
gene
multistage
iteration
histograms
atr execution
the atr
the master
execution time
execution times
worker execution
of atr
50 g
total atr
10 000
model function
m x
of workers
new iterate
master execution
isolated master
planning problem
planning problems
update m
wi pool
of scenarios
master processor
the condor
adaptive code
master worker
the workers
a worker
homogeneous workers
condor pool
pool ssn
task groups
computational grid
task execution
the worker
debug i
task group
stage linear
non adaptive
iterate x
total execution
time to
adaptive execution
new iterates
master and
adaptive version
ssn 10
distributed condor
reduced debug
worker applications
grid environment
ssn planning
stochastic optimization
minimize total
function m
problem n
each worker
of tasks
for master
variability in
new adaptive
linear programs
atr application
condor mw
for atr
adaptive atr
200 50
master processing
local condor
scenarios n
widely distributed
runtime environment
the model
compute nodes
optimal adaptive
000 200
adaptive control
new x
000 2
lightly loaded
each task
the adaptive
of iterations
000 100
near optimal
task scheduling
time for
and workers
to update
000 b
total master
atr execution time
update m x
time to compute
total atr execution
worker execution times
task execution times
number of scenarios
number of workers
the model function
wi pool ssn
function m x
master execution times
to update m
model function m
planning problem n
debug i o
the master processor
total execution time
g and t
time to update
stage linear programs
number of tasks
execution time for
adaptive version of
a new iterate
pool ssn 10
ssn 10 000
for master worker
master worker applications
ssn planning problem
new iterate x
10 000 2
distribution of work
the new adaptive
widely distributed condor
worker execution time
version of atr
of task groups
master and workers
local condor pool
000 200 50
of the atr
of total atr
worker applications on
each new iterate
200 50 g
compute each new
problem n 10
the master and
number of iterations
execution time on
n 10 000
variability in the
the computational grid
average time to
number of task
the time to
between the master
solve secondary stage
second stage linear
wi argonne flock
secondary stage linear
ssn 20 000
lightly loaded master
the adaptive code
application level scheduling
new adaptive code
each task group
a computational grid
minimize total execution
non adaptive version
000 b 1
the atr application
to compute each
the non adaptive
m x and
the number of
execution time is
near optimal adaptive
task scheduling algorithm
number of iterates
b 1 t
on the master
the master to
planning problems and
the runtime environment
compute a new
of tasks t
to minimize total
execution times are
