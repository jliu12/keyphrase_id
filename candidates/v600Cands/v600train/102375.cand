lp
lsl
trait
lslc
traits
larch
linearcontainer
dd
totalorder
priorityqueue
obligations
deduction
cd
specifications
axioms
addw
converts
qed
claims
naturalnumber
specifiers
discharge
assertions
clause
rewrite
specification
declare
isgenerated
conjecture
theories
isempty
asserts
subgoal
equational
insert
commands
implication
coord
rules
guidance
operators
emptyv
inw
discharged
forall
assert
interpretations
command
obligation
induction
window
rewriting
containment
assistance
fg
checking
resume
inconsistencies
displayable
debugging
clauses
consistency
hypotheses
proving
partitioned
alse
consequences
specifier
checkable
formulates
commutative
clu
exempting
natpriorityqueue
otalorder
subgoals
coordinate
directs
proofs
axiom
interface
nat
propositions
diagnostics
hypothesis
implications
completion
prover
damon
checks
the trait
proof obligations
the larch
rewrite rules
deduction rules
in lp
lp to
deduction rule
a trait
larch shared
shared language
partitioned by
cd 0
in lsl
lsl specifications
converts clause
dd y
theory containment
the conjecture
completion procedure
x dd
qed prove
lp commands
claims about
the axioms
a specification
lp the
e dd
critical pairs
assertions of
of linearcontainer
lsl traits
all traits
the converts
y dd
resume by
the assertions
is empty
of lsl
empty q
lp is
prove x
use lp
implies clause
dd e
addw v
next rest
proof obligation
of lp
for lp
handle case
declare variables
the lsl
lp s
induction rules
by cases
the proof
0 dd
next new
lslc formulates
of totalorder
operator theories
obligations associated
empty 0
s partitioned
larch interface
trait view
z proofs
rest new
directs lp
axioms of
traits that
v 0
interface specifications
by fg
logical system
interpretations for
lp provides
explicit theory
the traits
lp uses
s generated
to discharge
user assistance
e 2
to lp
q e
a window
traits s
dd x
larch shared language
the assertions of
the larch shared
the completion procedure
the converts clause
of all traits
is empty q
the proof obligations
generated by fg
in the trait
the axioms of
that a specification
lp the larch
s partitioned by
and deduction rules
the partitioned by
resume by case
use lp to
obligations associated with
to an identity
of the trait
proof obligations associated
directs lp to
is empty 0
s generated by
the deduction rule
the implies clause
isempty and 2
y dd y
x 0 dd
insert s e
of t consist
the lp commands
cd 0 then
0 handle case
case is empty
theory of linearcontainer
t consist of
completion procedure to
is empty c
prove x y
dd e 2
the lsl checker
empty q 0
the conjecture to
if cd 0
x y dd
converts clause in
proof obligation for
in a proof
first order logic
proof by cases
case e 0
rules and deduction
a deduction rule
equations and rewrite
of the implication
is to say
e 2 x
a logical system
that is to
the conjecture is
the proof obligation
of the conjecture
s c t
and rewrite rules
implies clause of
cd 0 cd
then if cd
the trait linearcontainer
addw v cd
in lp as
syntax and static
case v 0
theory containment that
z proofs by
the larch prover
declare sorts e
to check lsl
dd y 0
how lp is
q qed prove
lp is used
of lsl specifications
lp commands that
and static semantics
performance of lp
assumes coordinate includes
true dd f
an lsl trait
