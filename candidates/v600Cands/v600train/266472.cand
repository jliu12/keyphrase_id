redundancies
implication
circuit
redundancy
implications
net
nets
circuits
omega
combinational
label
replacement
removal
latches
labelled
learning
stuck
unobservability
sequential
labels
gate
compatible
labelling
1i
0i
overwritten
overwriting
inverters
latch
unjustified
recursive
gates
redundant
hn
learnt
optimisation
unobservable
lr
propagate
offset
delay
implying
a2
c6
ha
bdd
vertex
cares
learn
delayed
propagating
s35952
untestability
safe
optimised
compatibility
script
constants
s953
red
hm
berkeley
reset
observability
o1
indicators
propagation
contradicted
a1
fanout
rules
mapped
transduction
implied
area
n2
synchronizing
split
inputs
rugged
inconsistent
n1
notion
2v
iyer
logic
cpu
inferred
invoking
permissible
implication graph
recursive learning
redundancy removal
the circuit
circuit graph
an implication
sequential redundancies
net n
delay replacement
7 1i
n i
stuck at
area reduction
a net
constant v
7 0i
current implication
a omega
assumption a
an assumption
labelled with
the redundancies
combinational redundancies
circuit obtained
is labelled
sequential circuits
of nets
graph for
time offset
redundancies we
safe replacement
learn implications
hn 7
of implications
case split
omega at
and gate
input gates
of labels
omega omega
the implication
original circuit
the net
for implying
consistent assumption
propagate implications
v redundant
implications from
the implications
a circuit
split on
at v
label n
new circuit
1 redundant
nets in
circuit c
a label
large circuits
with recursive
circuit the
is unobservable
power up
an and
replacement of
redundancy identification
compatibility of
removal algorithm
is overwritten
global reset
mapped area
single net
from ha
sequential optimisation
removal without
delayed safe
other nets
delayed replacement
redundancies from
setting net
gate implies
unobservability indicators
sequential redundancy
ha 7
net n2
with unobservability
symbolic time
redundancy remove
combinational redundancy
redundancies without
an implication graph
implication graph for
stuck at v
the circuit graph
circuit obtained by
the circuit obtained
a omega at
set of labels
in the circuit
the implication graph
with recursive learning
of the circuit
an and gate
n i gamma1
the original circuit
rules for implying
at v redundant
a current implication
an assumption a
delay replacement for
a circuit graph
a consistent assumption
and n i
redundancy removal algorithm
the circuit c
the new circuit
reduction in area
is labelled with
omega omega omega
use the notion
an assumption on
assumption a is
be a consistent
combinational redundancy removal
the circuit we
constants with unobservability
a single net
sequential redundancies without
cycle stuck at
if a label
from assumption a
net n with
on other nets
mapped area after
with constant v
delayed safe replacement
redundancy removal with
safe replacement of
hn 7 0i
net n2 is
at 1 redundant
global symbolic time
recursive learning we
the redundancy identification
removal with recursive
from ha 7
v redundant we
redundancy removal without
the compatibility of
replacement of the
n i 1
of n i
is stuck at
graph for n
then the circuit
from an assumption
at a net
be inferred at
case split on
obtained by setting
c with 0
2 input gates
two input gates
number of latches
the notion of
in which n
net n is
by the algorithm
in the implication
consider the circuit
n i are
for large circuits
circuit is a
a net n
don t cares
labelled with a
is a current
a constant is
of an and
stuck at 1
