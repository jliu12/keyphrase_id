preemption
cache
rmb
rmbs
gen
lmb
preempted
preemptions
schedulability
refill
blocks
block
lmbs
task
response
priority
worst
delay
tasks
wcet
instruction
preemptive
referenced
mapped
memory
cfg
references
associative
scheduler
caches
queue
pc
interference
pessimistic
reference
reload
preempting
invocations
null
timing
cycles
reloading
scheduling
wcets
lud
yudong
fft
marginal
fir
costs
deadline
r3000
utilization
excepting
sang
caching
scenario
lms
resumes
fm
rectify
minsuk
lyul
orst
oldout
flow
replaces
timer
vii
reaching
mooney
busquets
mataix
tomiyama
staschulat
automation
kandemir
monotonic
hiroyuki
r3010
gun
cacheable
predicted
codesign
europe
lru
kolcu
schedulable
unpredictable
explained
gen c
cache related
related preemption
preemption cost
preemption delay
cache blocks
cache block
memory block
useful cache
case response
rmb c
the cache
block c
memory blocks
response time
basic block
worst case
out b
of preemptions
of cache
cache set
cache memory
task set
if gen
the worst
case preemption
the preemption
c b
schedulability analysis
c out
cache refill
refill time
of useful
lmb c
execution point
cost table
block b
to cache
preempted task
during r
the rmbs
in b
the task
last reference
proposed technique
preemption costs
r k
real time
task interference
per task
task analysis
set associative
preemptions 1
rmbs of
delay queue
of tasks
blocks at
priority task
case cache
block whose
each task
preemption scenario
point p
c in
reference to
each cache
is preempted
analysis technique
block that
priority tasks
rmbs at
set gen
and rmb
marginal preemption
block references
set c
direct mapped
a task
of task
the proposed
run queue
inter task
pc i
a preempted
preemptions of
fixed priority
instruction cache
first reference
time systems
re referenced
cache related preemption
related preemption delay
worst case response
gen c b
cache block c
useful cache blocks
case response time
of useful cache
the worst case
c in b
basic block b
c out b
cache set c
if gen c
worst case preemption
the preemption cost
the cache related
number of useful
preemption cost table
cache refill time
rmb c out
cache blocks at
rmb c in
per task analysis
g j l
the memory block
the cache refill
the proposed technique
c b is
block c i
a memory block
memory block that
number of preemptions
case cache related
of preemptions 1
preemptions 1 cost
to cache set
to cache block
worst case cache
the task set
response time of
each cache block
memory block whose
pc i r
mapped to cache
the delay queue
of cache related
in basic block
related preemption cost
the basic block
at point p
last reference to
data cache memory
memory block references
marginal preemption cost
c if gen
and rmb c
b if gen
gen c if
inter task interference
of cache blocks
the last reference
real time systems
in the cache
each basic block
case preemption scenario
task is preempted
by a preempted
a preempted task
refill time is
higher priority tasks
set associative cache
of the worst
the run queue
in b and
the set gen
set gen c
th marginal preemption
memory blocks of
f gen c
the rmbs of
cache blocks in
linear programming problem
during r i
useful cache block
block c at
preemption delay of
case preemption cost
of preemptions of
reference to c
