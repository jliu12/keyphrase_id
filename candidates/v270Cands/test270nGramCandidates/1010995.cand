erlang
locker
client
crl
starvation
pending
clients
resources
specication
resource
locks
demanded
exclusion
verication
ok
mutual
server
release
eects
request
checker
huch
gen_server_reply
identier
callback
rst
requests
supervision
loop
ericsson
reply
evtfollow
handle_call
mcrlarg1
checking
processes
toolset
self
yn
releases
starve
notied
promela
pathfinder
send_reply
eect
java
tag
supervisor
alternation
viz
y1
transition
requesting
eld
stamp
served
module
translate
gen
scenario
roy
modules
generic
translation
deadlock
actions
locks2
fredlund
check_availables
erlangterm
obtainables
axd
ebaran
newlocks
chanchal
csar
all_pendings
xs
message
atm
calculus
critical
action
noll
ald
access
tool
hours
prover
the locker
the erlang
crl specication
the client
model checking
the crl
client 3
access pending
the pending
mutual exclusion
client 1
generic server
no starvation
erlang programs
in erlang
the clients
the resource
pending list
demanded resources
of erlang
transition system
side eects
clients and
server call
client 2
on erlang
handle call
model checker
side eect
pending 3
critical section
resources are
pending processes
locker algorithm
gen server
supervision tree
erlang code
all demanded
two resources
in crl
erlang modules
client is
call function
of resources
pending access
callback module
erlang to
repeatedly request
erlang september
erlang program
alternation free
this locker
one crl
and locker
y1 yn
locker self
locker resources
clients repeatedly
end locks
starvation is
to crl
the specication
a resource
access to
of clients
3 access
exclusion property
eect free
resources and
three clients
get access
all resources
with side
specication the
the resources
verication of
resources the
exclusion and
resource a
few hours
the mutual
loop locker
notied and
free functions
starvation problem
gets access
demanded resource
requests resource
ok self
to erlang
the crl specication
pending 3 3
the client is
to the resource
in the erlang
the pending list
resources are available
gen server call
the generic server
the transition system
of erlang programs
on erlang september
3 3 access
crl specication the
of the pending
side eect free
workshop on erlang
clients repeatedly request
of the locker
demanded resources are
the erlang modules
the clients repeatedly
all demanded resources
the mutual exclusion
the model checking
the critical section
mutual exclusion property
with side eects
mutual exclusion and
sigplan workshop on
acm sigplan workshop
three clients and
rst come rst
eect free functions
the erlang program
access pending access
a rst come
clients and locker
pending access pending
absence of deadlock
clients and resources
the supervision tree
the gen server
client 1 and
access pending 3
the handle call
handle call function
gets access to
one crl specication
loop locker resources
to the crl
functions with side
is notied and
in the pending
the pending processes
access to the
number of clients
number of resources
of clients and
resource and the
to source transformation
a model checker
get access to
a resource is
model checking tool
case study we
a few hours
source to source
in the transition
model checking for
of the resource
the locker process
list of pending
3 access pending
if all demanded
access 2 pending
implementation in erlang
ok self locker
list of resources
in crl a
of the crl
a 1 action
to erlang transformation
specication the erlang
pending list access
28 2005 tallinn
3 to starve
and no starvation
want to access
resource as an
