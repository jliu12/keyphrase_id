action
ada
protected
vote_t
atomic
exception
package
controller
common_types
recovery
conversation
aborted
actions
params
wait_abort
exception_id
raised
abort
killed
releasing
entry
signal_abort
exceptions
vote
atc
param
tasks
commit
randell
private
atomic_action_failure
at_least
shared_data
conversations
raise
body
obj_type
active
tagged
processes
requeue
t1
action_t
robot_action
fault
nested
t3
wait
abortable
global_action_support
atomic_action_support
deserter
error_id
final_result
finalisation
romanovsky
indivisibility
backward
informed
campbell
wellings
robot
packages
triggering
remote
finalize
finished
entered
rpc
axes_action
first_here
new_pos
wait_cleanup
extended_type
my_action_t
action_controller
new_conversation
recovery_cache
third_here
local_action_support
action_id
the_data
begin
concurrent
t2
coordinator
subaction
task
object
indivisible
atomic action
atomic actions
the action
is begin
error recovery
vote vote_t
params param
protected object
action controller
exception when
the conversation
ada 95
e out
in ada
is procedure
e others
nested action
the package
procedure t1
active in
implement atomic
commit decision
processes active
entry wait_abort
action is
backward error
a protected
package body
is entry
protected objects
then abort
param called
entry done
wait_abort e
an atomic
c done
exception handling
triggering event
protected body
all tasks
param is
out exception_id
begin code
common_types use
with common_types
wait vote
procedure signal_abort
abort begin
done commit
use common_types
called by
the atomic
the controller
protected type
remote call
entry wait
when e
forward error
out vote_t
t1 params
raise atomic_action_failure
vote_t result
ada exceptions
raised in
the exception
processes involved
tagged types
result out
any persistent
three tasks
is raised
action if
by task
the processes
aborted then
campbell and
vote_t when
signal_abort e
signal completion
done vote
completion exception
all processes
internal action
action and
an exception
the ada
and randell
private entry
fault tolerance
persistent data
backward error recovery
the atomic action
an atomic action
when e others
exception when e
active in the
forward error recovery
in the action
processes active in
param called by
wait_abort e out
to implement atomic
params param called
called by task
is entry wait_abort
common_types use common_types
begin code to
a c done
entry wait_abort e
entry wait vote
e out exception_id
done commit decision
then abort begin
wait vote vote_t
abort begin code
with common_types use
the internal action
params param is
any persistent data
implement atomic action
vote_t result out
procedure t1 params
result out vote_t
vote vote_t result
in ada 95
code to implement
signal completion exception
out vote_t when
procedure signal_abort e
t1 params param
entry done vote
the action if
campbell and randell
c done commit
completion exception when
done vote vote_t
a protected object
in the conversation
of the package
is begin if
the action and
the action is
burns and wellings
exception is raised
of the action
entry entered e
t3 params param
procedure t3 params
select then abort
atomic actions with
use common_types package
atomic action including
decision signal completion
entered e out
vote vote_t procedure
e out error_id
commit decision signal
out exception_id entry
atomic action failure
the action controller
t2 params param
leave the action
actions with forward
or releasing is
procedure t2 params
controller is entry
processes involved in
the triggering event
is begin select
raised in all
the body of
in the atomic
protected object is
count 0 then
of atomic actions
the protected object
in an atomic
a nested action
else releasing false
releasing true else
