rtg
register
dag
dsps
dsp
dags
instruction
m5
datapath
schedule
dismanteling
allocation
snf
tms320c25
sacl
optschedule
lac
aho
instructions
acyclic
dismantle
trees
mpy
architectures
isa
edges
registers
rtgs
spill
olive
operands
sc
tree
m7
araujo
breaking
sethi
subtrees
expression
spac
deadlock
reconvergent
subtree
dspstone
schedules
johnson
edge
spills
generation
pseudo
m0
pac
tms320
leaf
malik
code
m2
scheduled
processors
heterogeneous
memory
m3
raw
1976
architecture
m6
m4
apac
fanout
biquad
wess
heuristic
operand
selection
yunheung
paek
benchmark
allocated
marwedel
instruments
broken
optimality
homogeneous
kernel
sharad
iir
assembly
disconnected
scheduler
subexpressions
the rtg
natural edges
expression tree
code generation
instruction selection
generation for
component trees
register allocation
pseudo natural
optimal code
point dsps
expression trees
the dag
register architectures
through memory
expression dag
allocation deadlock
dsps delta
leaf dags
acyclic rtg
rtg is
rtg of
natural edge
fixed point
the datapath
sc schedule
dsp architectures
heterogeneous register
the tms320c25
an expression
dag into
self loop
partial register
memory register
memory position
dsp kernel
architecture rtg
u v
of figure
the instruction
sc schedules
a sacl
purpose architectures
m5 a
johnson 1976
spac a
for fixed
three address
a a
dsp processors
homogeneous register
is acyclic
edge u
araujo and
multiple fanout
dsps are
m2 a
and johnson
register transfer
architectures which
dag of
nodes u
r i
basic blocks
single register
node r
for dsp
notice that
full dags
tms320 family
have acyclic
t m5
left first
m5 m5
snf schedule
m5 p
spill free
mpy m5
acyclic rtgs
algorithm optschedule
sacl m5
for expression
aho and
the code
r 1
operands from
an acyclic
and register
digital signal
register a
code generation for
pseudo natural edges
in the rtg
an expression tree
fixed point dsps
point dsps delta
for fixed point
generation for fixed
the rtg of
go through memory
the expression dag
the rtg is
rtg is acyclic
a natural edge
dag of figure
an acyclic rtg
partial register allocation
rtg of figure
optimal code generation
no self loop
an allocation deadlock
and johnson 1976
general purpose architectures
aho and johnson
in the datapath
edge u v
instruction selection and
selection and register
a a a
for expression trees
homogeneous register architectures
and register allocation
m5 p t
the component trees
expression dag of
m5 m5 a
any expression tree
mpy m5 p
optimal code for
sacl m5 m5
have acyclic rtgs
has an acyclic
a sacl m5
leaf dags and
heterogeneous register architectures
p t m5
the instruction corresponding
the architecture rtg
for an expression
consider for example
of optimal code
its operands from
node r i
expressions with common
optimal instruction selection
instruction corresponding to
the tms320c25 processor
allocation and instruction
aho et al
a self loop
the instruction selection
with common subexpressions
for the tms320c25
through the datapath
the same register
not go through
in the architecture
is free of
of figure 6
a memory operation
and t 2
of code generation
be an expression
in the dag
does not go
memory position m
iir one biquad
and pseudo natural
spill free schedule
mpy m0 p
pass through memory
phase section 5
m0 p t
generation for dsp
produce optimal code
the dsp kernel
that the rtg
memory register architectures
breaking edge e
natural and pseudo
