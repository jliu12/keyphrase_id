struct
modularization
stack
lattice
queue
concept
attributes
int
isempty
modules
concepts
isemptystack
isemptyq
partitions
enq
atomic
mammal
fcats
tvertex
module
fields
tangled
worklist
chimpanzees
dolphins
tedge
tface
chull
whalesg
sp
partition
legged
attribute
front
subconcept
fhair
marine
coveredg
pop
hair
push
deq
complemented
objects
fintelligent
obad
dogsg
whales
fchimpanzees
initstack
sups
initq
void
bot
return
mammals
modularizations
friend
extents
dogs
cats
humans
identifying
thumbedg
penta
fintelligentg
thumbed
untangle
fdolphins
ffour
marineg
i2i
koschke
tease
page
fff
suprema
wilde
canfora
offers
sizeof
gerardo
stacks
private
extent
engineer
analyzer
declared
malloc
monolithic
concept analysis
concept lattice
struct queue
struct stack
of struct
a concept
atomic partition
fields of
atomic concepts
uses fields
the concept
g int
potential modules
the stack
the atomic
and queue
concept partition
queue example
the modularization
stack and
of concepts
mammal example
has argument
q back
concept partitions
the mammal
isempty return
analysis approach
modularization is
legged hair
dolphins humans
q front
chull c
stack module
that concept
a context
c code
return type
data types
int i
the attributes
return 1
f return
on page
context relation
struct types
return sp
stack concept
modularization problem
concepts c
complemented extension
if isempty
use fields
hair covered
proposed modularization
void enq
is struct
defined struct
abstract data
negative information
concept c
class queue
struct type
queue module
stack queue
type struct
analysis to
to identify
partitions of
new stack
page 8
lattice from
of type
queue q
input program
the worklist
argument of
of attributes
the user
base int
concept analyzer
dogs dolphins
isemptyq and
uses concept
covered intelligent
and enq
stack return
extent containing
stack front
f private
the concept lattice
fields of struct
a concept lattice
stack and queue
uses fields of
the concept analysis
concept analysis to
concept analysis approach
and queue example
the atomic partition
of struct queue
of a concept
argument of type
int i f
the atomic concepts
a concept partition
the mammal example
has argument of
struct queue q
of struct stack
of the concept
the stack and
f if isempty
use fields of
proposed modularization is
queue and stack
of type struct
not use fields
new stack queue
user defined struct
type is struct
an atomic partition
concept lattice and
concept lattice from
isempty return 1
the proposed modularization
a stack module
legged hair covered
stack queue size
if isempty return
that concept analysis
the modularization problem
concept lattice is
partitions of a
on page 8
if the proposed
return type is
the input program
is a concept
the fields of
return 1 if
for the mammal
a scale the
int base int
hair covered intelligent
isempty f return
in the mammal
no overflow check
concept lattice for
the context relation
int isempty f
return 1 return
scale the user
apply concept analysis
fine a scale
analysis approach is
of concept analysis
g int pop
on too fine
queue q f
tangled stack and
uses concept analysis
struct stack return
atomic partition of
dolphins humans whalesg
a complemented extension
four legged hair
isemptyq and enq
of atomic concepts
is on too
dogs dolphins humans
base g int
lattice in roughly
to the modularization
struct stack s
context relation for
a queue module
too fine a
covered intelligent marine
the tangled stack
