callsite
loc
slicer
contextrecovery
obj
slicing
processcall
alias
markq
slice
markp
lh
interprocedural
backbind
objq
locations
aset
callsites
modp
recovery
objp
referenced
ars
objr
lrz
analyses
light
ciency
accessed
reuse
calleev
spurious
weight
ci
mod
name
statement
f1
endfor
nonlocal
foreach
dereferences
memory
indirect
slices
ects
precision
pointer
endif
mark
exit
computepslice
pslice
markr
propagates
landi
location
checks
aliased
driven
object
ryder
invokes
update
propagated
ectiveness
calls
cr
cfg
ect
statements
andersen
invoked
harrold
aliasing
cache
erent
names
standards
candidate
ev
elseif
cient
modification
darren
mock
reports
polyvariant
atkinson
binds
loc is
memory locations
context recovery
weight context
a callsite
object name
reuse driven
partial slicer
program analyses
light weight
memory location
procedure under
callsite to
specific callsite
driven slicer
partial slicing
alias information
markq l
information provided
objq l
the reuse
locations that
program analysis
q exit
mod at
modified by
a procedure
modification side
mark f
location loc
calls update
by light
if loc
markp loc
the precision
at statement
the e
the callsite
statement 16
slicing standard
spurious information
partial slice
ciency of
at c
side e
interprocedural slicing
under c
the partial
e ciency
in p
name set
nonlocal memory
obj at
objr loc
name obj
relevant inputs
exit u
statement 8
using information
program information
update p
obj is
slicer on
formal parameter
p under
the slice
referenced by
accessed by
then loc
mark f1
callsite c
improved slicer
lrz algorithm
the lrz
the memory
s v
of mod
p loc
indirect object
program slicing
precision and
the slicer
callsite computed
callsite the
each callsite
calleev ars
objp loc
information propagated
and objq
object names
light weight context
weight context recovery
the reuse driven
the partial slicer
a procedure under
a specific callsite
under a specific
reuse driven slicer
memory locations that
procedure under a
information provided by
at a callsite
using information provided
by a procedure
the memory locations
of program analyses
modification side e
memory location loc
mod at a
a program analysis
by light weight
a memory location
of memory locations
partial slicing standard
provided by light
of mod at
if loc is
the e ciency
e ciency of
the precision and
modified by q
q exit u
partial slicer on
by p under
memory locations in
invokes the partial
p under c
the improved slicer
markp loc is
the lrz algorithm
ciency of program
size of mod
the light weight
l is updated
improve the precision
locations that are
alias information provided
update p loc
accessed by a
the spurious information
and objq l
callsite computed by
mark f mark
indirect object name
object name obj
specific callsite to
reduce the spurious
the relevant inputs
the partial slice
markq l is
a callsite computed
referenced by p
the name set
loc is not
spurious information propagated
the callsite to
an object name
precision and the
set of memory
improve the e
is updated with
many program analyses
locations accessed by
a formal parameter
the called procedure
side e ects
context recovery to
loc is accessed
cache q exit
context recovery can
by q at
the ci mod
algorithm calls update
at statement 8
context recovery algorithm
c objr loc
q at c
a c objr
nonlocal memory location
use pointer variables
