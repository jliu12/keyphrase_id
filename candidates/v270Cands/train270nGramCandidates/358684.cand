c2p
p2c
pk
nextact
fsm
miv
repetitive
outer
array
stride
accessed
cyclic
pos
block
affine
processor
siv
subscripts
loop
jump
fig
offset
tables
compiling
processors
subscript
gcd
nested
position
access
cyclically
addresses
blocks
colored
fortran
accesses
mivs
corresponded
inner
active
element
iteration
hpf
recorded
ordered
address
distributions
memory
record
virtual
reference
iterations
references
generation
termed
deltam
endif
constructions
orderly
analyses
sequences
preprocessing
s2
traverse
ramanujam
plexity
s1
enddo
layout
compilation
comparisons
cessor
positions
evidently
viewpoint
vienna
distribution
allocated
classes
classified
mimd
lambdak
nextactive
asoffset
nex
istics
induction
comp
spectively
dist
starting element
class number
global start
starting elements
accessed element
element on
access stride
the starting
outer loop
c2p table
local address
start computation
address generation
active block
array reference
the accessed
access sequences
local memory
array elements
affine subscripts
miv address
block cyclic
the local
with affine
elements on
a block
computation algorithm
the block
memory access
repetitive pattern
class numbers
the fsm
ordered sequence
the miv
p2c table
local addresses
access sequence
nested loop
the outer
the array
the access
on processor
data parallel
gcd pk
pk gcd
fsm approach
two nested
generation problem
loop iteration
stride is
o pk
cyclic distribution
a repetitive
references with
the class
compiling array
nextact and
parallel programs
communication sets
of array
on processors
in fig
array references
and jump
address of
addresses of
jump tables
pos s
class 0
pk s
affine subscript
each outer
the position
processor p
block size
accessed elements
of class
table is
no accessed
distribution block
tables used
o 1
elements accessed
element for
block on
recorded by
cyclic distributions
the c2p
suitable class
to c2p
the starting element
the class number
the starting elements
class number of
the access stride
local memory access
accessed element on
the local memory
start computation algorithm
starting element on
of the starting
outer loop iteration
local address of
the array reference
memory access sequences
two nested loop
the local address
the outer loop
the global start
generate the local
miv address generation
data parallel programs
access stride is
memory access sequence
a global start
starting elements on
the miv address
address generation problem
element on the
array references with
processor p 0
a two nested
pk gcd pk
local addresses of
references with affine
an active block
access sequences for
a repetitive pattern
the accessed element
on the block
in data parallel
the ordered sequence
of array elements
nextact and jump
element on processor
and jump tables
starting element for
on a block
for each outer
element on a
and the access
the memory accesses
block cyclic distribution
address generation for
within a two
shown in fig
of a block
address of the
the accessed elements
of the fsm
case of s
elements accessed by
with affine subscripts
the local addresses
class numbers on
each outer loop
gcd pk s
processors with cyclic
no accessed element
elements on processors
pk s 1
compiling array references
of class numbers
distribution block size
given global start
sequence of class
access sequence for
the distribution block
is the access
on processor p
obtain the class
memory accesses of
the position of
communication sets for
to correspond to
than the block
array elements accessed
a given global
on a processor
can obtain the
