heaps
heap
loser
deletemin
buffer
os
cache
insertion
deletion
queues
insertions
buffers
emptying
external
insert
ary
charge
group
priority
gr
cached
deletemins
merge
comparisons
mk
queue
caches
merging
memory
sorting
heapsort
groups
sequences
log
deletions
binary
disks
batched
refilling
brodal
charged
aligned
amortized
faults
sorted
sanders
keys
instruction
slot
algorithmics
emptied
501501024
fishspear
inputs
calendar
bottom
adaption
km
compiler
refilled
katajainen
gerth
crauser
influence
suffice
alpha
o6
canonical
merged
inserted
tree
mergesort
65536
16384
accesses
2r
deleted
disk
registers
arithmetics
saved
ultra
mhz
associative
fig
internal
pages
processor
accessed
memories
binary heaps
i os
external memory
sequence heaps
group buffers
deletion buffer
4 ary
insertion buffer
group buffer
sequence heap
cached memory
ary heaps
level cache
loser tree
group gr
the loser
the deletion
priority queues
cache faults
the insertion
group g
way merging
into group
insert deletemin
aligned 4
heaps and
k way
log k
bottom up
heaps are
binary heap
loser trees
insert log
os for
data structure
second level
free slot
key comparisons
the heap
log m
priority queue
t insert
way merge
buffer 1
buffer and
heap bottom
gr gamma1
canonical path
up aligned
parallel disks
heap fig
emptying groups
deletemin insert
heap sequence
ary heap
comparisons per
log bottom
g i
main memory
memory algorithms
first level
internal memory
up binary
heaps for
k sequences
m comparisons
a charge
per insertion
tree data
b i
the external
new sequence
of priority
g 1
caches on
i log
we charge
the group
charge of
when group
k merge
small queues
i deletemins
r groups
improved array
for cached
insert heap
array heap
up heuristics
2r b
the deletion buffer
4 ary heaps
the insertion buffer
b i os
second level cache
k way merging
aligned 4 ary
deletion buffer and
binary heaps and
the loser tree
i os for
group g 1
external memory algorithms
the group buffers
the external memory
group buffer 1
t insert log
group g i
of i os
number of i
heaps and 4
of cache faults
i log k
heap sequence heap
external memory and
log bottom up
and cached memory
loser tree data
heap bottom up
binary heap bottom
up binary heap
bottom up aligned
up aligned 4
sequence heap fig
insert log bottom
the canonical path
ary heap sequence
group buffers and
into group g
a sequence heap
and 4 ary
4 ary heap
first level cache
bottom up binary
of caches on
influence of caches
the second level
caches on the
o log k
log m comparisons
group gr gamma1
sequence heaps are
a charge of
bottom up heuristics
memory and cached
k sorted sequences
deletemin insert deletemin
for cached memory
log k i
binary heaps are
insert deletemin insert
to i deletemins
no free slot
cached memory in
3 7 8
for large inputs
up to i
of key comparisons
of size up
1 b i
is no free
can be charged
another paper we
of priority queues
size up to
level cache the
performance on a
2 b i
be charged to
be large enough
the smallest element
number of key
tree data structure
for the insertion
number of cache
of size m
log k n
about a factor
the resulting sequence
in another paper
