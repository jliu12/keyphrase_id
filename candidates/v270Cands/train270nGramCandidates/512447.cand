esp
firmware
vmmc
safety
spin
freed
bugs
checker
objectid
myrinet
allocation
programmable
channels
memory
devices
objects
device
object
management
card
compiler
immutable
channel
objectids
sharec
count
ectiveness
malloc
programmer
overhead
di
reference
mutable
ort
pgm
pointers
freeing
debug
countc
process1
prfree
sent
dangling
processes
allocated
interface
mbytes
counts
exhaustively
runtime
erent
leaks
cast
copying
remote
bug
dma
cult
chan1
reliablesend
processa
checking
liveness
sharing
garbage
debugging
manage
checkers
frees
pointer
counting
ease
machines
p1
deep
receiving
array
recursive
bu
verify
cpu
overheads
decremented
ciently
gigabit
processb
entryt
painstaking
9975011
localreq
memory safety
the esp
the vmmc
vmmc firmware
memory management
the firmware
reference count
model checker
esp compiler
programmable devices
reference counts
memory allocation
over channels
sent over
in esp
allocation bugs
the memory
the reference
allocation correctness
driven state
of esp
firmware the
the object
management scheme
the device
reference counting
local property
management overhead
verify memory
for programmable
malloc free
firmware to
safety models
state machines
each process
dynamic memory
explicit memory
safety of
state space
pointer sharing
main cpu
firmware for
checker to
model checking
test code
recursive data
esp s
esp program
dangling pointers
esp does
esp provides
correctness a
the program
e ectiveness
ectiveness of
event driven
free interface
network card
esp allows
making memory
device firmware
esp code
esp runtime
objects sent
the myrinet
e ort
the spin
receiving process
remote write
the programmer
bugs in
object is
safety the
deep copy
67 6
to check
data types
network interface
allocated objects
esp the
esp is
spin model
a channel
the compiler
support recursive
the receiving
firmware using
esp processes
spin code
esp supports
the vmmc firmware
the esp compiler
the memory safety
the reference count
memory management scheme
the memory management
event driven state
driven state machines
memory allocation correctness
in the vmmc
memory management overhead
for programmable devices
a local property
verify memory safety
reference count of
in the firmware
memory safety of
recursive data types
memory safety models
allocation correctness a
correctness a local
explicit memory management
sent over channels
the reference counts
model checker to
by the esp
memory allocation bugs
the model checker
on the device
a model checker
safety of each
over a channel
esp does not
e ectiveness of
property of each
to verify memory
vmmc firmware to
the main cpu
objects sent over
the esp runtime
malloc free interface
cyclic data structures
support recursive data
local property of
of each process
the e ectiveness
spin model checker
the spin model
not support recursive
the receiving process
the state space
code to check
dynamic memory management
be implemented e
reference counts on
memory safety the
the firmware the
a malloc free
67 6 seconds
ease of debugging
firmware for programmable
memory safety in
of esp s
maintain the reference
vmmc firmware the
programmer e ort
implemented e ciently
novel memory management
able to exhaustively
to verify safety
the test code
reference count increments
bugs in the
the object is
checker to verify
language for programmable
of the esp
the esp language
cult to find
sent over the
has to be
on the channel
that have to
when an object
provides an explicit
di cult to
this is because
entire state space
to the receiving
of the object
