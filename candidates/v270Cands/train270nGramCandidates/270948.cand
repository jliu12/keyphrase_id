sparse
brs
mrd
inspector
executor
vienna
fortran
hpf
crs
myc
descriptor
runtime
compiler
partv
myr
ro
parallelization
da
xvec
vfcs
processor
parth
jj
loops
matrix
distributions
procs
translation
row
cg
indirections
format
irregular
spmd
sar
preprocessing
array
processors
ra
balance
workload
overhead
indirection
loop
supercomputing
submatrix
bisection
manual
stores
locality
scatter
codes
compilation
indirect
brd
dense
cs
submatrices
compile
cyclic
savings
rows
indices
arrays
sparsity
matrices
mesh
directives
auxiliary
conjugate
declaration
communication
partitioning
formats
accurated
dmmps
syntax
routines
optimizations
accesses
bcsstk29
zima
directive
parallelized
compilers
lanczos
yeh
owner
horizontal
accessed
the brs
vienna fortran
sparse matrix
the sparse
the mrd
distributed sparse
the executor
data parallel
of sparse
the inspector
sparse loops
the compiler
i jj
sparse format
sparse data
sparse representation
data distributions
the element
non zero
the matrix
for sparse
the local
a sparse
ro i
sparse matrices
the runtime
memory overhead
cg algorithm
the vfcs
distributed memory
processor mesh
communication volume
stores the
in vienna
sparse codes
runtime support
load balance
parallel languages
distribution descriptor
brs descriptor
myr myc
non zeros
the cg
element is
the distributed
non local
inspector and
or hpf
the parallelization
good load
the processor
theta y
workload balance
local elements
inspector executor
index domain
vector stores
manual parallelization
the distribution
each processor
zero element
the processors
the vienna
parallel code
the data
the conjugate
x theta
zero elements
the loop
irregular problems
loops of
at runtime
data vector
sparse code
manual version
sparse representations
executor paradigm
and myc
and executor
xvec partv
mrd distribution
representing sparse
2 procs
partv i
executor time
local segment
i myc
for brs
myr and
in executor
distributed sparse representation
the sparse loops
the element is
the runtime support
sparse loops of
the sparse matrix
for the sparse
good load balance
the non zero
data parallel languages
vector stores the
the distributed sparse
vienna fortran or
fortran or hpf
non zero element
loops of the
of the matrix
of the sparse
sparse matrices on
the conjugate gradient
a sparse matrix
non zero elements
the data vector
in vienna fortran
the vienna fortran
x theta y
the cg algorithm
of the cg
in data parallel
of sparse matrix
memory and computation
distributed sparse representations
the local segment
data parallel compilers
sparse loops in
inspector executor paradigm
local elements and
the mrd distribution
that the brs
for the mrd
the brs descriptor
myr and myc
xvec partv i
ro i jj
representing sparse matrices
p 2 procs
for sparse data
the memory overhead
partv i myc
inspector and executor
distributed memory machines
conjugate gradient algorithm
fortran and hpf
the prime factors
within the vfcs
a sparse format
levels of indirection
non local elements
the input matrix
on distributed memory
high performance fortran
data distributions and
the data distributions
available at compile
to the compiler
of sparse data
vienna fortran and
yuan lin yeh
sparse representation of
chun yuan lin
lin yeh ching
for the parallelization
of the element
of supercomputing v
journal of supercomputing
of a sparse
prime factors of
parallelization of sparse
on each processor
to generate efficient
a good load
the parallel code
a data parallel
conference on supercomputing
that the element
compiler and runtime
non zero value
yeh ching chung
the compile time
sparse matrix the
